[{"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\index.js":"1","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\App.js":"2","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\reportWebVitals.js":"3","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\store\\authContext.js":"4","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\reducers\\livePage\\gpsReducer.js":"5","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\reducers\\livePage\\lapTimesReducer.js":"6","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\reducers\\livePage\\monitoringReducer.js":"7","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\reducers\\livePage\\tiresReducer.js":"8","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\reducers\\livePage\\vehicleDynamicsReducer.js":"9","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\reducers\\historyPage\\graphicalViewReducers\\graphicalViewModalReducer.js":"10","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\reducers\\historyPage\\historicalPageReducer.js":"11","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\reducers\\historyPage\\modalReducer.js":"12","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\LandingPage.js":"13","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\HistoricalData.js":"14","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\sensors\\ListSensors.js":"15","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\LiveData.js":"16","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\sensors\\NewSensor.js":"17","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\sensors\\ShowSensor.js":"18","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\sensors\\EditSensor.js":"19","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\users\\ListUsers.js":"20","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\users\\EditUser.js":"21","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\users\\ShowUser.js":"22","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\subTeams\\EditSubTeam.js":"23","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\users\\NewUser.js":"24","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\subTeams\\NewSubTeam.js":"25","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\subTeams\\ShowSubTeam.js":"26","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\subTeams\\ListSubTeams.js":"27","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\sensorCategories\\ListSensorCategories.js":"28","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\sensorCategories\\EditSensorCategory.js":"29","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\sensorCategories\\NewSensorCategory.js":"30","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\sensorCategories\\ShowSensorCategory.js":"31","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\actions\\livePage\\gpsActions.js":"32","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\actions\\livePage\\vehicleDynamicsActions.js":"33","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\actions\\livePage\\lapTimesActions.js":"34","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\actions\\livePage\\monitoringActions.js":"35","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\actions\\livePage\\tiresActions.js":"36","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\actions\\historyPage\\graphicalViewActions\\graphicalViewModalActions.js":"37","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\actions\\historyPage\\historicalPageActions.js":"38","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\actions\\historyPage\\modalActions.js":"39","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\SocketContext.js":"40","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\HistoricalDataModal.js":"41","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\graphicalView\\graphicalViewModal\\GraphicalViewModal.js":"42","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\graphicalView\\GraphicalView.js":"43","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\Header\\Header.js":"44","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\livePage\\HorizontalBars\\HorizontalBars.js":"45","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\livePage\\Footer\\Footer.js":"46","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\sessionView\\SessionView.js":"47","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\livePage\\GForceChart\\GForceChart.js":"48","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\livePage\\LapTimes\\LapTimes.js":"49","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\livePage\\GPSMap\\GPSMap.js":"50","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\livePage\\CurrentDateTime.js":"51","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\forms\\DateForm.js":"52","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\forms\\DriveDaySelectionForm.js":"53","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\forms\\ReviewForm.js":"54","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\forms\\SessionSelectionForm.js":"55","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\forms\\LapSelectionForm.js":"56","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\graphicalView\\graphicalViewModal\\forms\\ReviewForm.js":"57","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\graphicalView\\graphicalViewModal\\forms\\SensorSelectionForm.js":"58","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\login\\Login.js":"59","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\graphicalView\\SensorGraph\\SensorGraph.js":"60","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\login\\Logout.js":"61","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\livePage\\HorizontalBars\\HorizontalBar\\HorizontalBar.js":"62","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\sessionView\\ModalControls\\ModalControls.js":"63","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\sessionView\\LapTimes\\LapTimes.js":"64","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\livePage\\SteeringAngle\\SteeringAngle.js":"65","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\livePage\\VerticalBar\\VerticalBar.js":"66","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\livePage\\TrackPath\\TrackPath.js":"67","C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\livePage\\CarLocation\\CarLocation.js":"68","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\index.js":"69","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\App.js":"70","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\reportWebVitals.js":"71","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\store\\authContext.js":"72","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\reducers\\livePage\\gpsReducer.js":"73","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\reducers\\livePage\\lapTimesReducer.js":"74","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\reducers\\livePage\\monitoringReducer.js":"75","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\reducers\\livePage\\tiresReducer.js":"76","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\reducers\\livePage\\vehicleDynamicsReducer.js":"77","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\reducers\\historyPage\\historicalPageReducer.js":"78","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\reducers\\historyPage\\modalReducer.js":"79","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\reducers\\historyPage\\graphicalViewReducers\\graphicalViewModalReducer.js":"80","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\sensors\\ListSensors.js":"81","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\HistoricalData.js":"82","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\LiveData.js":"83","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\LandingPage.js":"84","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\sensors\\NewSensor.js":"85","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\sensors\\EditSensor.js":"86","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\users\\NewUser.js":"87","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\users\\ListUsers.js":"88","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\sensors\\ShowSensor.js":"89","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\users\\ShowUser.js":"90","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\users\\EditUser.js":"91","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\subTeams\\ListSubTeams.js":"92","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\subTeams\\EditSubTeam.js":"93","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\subTeams\\NewSubTeam.js":"94","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\subTeams\\ShowSubTeam.js":"95","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\sensorCategories\\EditSensorCategory.js":"96","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\sensorCategories\\ListSensorCategories.js":"97","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\sensorCategories\\ShowSensorCategory.js":"98","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\sensorCategories\\NewSensorCategory.js":"99","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\actions\\livePage\\gpsActions.js":"100","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\actions\\livePage\\monitoringActions.js":"101","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\actions\\livePage\\lapTimesActions.js":"102","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\actions\\livePage\\tiresActions.js":"103","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\actions\\livePage\\vehicleDynamicsActions.js":"104","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\actions\\historyPage\\historicalPageActions.js":"105","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\actions\\historyPage\\graphicalViewActions\\graphicalViewModalActions.js":"106","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\actions\\historyPage\\modalActions.js":"107","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\SocketContext.js":"108","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\HistoricalDataModal.js":"109","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\graphicalView\\graphicalViewModal\\GraphicalViewModal.js":"110","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\graphicalView\\GraphicalView.js":"111","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\sessionView\\SessionView.js":"112","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\Header\\Header.js":"113","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\livePage\\Footer\\Footer.js":"114","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\livePage\\HorizontalBars\\HorizontalBars.js":"115","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\livePage\\LapTimes\\LapTimes.js":"116","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\livePage\\GPSMap\\GPSMap.js":"117","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\livePage\\GForceChart\\GForceChart.js":"118","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\livePage\\CurrentDateTime.js":"119","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\forms\\DateForm.js":"120","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\forms\\DriveDaySelectionForm.js":"121","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\forms\\LapSelectionForm.js":"122","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\forms\\SessionSelectionForm.js":"123","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\graphicalView\\graphicalViewModal\\forms\\SensorSelectionForm.js":"124","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\forms\\ReviewForm.js":"125","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\graphicalView\\graphicalViewModal\\forms\\ReviewForm.js":"126","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\sessionView\\LapTimes\\LapTimes.js":"127","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\sessionView\\ModalControls\\ModalControls.js":"128","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\graphicalView\\SensorGraph\\SensorGraph.js":"129","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\login\\Login.js":"130","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\livePage\\HorizontalBars\\HorizontalBar\\HorizontalBar.js":"131","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\login\\Logout.js":"132","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\livePage\\CarLocation\\CarLocation.js":"133","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\livePage\\VerticalBar\\VerticalBar.js":"134","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\livePage\\TrackPath\\TrackPath.js":"135","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\livePage\\SteeringAngle\\SteeringAngle.js":"136"},{"size":2041,"mtime":1637958734618,"results":"137","hashOfConfig":"138"},{"size":2700,"mtime":1637958734596,"results":"139","hashOfConfig":"138"},{"size":375,"mtime":1637958734629,"results":"140","hashOfConfig":"138"},{"size":796,"mtime":1637961713784,"results":"141","hashOfConfig":"138"},{"size":1826,"mtime":1637958734627,"results":"142","hashOfConfig":"138"},{"size":1054,"mtime":1637958734628,"results":"143","hashOfConfig":"138"},{"size":1387,"mtime":1637958734628,"results":"144","hashOfConfig":"138"},{"size":2586,"mtime":1637958734628,"results":"145","hashOfConfig":"138"},{"size":1660,"mtime":1637958734629,"results":"146","hashOfConfig":"138"},{"size":1240,"mtime":1637958734626,"results":"147","hashOfConfig":"138"},{"size":1046,"mtime":1637958734626,"results":"148","hashOfConfig":"138"},{"size":3139,"mtime":1637958734627,"results":"149","hashOfConfig":"138"},{"size":209,"mtime":1637958734619,"results":"150","hashOfConfig":"138"},{"size":633,"mtime":1637958734619,"results":"151","hashOfConfig":"138"},{"size":166,"mtime":1637958734622,"results":"152","hashOfConfig":"138"},{"size":1989,"mtime":1637958734619,"results":"153","hashOfConfig":"138"},{"size":160,"mtime":1637958734622,"results":"154","hashOfConfig":"138"},{"size":163,"mtime":1637958734622,"results":"155","hashOfConfig":"138"},{"size":163,"mtime":1637958734621,"results":"156","hashOfConfig":"138"},{"size":160,"mtime":1637958734624,"results":"157","hashOfConfig":"138"},{"size":258,"mtime":1637958734624,"results":"158","hashOfConfig":"138"},{"size":157,"mtime":1637958734625,"results":"159","hashOfConfig":"138"},{"size":166,"mtime":1637958734623,"results":"160","hashOfConfig":"138"},{"size":154,"mtime":1637958734625,"results":"161","hashOfConfig":"138"},{"size":163,"mtime":1637958734623,"results":"162","hashOfConfig":"138"},{"size":166,"mtime":1637958734624,"results":"163","hashOfConfig":"138"},{"size":169,"mtime":1637958734623,"results":"164","hashOfConfig":"138"},{"size":194,"mtime":1637958734620,"results":"165","hashOfConfig":"138"},{"size":188,"mtime":1637958734620,"results":"166","hashOfConfig":"138"},{"size":185,"mtime":1637958734621,"results":"167","hashOfConfig":"138"},{"size":189,"mtime":1637958734621,"results":"168","hashOfConfig":"138"},{"size":982,"mtime":1637958734599,"results":"169","hashOfConfig":"138"},{"size":937,"mtime":1637958734600,"results":"170","hashOfConfig":"138"},{"size":614,"mtime":1637958734599,"results":"171","hashOfConfig":"138"},{"size":693,"mtime":1637958734600,"results":"172","hashOfConfig":"138"},{"size":1316,"mtime":1637958734600,"results":"173","hashOfConfig":"138"},{"size":724,"mtime":1637958734598,"results":"174","hashOfConfig":"138"},{"size":1252,"mtime":1637958734598,"results":"175","hashOfConfig":"138"},{"size":2208,"mtime":1637958734599,"results":"176","hashOfConfig":"138"},{"size":180,"mtime":1637958734597,"results":"177","hashOfConfig":"138"},{"size":1880,"mtime":1637958734602,"results":"178","hashOfConfig":"138"},{"size":852,"mtime":1637958734605,"results":"179","hashOfConfig":"138"},{"size":10495,"mtime":1637958734604,"results":"180","hashOfConfig":"138"},{"size":1387,"mtime":1637958734601,"results":"181","hashOfConfig":"138"},{"size":1834,"mtime":1637958734613,"results":"182","hashOfConfig":"138"},{"size":1453,"mtime":1637958734609,"results":"183","hashOfConfig":"138"},{"size":751,"mtime":1637958734608,"results":"184","hashOfConfig":"138"},{"size":9738,"mtime":1637958734611,"results":"185","hashOfConfig":"138"},{"size":2039,"mtime":1637958734614,"results":"186","hashOfConfig":"138"},{"size":2111,"mtime":1637958734612,"results":"187","hashOfConfig":"138"},{"size":566,"mtime":1637958734609,"results":"188","hashOfConfig":"138"},{"size":2367,"mtime":1637958734602,"results":"189","hashOfConfig":"138"},{"size":1881,"mtime":1637958734602,"results":"190","hashOfConfig":"138"},{"size":3830,"mtime":1637958734603,"results":"191","hashOfConfig":"138"},{"size":2943,"mtime":1637958734604,"results":"192","hashOfConfig":"138"},{"size":1842,"mtime":1637958734603,"results":"193","hashOfConfig":"138"},{"size":1116,"mtime":1637958734606,"results":"194","hashOfConfig":"138"},{"size":1590,"mtime":1637958734606,"results":"195","hashOfConfig":"138"},{"size":1001,"mtime":1637961710451,"results":"196","hashOfConfig":"138"},{"size":2767,"mtime":1637958734605,"results":"197","hashOfConfig":"138"},{"size":853,"mtime":1637961599435,"results":"198","hashOfConfig":"138"},{"size":1647,"mtime":1637958734613,"results":"199","hashOfConfig":"138"},{"size":1196,"mtime":1637958734608,"results":"200","hashOfConfig":"138"},{"size":1863,"mtime":1637958734607,"results":"201","hashOfConfig":"138"},{"size":2310,"mtime":1637958734614,"results":"202","hashOfConfig":"138"},{"size":1687,"mtime":1637958734615,"results":"203","hashOfConfig":"138"},{"size":1327,"mtime":1637958734615,"results":"204","hashOfConfig":"138"},{"size":4119,"mtime":1637958734608,"results":"205","hashOfConfig":"138"},{"size":2041,"mtime":1637958734618,"results":"206","hashOfConfig":"207"},{"size":2700,"mtime":1637958734596,"results":"208","hashOfConfig":"207"},{"size":375,"mtime":1637958734629,"results":"209","hashOfConfig":"207"},{"size":796,"mtime":1637961713784,"results":"210","hashOfConfig":"207"},{"size":1826,"mtime":1637958734627,"results":"211","hashOfConfig":"207"},{"size":1054,"mtime":1637958734628,"results":"212","hashOfConfig":"207"},{"size":1387,"mtime":1637958734628,"results":"213","hashOfConfig":"207"},{"size":2586,"mtime":1637958734628,"results":"214","hashOfConfig":"207"},{"size":1660,"mtime":1637958734629,"results":"215","hashOfConfig":"207"},{"size":1046,"mtime":1637958734626,"results":"216","hashOfConfig":"207"},{"size":3139,"mtime":1637958734627,"results":"217","hashOfConfig":"207"},{"size":1240,"mtime":1637958734626,"results":"218","hashOfConfig":"207"},{"size":166,"mtime":1637958734622,"results":"219","hashOfConfig":"207"},{"size":633,"mtime":1637958734619,"results":"220","hashOfConfig":"207"},{"size":1989,"mtime":1637958734619,"results":"221","hashOfConfig":"207"},{"size":209,"mtime":1637958734619,"results":"222","hashOfConfig":"207"},{"size":160,"mtime":1637958734622,"results":"223","hashOfConfig":"207"},{"size":163,"mtime":1637958734621,"results":"224","hashOfConfig":"207"},{"size":154,"mtime":1637958734625,"results":"225","hashOfConfig":"207"},{"size":160,"mtime":1637958734624,"results":"226","hashOfConfig":"207"},{"size":163,"mtime":1637958734622,"results":"227","hashOfConfig":"207"},{"size":157,"mtime":1637958734625,"results":"228","hashOfConfig":"207"},{"size":258,"mtime":1637958734624,"results":"229","hashOfConfig":"207"},{"size":169,"mtime":1637958734623,"results":"230","hashOfConfig":"207"},{"size":166,"mtime":1637958734623,"results":"231","hashOfConfig":"207"},{"size":163,"mtime":1637958734623,"results":"232","hashOfConfig":"207"},{"size":166,"mtime":1637958734624,"results":"233","hashOfConfig":"207"},{"size":188,"mtime":1637958734620,"results":"234","hashOfConfig":"207"},{"size":194,"mtime":1637958734620,"results":"235","hashOfConfig":"207"},{"size":189,"mtime":1637958734621,"results":"236","hashOfConfig":"207"},{"size":185,"mtime":1637958734621,"results":"237","hashOfConfig":"207"},{"size":982,"mtime":1637958734599,"results":"238","hashOfConfig":"207"},{"size":693,"mtime":1637958734600,"results":"239","hashOfConfig":"207"},{"size":614,"mtime":1637958734599,"results":"240","hashOfConfig":"207"},{"size":1316,"mtime":1637958734600,"results":"241","hashOfConfig":"207"},{"size":937,"mtime":1637958734600,"results":"242","hashOfConfig":"207"},{"size":1252,"mtime":1637958734598,"results":"243","hashOfConfig":"207"},{"size":724,"mtime":1637958734598,"results":"244","hashOfConfig":"207"},{"size":2208,"mtime":1637958734599,"results":"245","hashOfConfig":"207"},{"size":180,"mtime":1637958734597,"results":"246","hashOfConfig":"207"},{"size":1880,"mtime":1637958734602,"results":"247","hashOfConfig":"207"},{"size":852,"mtime":1637958734605,"results":"248","hashOfConfig":"207"},{"size":10495,"mtime":1637958734604,"results":"249","hashOfConfig":"207"},{"size":751,"mtime":1637958734608,"results":"250","hashOfConfig":"207"},{"size":1387,"mtime":1637958734601,"results":"251","hashOfConfig":"207"},{"size":1453,"mtime":1637958734609,"results":"252","hashOfConfig":"207"},{"size":1834,"mtime":1637958734613,"results":"253","hashOfConfig":"207"},{"size":2039,"mtime":1637958734614,"results":"254","hashOfConfig":"207"},{"size":2111,"mtime":1637958734612,"results":"255","hashOfConfig":"207"},{"size":9738,"mtime":1637958734611,"results":"256","hashOfConfig":"207"},{"size":566,"mtime":1637958734609,"results":"257","hashOfConfig":"207"},{"size":2367,"mtime":1637958734602,"results":"258","hashOfConfig":"207"},{"size":1881,"mtime":1637958734602,"results":"259","hashOfConfig":"207"},{"size":1842,"mtime":1637958734603,"results":"260","hashOfConfig":"207"},{"size":2943,"mtime":1637958734604,"results":"261","hashOfConfig":"207"},{"size":1590,"mtime":1637958734606,"results":"262","hashOfConfig":"207"},{"size":3830,"mtime":1637958734603,"results":"263","hashOfConfig":"207"},{"size":1116,"mtime":1637958734606,"results":"264","hashOfConfig":"207"},{"size":1863,"mtime":1637958734607,"results":"265","hashOfConfig":"207"},{"size":1196,"mtime":1637958734608,"results":"266","hashOfConfig":"207"},{"size":2767,"mtime":1637958734605,"results":"267","hashOfConfig":"207"},{"size":1001,"mtime":1637961710451,"results":"268","hashOfConfig":"207"},{"size":1647,"mtime":1637958734613,"results":"269","hashOfConfig":"207"},{"size":853,"mtime":1637961599435,"results":"270","hashOfConfig":"207"},{"size":4119,"mtime":1637958734608,"results":"271","hashOfConfig":"207"},{"size":1687,"mtime":1637958734615,"results":"272","hashOfConfig":"207"},{"size":1327,"mtime":1637958734615,"results":"273","hashOfConfig":"207"},{"size":2310,"mtime":1637958734614,"results":"274","hashOfConfig":"207"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v65dyc",{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mbc69h",{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504"},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507"},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"512","messages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514"},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517"},{"filePath":"518","messages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"520"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525"},{"filePath":"526","messages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528"},{"filePath":"529","messages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531"},{"filePath":"532","messages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"534","messages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536"},{"filePath":"537","messages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539"},{"filePath":"540","messages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542"},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549"},{"filePath":"550","messages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"552","messages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"554","messages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"556","messages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558"},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"561","messages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563"},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566"},"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\index.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\App.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\reportWebVitals.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\store\\authContext.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\reducers\\livePage\\gpsReducer.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\reducers\\livePage\\lapTimesReducer.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\reducers\\livePage\\monitoringReducer.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\reducers\\livePage\\tiresReducer.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\reducers\\livePage\\vehicleDynamicsReducer.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\reducers\\historyPage\\graphicalViewReducers\\graphicalViewModalReducer.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\reducers\\historyPage\\historicalPageReducer.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\reducers\\historyPage\\modalReducer.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\LandingPage.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\HistoricalData.js",["567"],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\sensors\\ListSensors.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\LiveData.js",["568","569"],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\sensors\\NewSensor.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\sensors\\ShowSensor.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\sensors\\EditSensor.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\users\\ListUsers.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\users\\EditUser.js",["570","571","572"],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\users\\ShowUser.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\subTeams\\EditSubTeam.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\users\\NewUser.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\subTeams\\NewSubTeam.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\subTeams\\ShowSubTeam.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\subTeams\\ListSubTeams.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\sensorCategories\\ListSensorCategories.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\sensorCategories\\EditSensorCategory.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\sensorCategories\\NewSensorCategory.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\pages\\sensorCategories\\ShowSensorCategory.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\actions\\livePage\\gpsActions.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\actions\\livePage\\vehicleDynamicsActions.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\actions\\livePage\\lapTimesActions.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\actions\\livePage\\monitoringActions.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\actions\\livePage\\tiresActions.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\actions\\historyPage\\graphicalViewActions\\graphicalViewModalActions.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\actions\\historyPage\\historicalPageActions.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\actions\\historyPage\\modalActions.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\SocketContext.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\HistoricalDataModal.js",["573"],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\graphicalView\\graphicalViewModal\\GraphicalViewModal.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\graphicalView\\GraphicalView.js",["574","575","576","577","578","579","580","581","582","583","584","585"],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\Header\\Header.js",["586","587"],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\livePage\\HorizontalBars\\HorizontalBars.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\livePage\\Footer\\Footer.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\sessionView\\SessionView.js",["588"],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\livePage\\GForceChart\\GForceChart.js",["589"],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\livePage\\LapTimes\\LapTimes.js",["590","591","592"],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\livePage\\GPSMap\\GPSMap.js",["593","594","595"],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\livePage\\CurrentDateTime.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\forms\\DateForm.js",["596"],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\forms\\DriveDaySelectionForm.js",["597"],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\forms\\ReviewForm.js",["598","599","600","601","602"],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\forms\\SessionSelectionForm.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\forms\\LapSelectionForm.js",["603"],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\graphicalView\\graphicalViewModal\\forms\\ReviewForm.js",["604","605"],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\graphicalView\\graphicalViewModal\\forms\\SensorSelectionForm.js",["606"],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\login\\Login.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\graphicalView\\SensorGraph\\SensorGraph.js",["607","608","609"],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\login\\Logout.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\livePage\\HorizontalBars\\HorizontalBar\\HorizontalBar.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\sessionView\\ModalControls\\ModalControls.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\historyPage\\sessionView\\LapTimes\\LapTimes.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\livePage\\SteeringAngle\\SteeringAngle.js",["610"],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\livePage\\VerticalBar\\VerticalBar.js",[],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\livePage\\TrackPath\\TrackPath.js",["611"],"C:\\Users\\brand\\source\\repos\\DAS-Server\\client\\src\\components\\livePage\\CarLocation\\CarLocation.js",["612","613","614"],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\index.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\App.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\reportWebVitals.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\store\\authContext.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\reducers\\livePage\\gpsReducer.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\reducers\\livePage\\lapTimesReducer.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\reducers\\livePage\\monitoringReducer.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\reducers\\livePage\\tiresReducer.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\reducers\\livePage\\vehicleDynamicsReducer.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\reducers\\historyPage\\historicalPageReducer.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\reducers\\historyPage\\modalReducer.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\reducers\\historyPage\\graphicalViewReducers\\graphicalViewModalReducer.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\sensors\\ListSensors.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\HistoricalData.js",["615"],"import React from 'react';\r\nimport HistoricalDataModal from '../components/historyPage/HistoricalDataModal';\r\nimport GraphicalViewModal from '../components/historyPage/graphicalView/graphicalViewModal/GraphicalViewModal';\r\nimport GraphicalView from '../components/historyPage/graphicalView/GraphicalView';\r\nimport SessionView from '../components/historyPage/sessionView/SessionView';\r\n\r\nfunction HistoricalData() {\r\n    return(\r\n        <>\r\n            <HistoricalDataModal/>\r\n            {/* <GraphicalViewModal/> */}\r\n            <SessionView/>\r\n            <GraphicalView/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HistoricalData;","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\LiveData.js",["616","617"],"import { useState, useContext, useEffect } from 'react';\r\nimport { SocketContext, socket } from '../SocketContext';\r\nimport Footer from '../components/livePage/Footer/Footer';\r\nimport Container from 'react-bootstrap/Container';\r\nimport HorizontalBars from '../components/livePage/HorizontalBars/HorizontalBars';\r\nimport LapTimes from '../components/livePage/LapTimes/LapTimes';\r\nimport GForceChart from '../components/livePage/GForceChart/GForceChart';\r\nimport GPSMap from '../components/livePage/GPSMap/GPSMap';\r\nimport Header from '../components/Header/Header';\r\nimport AuthContext from '../store/authContext';\r\nimport { Redirect } from 'react-router'\r\n\r\nfunction LiveData() {\r\n    const [isLoggedIn, setLogin] = useState(true);\r\n    const authCtx = useContext(AuthContext);\r\n    useEffect(() => {\r\n        authCtx.isLoggedIn()\r\n            .then(response =>\r\n                setLogin(response)\r\n            );\r\n    }, undefined)\r\n\r\n    return (\r\n        <>\r\n            {!isLoggedIn && (\r\n                <Redirect to=\"/\" />\r\n            )}\r\n            <Header />\r\n            <SocketContext.Provider value={socket}>\r\n                <Container fluid>\r\n                    <div className=\"das-container pt-5\">\r\n\r\n                        <div className=\"laptimes\">\r\n                            <LapTimes />\r\n                        </div>\r\n\r\n                        <div className=\"horizontal-bars align-items-center\">\r\n                            <HorizontalBars />\r\n                        </div>\r\n\r\n                        <div className=\"gps-track d-flex align-items-center justify-content-center\">\r\n                            <GPSMap />\r\n                        </div>\r\n\r\n                        <div className=\"g-g-diagram\">\r\n                            <GForceChart />\r\n                        </div>\r\n\r\n                    </div>\r\n                </Container>\r\n                <Footer />\r\n            </SocketContext.Provider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LiveData;","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\LandingPage.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\sensors\\NewSensor.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\sensors\\EditSensor.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\users\\NewUser.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\users\\ListUsers.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\sensors\\ShowSensor.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\users\\ShowUser.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\users\\EditUser.js",["618","619","620"],"import React from 'react';\r\nimport {useForm} from 'react-hook-form';\r\n\r\nfunction EditUser() {\r\n    const {register, handleSubmit, erros } = useForm();\r\n\r\n    return (\r\n        <div>\r\n            Edit User\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditUser;","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\subTeams\\ListSubTeams.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\subTeams\\EditSubTeam.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\subTeams\\NewSubTeam.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\subTeams\\ShowSubTeam.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\sensorCategories\\EditSensorCategory.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\sensorCategories\\ListSensorCategories.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\sensorCategories\\ShowSensorCategory.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\pages\\sensorCategories\\NewSensorCategory.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\actions\\livePage\\gpsActions.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\actions\\livePage\\monitoringActions.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\actions\\livePage\\lapTimesActions.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\actions\\livePage\\tiresActions.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\actions\\livePage\\vehicleDynamicsActions.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\actions\\historyPage\\historicalPageActions.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\actions\\historyPage\\graphicalViewActions\\graphicalViewModalActions.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\actions\\historyPage\\modalActions.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\SocketContext.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\HistoricalDataModal.js",["621"],"import React from 'react'\r\nimport Modal from 'react-modal';\r\nimport {useSelector} from 'react-redux';\r\nimport DateForm from './forms/DateForm';\r\nimport DriveDaySelectionForm from './forms/DriveDaySelectionForm';\r\nimport LapSelectionForm from './forms/LapSelectionForm';\r\nimport SessionSelectionForm from './forms/SessionSelectionForm';\r\nimport ReviewForm from './forms/ReviewForm';\r\n\r\nfunction HistoricalDataModal() {\r\n    const step = useSelector( (state) => state.historyModal.modalStep);\r\n    const modalState = useSelector( (state) => state.historyModal.isModalOpen);\r\n    const selectedDriveDate = useSelector( (state) => state.historyModal.selectedDriveDate);\r\n    const selectedDriveDateIndex = useSelector( (state) => state.historyModal.selectedDriveDateIndex);\r\n    const sessionNumber = useSelector( (state) => state.historyModal.selectedSessionNumber);\r\n    const lapNumber = useSelector( (state) => state.historyModal.selectedLapNumber);\r\n\r\n    const driveDayBeginDate = useSelector( (state) => state.historyModal.searchedDriveDayBeginDate);\r\n\r\n    const driveDayEndDate = useSelector( (state) => state.historyModal.searchedDriveDayEndDate);\r\n\r\n    function renderFormSteps () {\r\n        switch(step) {\r\n            case 1:\r\n                return <DateForm driveDatesData={{driveDayBeginDate, driveDayEndDate}}/>\r\n            case 2: \r\n                return <DriveDaySelectionForm driveDateData={ {selectedDriveDate, selectedDriveDateIndex} }/>\r\n            case 3:\r\n                return <SessionSelectionForm sessionData={sessionNumber}/>\r\n            case 4: \r\n                return <LapSelectionForm lapData={lapNumber}/>\r\n            case 5:\r\n                return <ReviewForm/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={modalState}>\r\n            {renderFormSteps() }\r\n        </Modal>\r\n        )\r\n    }\r\n\r\nexport default HistoricalDataModal;","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\graphicalView\\graphicalViewModal\\GraphicalViewModal.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\graphicalView\\GraphicalView.js",["622","623","624","625","626","627","628","629","630","631","632","633"],"import React, {useEffect, useRef, useState} from 'react';\r\nimport SensorGraph from './SensorGraph/SensorGraph';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {select, bisector, scaleLinear, axisBottom, zoom, zoomTransform} from 'd3';\r\nimport {loadDefaultSensorData} from '../../../actions/historyPage/historicalPageActions'\r\n\r\nfunction GraphicalView() {\r\n    const sensorsData = useSelector( (state) => state.generalHistoricalData.sensorsData);\r\n    const dispatch = useDispatch();\r\n    const [dimensions, setDimensions] = useState({height: 0, width: 0});\r\n    const [currentZoomState, setCurrentZoomState] = useState();\r\n    const margin = {top: 50, right: 50, bottom: 50, left: 50};\r\n    const innerHeight = dimensions.height - margin.top - margin.bottom;\r\n    const innerWidth = dimensions.width - margin.left - margin.right;\r\n\r\n    const svgRef = useRef();\r\n    let svg = null;\r\n    let xScale = null;\r\n    let yScales = {};\r\n\r\n    const renderGraphs = () => {\r\n        let sensorGraphs = [];\r\n        let sensorIndex = 0;\r\n        \r\n        if(dimensions.height !== 0 ) {\r\n            for (const sensor in sensorsData) {\r\n\r\n                yScales[sensor] = null;\r\n    \r\n                let currentMinMax = getLapMinMaxValues(sensorsData[sensor][0]); \r\n    \r\n                // find min and max in all of the sensors laps\r\n                for (const lap of sensorsData[sensor]) {\r\n                    const {minValue, maxValue} = getLapMinMaxValues(lap);\r\n                    currentMinMax = getMinMax(currentMinMax.minValue, minValue, currentMinMax.maxValue, maxValue);\r\n                }\r\n    \r\n                const yScale = scaleLinear().domain( [currentMinMax.minValue, currentMinMax.maxValue]).range( [300, 0] );\r\n                yScales[sensor] = yScale;\r\n    \r\n                const isFirstSensor = sensorIndex === 0 ? true : false;\r\n            \r\n                sensorGraphs = [...sensorGraphs, <SensorGraph minValue={currentMinMax.minValue} maxValue={currentMinMax.maxValue} index={sensorIndex} width={dimensions.width} yScale={yScales[sensor]} isFirstSensor={isFirstSensor} sensor={sensor} sensorData={sensorsData[sensor]} />];\r\n                sensorIndex++;\r\n            }\r\n        }\r\n        \r\n        return sensorGraphs;\r\n    }\r\n\r\n    const getMinMax = (currentMin, minValue, currentMax, maxValue) => {\r\n\r\n        if (currentMin > minValue) {\r\n            currentMin = minValue\r\n        }\r\n\r\n        if(currentMax < maxValue)  {\r\n            currentMax = maxValue\r\n        }\r\n\r\n        return {\r\n            minValue: currentMin,\r\n            maxValue: currentMax\r\n        }\r\n    }\r\n\r\n    const getLapMinMaxValues = (lapValues) =>  {\r\n        let minValue = lapValues[0].value[\"$numberDecimal\"];\r\n        let maxValue = lapValues[0].value[\"$numberDecimal\"];\r\n        \r\n        for (const valueIndex of lapValues) {\r\n        \r\n            if (parseFloat(valueIndex.value[\"$numberDecimal\"].toString()) > maxValue) {\r\n                maxValue = valueIndex.value[\"$numberDecimal\"]\r\n            }\r\n\r\n            if ( parseFloat(valueIndex.value[\"$numberDecimal\"].toString()) < minValue) {\r\n                minValue = valueIndex.value[\"$numberDecimal\"]\r\n            }\r\n        }\r\n\r\n        return {\r\n            minValue,\r\n            maxValue\r\n        }\r\n    }\r\n\r\n    const getLongestLap = () => {\r\n\r\n        let firstSensor = sensorsData[Object.keys(sensorsData)[0]];\r\n        let longestLap = firstSensor[0];\r\n\r\n        for (let lap of firstSensor) {\r\n            if(lap.length > longestLap.length) { \r\n                longestLap = lap;\r\n            }\r\n        }\r\n        return longestLap;\r\n    }\r\n\r\n    const renderMousePerLines = (svg) => {\r\n        for(const sensor in sensorsData) {\r\n            for(const index in sensorsData[sensor]) {\r\n                let mousePerLine = svg.select('.mouseover')\r\n                                    .append(\"g\")\r\n                                    .data([sensorsData[sensor][index]])\r\n                                    .attr(\"class\", \"mouse-per-line\");\r\n\r\n                    mousePerLine.append(\"circle\")\r\n                    .attr(\"r\", 7)\r\n                    .style(\"fill\", \"none\")\r\n                    .style(\"stroke\",\"black\")\r\n                    .style(\"stroke-width\", \"1px\")\r\n                    .attr(\"class\", \"mouse-circle\");\r\n\r\n                    mousePerLine.append(\"text\").attr(\"transform\", \"translate(10,3)\");\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        dispatch(loadDefaultSensorData())\r\n    }, [])\r\n\r\n    useEffect( () => {\r\n        \r\n        if(svgRef.current && Object.keys(sensorsData).length > 0) {\r\n\r\n            const height = Object.keys(sensorsData).length * 600;\r\n            const width = svgRef.current.parentNode.getBoundingClientRect().width;\r\n            setDimensions({height, width});\r\n\r\n            const longestLap = getLongestLap()\r\n\r\n            svg = select(svgRef.current);\r\n\r\n            renderMousePerLines(svg);\r\n            \r\n            xScale = scaleLinear()\r\n                .domain( [  parseFloat(longestLap[0].lapTime[\"$numberDecimal\"].toString() ), parseFloat(longestLap[longestLap.length - 1].lapTime[\"$numberDecimal\"].toString() ) ] )\r\n                .range( [0, dimensions.width] );\r\n \r\n            const xAxis = axisBottom(xScale).ticks(30)\r\n            svg.select('.x-axis').style('transform', `translateY(${Object.keys(sensorsData).length * 600}px)`).call(xAxis)\r\n\r\n        }\r\n        \r\n    }, [sensorsData, svgRef, sensorsData])\r\n\r\n    useEffect( () => {\r\n\r\n        if(svgRef.current && Object.keys(sensorsData).length > 0) {\r\n            svg = select(svgRef.current);\r\n            const longestLap = getLongestLap()\r\n\r\n            xScale = scaleLinear()\r\n                .domain( [  parseFloat(longestLap[0].lapTime[\"$numberDecimal\"].toString() ), parseFloat(longestLap[longestLap.length - 1].lapTime[\"$numberDecimal\"].toString() ) ] )\r\n                .range( [0, innerWidth] );\r\n\r\n            if(currentZoomState) {\r\n                const newXScale = currentZoomState.rescaleX(xScale);\r\n                xScale.domain(newXScale.domain());\r\n\r\n            }\r\n\r\n            const xAxis = axisBottom(xScale)\r\n            const xOffset = ((Object.keys(sensorsData).length - 1) * 350) + 300\r\n            console.log(Object.keys(sensorsData).length )\r\n            console.log(xOffset);\r\n            svg.select('.x-axis').style('transform', `translateY(${xOffset}px)`).call(xAxis)\r\n            // Object.keys(sensorsData).length * 383\r\n\r\n            // const zoomBehavior = zoom().scaleExtent([1, 10]).translateExtent([ [0,0], [dimensions.width, dimensions.height] ])\r\n            // .on(\"zoom\", () => { \r\n            //     const zoomState = zoomTransform(svg.node());\r\n            //     setCurrentZoomState(zoomState);\r\n            //     // console.log(zoomState)\r\n            // })\r\n\r\n            // svg.call(zoomBehavior);\r\n        }\r\n    }, [dimensions, currentZoomState, sensorsData])\r\n\r\n    \r\n    const showLine = (mouseClick) => {\r\n        // console.log(mouseClick);\r\n        const mouseClickX = mouseClick.clientX - margin.left;\r\n        let clickedPosition = null;\r\n\r\n        if(svgRef.current) {\r\n            \r\n            let index1 = 0;\r\n            let sensorIndex = 0; \r\n            for(const sensor in sensorsData) {\r\n                for(const index in sensorsData[sensor]) {\r\n\r\n                    let lapForSensor = sensorsData[sensor][index];\r\n                    let x0 = xScale.invert(mouseClickX);\r\n\r\n                    let roundedX0 = (Math.round(x0  * 10) / 10)\r\n\r\n                    let lapTimes = convertLapTimesToArray(lapForSensor);\r\n                    \r\n                    let bisect = bisector ( (lapTimes) => { return lapTimes} ).center;\r\n\r\n                    let idx = bisect(lapTimes, roundedX0);\r\n                    \r\n                    clickedPosition = lapForSensor[idx];\r\n\r\n\r\n                    let x = mouseClickX;\r\n                    let beginning = x;\r\n                    let end = svg.selectAll('.line')[\"_groups\"][0][index1].getTotalLength();\r\n                    let target = null;\r\n                    let pos = null; \r\n\r\n                    while (true) {\r\n                        target = Math.floor((beginning + end) / 2);\r\n                        pos = svg.selectAll('.line')[\"_groups\"][0][index1].getPointAtLength(target);\r\n\r\n                        if ((target === end || target === beginning) && pos.x !== x) {\r\n                            break;\r\n                        }\r\n\r\n                        if (pos.x > x) end = target;\r\n                        else if (pos.x < x) beginning = target;\r\n                        else break; //position found\r\n                    }\r\n\r\n                    const yCircle = sensorIndex * 350;\r\n\r\n                    // console.log(index1);\r\n                    console.log(\"yCircle\",yCircle);\r\n\r\n                    svg.selectAll('.mouse-per-line').filter(function(d, i) { return i == index1 }).style(\"transform\", `translate(${x}px, ${yCircle + pos.y}px )`);\r\n                    svg.selectAll('.mouse-per-line text').filter(function(d, i) { return i == index1 }).text(`${clickedPosition.value[\"$numberDecimal\"].toString()}`).style(\"margin-left\",\"10px\");\r\n                    index1++;\r\n                }\r\n                sensorIndex++;\r\n            }\r\n\r\n            svg.select('.mouse-line').attr(\"d\",`M${mouseClickX} , ${innerHeight} ${mouseClickX}, 0`).style(\"opacity\",\"1\")\r\n\r\n        }\r\n    }\r\n\r\n    const convertLapTimesToArray = (array) => {\r\n        let lapTimes = []\r\n        for(const index in array) {\r\n            lapTimes = [...lapTimes, +array[index].lapTime[\"$numberDecimal\"]]\r\n        }\r\n        return lapTimes\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n            <svg ref={svgRef} style={{height: `${dimensions.height}`, width: `${dimensions.width}` }}>\r\n                <g style={{transform: `translate(${margin.left}px, ${margin.top}px)`}}>\r\n                    { renderGraphs() }\r\n                    <g className=\"mouseover\">\r\n                        <path className=\"mouse-line\" style={{stroke: \"black\", strokeWidth: \"2px\", opacity: \"1px\"}}></path>\r\n                        <rect width={innerWidth + 5} height={innerHeight} fill={\"none\"} onMouseDown={(mouseClick) => showLine(mouseClick)} pointerEvents={\"all\"} ></rect>\r\n                    </g>\r\n                    <g className=\"x-axis\" /> \r\n                </g>\r\n            </svg>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GraphicalView\r\n","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\sessionView\\SessionView.js",["634"],"import React from 'react';\r\nimport LapTimes from './LapTimes/LapTimes';\r\nimport ModalControls from './ModalControls/ModalControls';\r\nimport {useSelector} from 'react-redux';\r\n\r\nfunction SessionView() {\r\n    const displayedSessions = useSelector(state => state.historyModal.displayedSessions);\r\n\r\n    return (\r\n        <>\r\n            { Object.keys(displayedSessions).map((session, index) => {\r\n                    return (\r\n                        <div>\r\n                            {/* <LapTimes /> */}\r\n                            <ModalControls date={session} sessionData={displayedSessions[session]}/>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SessionView;\r\n","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\Header\\Header.js",["635","636"],"import { useState, useContext, useEffect } from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport logo from '../../FSAE-Logo.png';\r\nimport Login from '../../components/login/Login';\r\nimport Logout from '../../components/login/Logout';\r\nimport AuthContext from '../../store/authContext';\r\n\r\nfunction Header() {\r\n    const [isLoggedIn, setLogin] = useState(false);\r\n    const authCtx = useContext(AuthContext);\r\n    useEffect(() => {\r\n        authCtx.isLoggedIn()\r\n            .then(response =>\r\n                setLogin(response)\r\n            );\r\n    }, undefined)\r\n\r\n    return (\r\n        <Navbar className=\"das-navbar\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n            <Navbar.Brand href=\"#home\">\r\n                <img src={logo} alt=\"FSAE Logo\" />\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    {!isLoggedIn && (\r\n                        <Login />\r\n                    )}\r\n                    {isLoggedIn && (\r\n                        <><Nav.Link href=\"#link\">Suspension</Nav.Link><Nav.Link href=\"#link\">Engine</Nav.Link><Logout /></>\r\n                    )}\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Header;","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\livePage\\Footer\\Footer.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\livePage\\HorizontalBars\\HorizontalBars.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\livePage\\LapTimes\\LapTimes.js",["637","638","639"],"import React, {useEffect, useContext } from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {SocketContext} from '../../../SocketContext';\r\nimport {updateLapTime, updateLapTimes, updateBestLapTime} from '../../../actions/livePage/lapTimesActions'\r\n\r\n\r\nimport './LapTimes.css';\r\n\r\nfunction LapTimes () {\r\n    \r\n    const socket = useContext(SocketContext);\r\n    const lap_time = useSelector( (state) => state.lapTimes.lapTime);\r\n    const dispatch = useDispatch();\r\n    const lapCount = useSelector( (state) => state.lapTimes.lapCount);\r\n    const lapTimes = useSelector( (state) => state.lapTimes.lapTimes);\r\n    const bestLap = useSelector( (state) => state.lapTimes.bestLapTime);\r\n\r\n    useEffect( () =>{\r\n        socket.on('lap_time', (data) => {\r\n            dispatch(updateLapTime(data))\r\n          });\r\n    }, [])\r\n\r\n    useEffect( () => {\r\n        if (lapCount > 1) {\r\n            dispatch(updateLapTimes(`${lap_time}`))\r\n        }\r\n    }, [lapCount])\r\n\r\n    useEffect( () => {\r\n        if (lapCount > 1) {\r\n            getBestLapTime();\r\n        }\r\n    }, [lapTimes])\r\n\r\n  function getBestLapTime() {\r\n        let bestLapTime = lapTimes[0];\r\n        let bestLapNumber = 1;\r\n        for (let i = 0; i < lapTimes.length; i++) {\r\n            if (bestLapTime > lapTimes[i]) {\r\n                bestLapTime = lapTimes[i];\r\n                bestLapNumber = i+1;\r\n            }\r\n        }\r\n        dispatch(updateBestLapTime({time: bestLapTime, lapNumber: bestLapNumber}))\r\n  }\r\n\r\n    return (\r\n        <div>\r\n            <h1>    \r\n                Lap {lapCount}: {lap_time} sec  \r\n            </h1>\r\n            <h2 style={{color: \"red\"}}>\r\n                Best Lap: {lapCount === 1 ?  `${lap_time} (L1)` : `${bestLap.time} (L${bestLap.lapNumber})` }\r\n            </h2>\r\n            <h3>\r\n            {lapTimes.map( (lapTime, index) => {\r\n                    return (<div>L{index + 1}: {lapTime}</div> )\r\n                })\r\n            }\r\n            </h3>\r\n        </div>\r\n    );\r\n} \r\n\r\nexport default LapTimes;\r\n","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\livePage\\GPSMap\\GPSMap.js",["640","641","642"],"import React, {useRef, useLayoutEffect, memo, useEffect, useContext} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport './GPSMap.css';\r\nimport CarLocation from '../CarLocation/CarLocation';\r\nimport TrackPath from '../TrackPath/TrackPath';\r\nimport {SocketContext} from '../../../SocketContext';\r\nimport {updateGPSMapContainerDimensions} from '../../../actions/livePage/gpsActions'\r\nimport {updateSpeed} from '../../../actions/livePage/monitoringActions'\r\n\r\nfunction GPSMap () {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const socket = useContext(SocketContext);\r\n\r\n    const GPSMapSvgPathDimensions = useSelector( (state) => state.gps.GPSMapSvgPathDimensions);\r\n    \r\n    const GPSMapContainer = useRef(null);\r\n\r\n    const speed = useSelector( (state) => state.monitoring.speed);\r\n\r\n    useLayoutEffect( () => {\r\n        if (GPSMapContainer.current) {\r\n            const dimensions = {height: GPSMapContainer.current.offsetHeight, width: GPSMapContainer.current.offsetWidth };\r\n            dispatch(updateGPSMapContainerDimensions(dimensions))\r\n        }\r\n        GPSMapContainer.current = false;\r\n    }, [GPSMapContainer, GPSMapSvgPathDimensions])\r\n\r\n    useLayoutEffect(() => {\r\n        socket.on('speed', (data) => {\r\n            dispatch(updateSpeed(data))\r\n          });\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"gps-container d-flex\" ref={GPSMapContainer}>\r\n                <div className=\"car-speed align-self-start p-2 mt-3\" style={{fontWeight: 700}}>\r\n                    {GPSMapSvgPathDimensions.x === 0 ? \"\" : `${parseInt(speed)} mph`}\r\n                </div>\r\n                {GPSMapSvgPathDimensions.x === 0 ? <h2>Need More Data... </h2> : \"\"}\r\n                    <svg style={{width: \"100%\", height: \"100%\"}} viewBox={`${GPSMapSvgPathDimensions.x} ${GPSMapSvgPathDimensions.y - 5} ${GPSMapSvgPathDimensions.width} ${GPSMapSvgPathDimensions.height + 10}`}  >\r\n                        <TrackPath/>\r\n                        <CarLocation/>\r\n                    </svg>\r\n            </div>\r\n        </>\r\n    ); \r\n}\r\n\r\nexport default memo(GPSMap);","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\livePage\\GForceChart\\GForceChart.js",["643"],"import React, {useContext, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Scatter} from  'react-chartjs-2';\r\nimport {SocketContext} from '../../../SocketContext';\r\nimport SteeringAngle from '../SteeringAngle/SteeringAngle';\r\nimport {updateThrottlePosition, updateBrakePosition, updateGGDiagram} from '../../../actions/livePage/vehicleDynamicsActions'\r\nimport {updateFLTireLoad, updateFLTireTemp, updateFRTireLoad, updateFRTireTemp, updateRLTireLoad, updateRLTireTemp, updateRRTireLoad, updateRRTireTemp} from '../../../actions/livePage/tiresActions'\r\nimport './GForceChart.css';\r\nimport VerticalBar from '../VerticalBar/VerticalBar';\r\n\r\nfunction GForceChart () {\r\n\r\n  const socket = useContext(SocketContext);\r\n\r\n  const gForceData = useSelector( (state) => state.vehicleDynamics.gForceData);\r\n\r\n  const brake_position = useSelector( (state) => state.vehicleDynamics.brakePosition);\r\n  const throttle_position = useSelector( (state) => state.vehicleDynamics.throttlePosition);\r\n\r\n  const FLTireLoad = useSelector( (state) => state.tires.FLTireLoad);\r\n  const FLTireTemp = useSelector( (state) => state.tires.FLTireTemp);\r\n\r\n  const FRTireLoad = useSelector( (state) => state.tires.FRTireLoad);\r\n  const FRTireTemp = useSelector( (state) => state.tires.FRTireTemp);\r\n\r\n  const RLTireLoad = useSelector( (state) => state.tires.RLTireLoad);\r\n  const RLTireTemp = useSelector( (state) => state.tires.RLTireTemp);\r\n\r\n  const RRTireLoad = useSelector( (state) => state.tires.RRTireLoad);\r\n  const RRTireTemp = useSelector( (state) => state.tires.RRTireTemp);\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n    const data = {\r\n        labels: ['Scatter'],\r\n        datasets: [\r\n          {\r\n            label: 'G-G Diagram',\r\n            fill: false,\r\n            backgroundColor: 'rgba(75,192,192,0.4)',\r\n            pointBorderColor: 'blue',\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 2,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 5,\r\n            pointHitRadius: 10,\r\n            data: gForceData\r\n          }\r\n        ]\r\n      };\r\n\r\n      useEffect( () => {\r\n        socket.on('gForceChart', (data) => {\r\n          dispatch(updateGGDiagram(data))\r\n        });\r\n\r\n        socket.on('brake_position', (data) => {\r\n          dispatch(updateBrakePosition(data))\r\n        });\r\n        \r\n        socket.on('throttle_position', (data) => {\r\n          dispatch(updateThrottlePosition(data))\r\n        });\r\n\r\n        socket.on('fl_tire_load', (data) => {\r\n          dispatch(updateFLTireLoad(data))\r\n        });\r\n\r\n        socket.on('fl_tire_temp', (data) => {\r\n          dispatch(updateFLTireTemp(data))\r\n        });\r\n\r\n        socket.on('fr_tire_load', (data) => {\r\n          dispatch(updateFRTireLoad(data))\r\n        });\r\n\r\n        socket.on('fr_tire_temp', (data) => {\r\n          dispatch(updateFRTireTemp(data))\r\n        });\r\n\r\n        socket.on('rl_tire_load', (data) => {\r\n          dispatch(updateRLTireLoad(data))\r\n        });\r\n\r\n        socket.on('rl_tire_temp', (data) => {\r\n          dispatch(updateRLTireTemp(data))\r\n        });\r\n\r\n        socket.on('rr_tire_load', (data) => {\r\n          dispatch(updateRRTireLoad(data))\r\n        });\r\n\r\n        socket.on('rr_tire_temp', (data) => {\r\n          dispatch(updateRRTireTemp(data))\r\n        });\r\n\r\n      },  []);\r\n\r\n    return (\r\n      <>\r\n      <div className=\"suspension-container\">\r\n\r\n        <SteeringAngle/>\r\n          \r\n          <div className=\"suspension-data\">\r\n            <div className=\"suspension-left-side\">\r\n\r\n              <div className=\"text-center\" style={{width: \"66%\", marginLeft: \"auto\"}}>\r\n                  FL Tire\r\n              </div>\r\n\r\n              <div className=\"d-flex\" style={{height: \"calc(100% - 24px)\"}}>\r\n                <VerticalBar sensor={\"Brake\"} min={brake_position.min} value={brake_position.value} max={brake_position.max} units={\"%\"}/>\r\n                <div className=\"d-flex left-tire-data flex-column justify-content-between\">\r\n\r\n                  <div className=\"front-left-tire-data d-flex\" style={{height: \"33.33%\"}}>\r\n                      <VerticalBar sensor={\"Load\"} min={FLTireLoad.min} value={FLTireLoad.value} max={FLTireLoad.max} units={\"lbs\"} />\r\n                      <VerticalBar sensor={\"Temp\"} min={FLTireTemp.min} value={FLTireTemp.value} max={FLTireTemp.max} units={\"°F\"}/>\r\n                  </div>\r\n\r\n                  <div className=\"d-flex flex-column\" style={{height: \"calc(33.33% + 24px)\"}}>\r\n\r\n                    <div className=\"text-center\">\r\n                      RL Tire\r\n                    </div>\r\n\r\n                    <div className=\"rear-left-tire-data d-flex\" style={{height: \"calc(100% - 24px)\"}}>\r\n                      <VerticalBar sensor={\"Load\"} min={RLTireLoad.min} value={RLTireLoad.value} max={RLTireLoad.max} units={\"lbs\"}/>\r\n                      <VerticalBar sensor={\"Temp\"} min={RLTireTemp.min} value={RLTireTemp.value} max={RLTireTemp.max} units={\"°F\"}/>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n\r\n                \r\n            </div>\r\n\r\n            <div className=\"g-g-diagram d-flex align-items-center justify-content-center\" style={{height: \"calc(100% + 48px)\"}}>\r\n              <Scatter data={data} /> \r\n            </div>\r\n\r\n            <div className=\"suspension-right-side\">\r\n\r\n              <div className=\"text-center\" style={{width: \"66%\", marginRight: \"auto\"}}>\r\n                FR Tire\r\n              </div>\r\n\r\n\r\n\r\n\r\n\r\n              <div className=\"d-flex\" style={{height: \"calc(100% - 24px)\"}}>\r\n                <div className=\"d-flex right-tire-data flex-column h-100 justify-content-between\">\r\n\r\n                  <div className=\"front-right-tire-data d-flex\" style={{height: \"33.33%\"}}>\r\n                    <VerticalBar sensor={\"Load\"} min={FRTireLoad.min} value={FRTireLoad.value} max={FRTireLoad.max} units={\"lbs\"}/>\r\n                    <VerticalBar sensor={\"Temp\"} min={FRTireTemp.min} value={FRTireTemp.value} max={FRTireTemp.max} units={\"°F\"}/>\r\n                  </div>\r\n\r\n            \r\n                  <div style={{height: \"calc(33.33% + 24px)\"}}>\r\n                    <div className=\"text-center\">\r\n                        RR Tire \r\n                    </div>\r\n                    \r\n                    <div className=\"d-flex\" style={{height: \"calc(100% - 24px)\"}}>\r\n                      <div className=\"rear-right-tire-data d-flex\">\r\n                        <VerticalBar sensor={\"Load\"} min={RRTireLoad.min} value={RRTireLoad.value} max={RRTireLoad.max} units={\"lbs\"}/>\r\n                        <VerticalBar sensor={\"Temp\"} min={RRTireTemp.min} value={RRTireTemp.value} max={RRTireTemp.max} units={\"°F\"} />\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </div>\r\n                <VerticalBar sensor={\"Throttle\"} min={throttle_position.min} value={throttle_position.value} max={throttle_position.max} units={\"%\"}/>\r\n              </div>\r\n            </div>\r\n          \r\n          </div>\r\n          \r\n          \r\n          \r\n          \r\n          {/* <div className=\"suspension-data\">\r\n\r\n            <div className=\"brake-position\">\r\n              <VerticalBar sensor={\"Brake\"} min={brake_position.min} value={brake_position.value} max={brake_position.max} units={\"%\"}/>\r\n            </div>\r\n\r\n            <div className=\"d-flex left-tire-data flex-column justify-content-between h-100\">\r\n              <div className=\"front-left-tire-data d-flex\" style={{height: \"33.33%\"}}>\r\n                  <VerticalBar sensor={\"Load\"} min={FLTireLoad.min} value={FLTireLoad.value} max={FLTireLoad.max} units={\"lbs\"} />\r\n                  <VerticalBar sensor={\"Temp\"} min={FLTireTemp.min} value={FLTireTemp.value} max={FLTireTemp.max} units={\"°F\"}/>\r\n              </div>\r\n\r\n              <div className=\"rear-left-tire-data d-flex\" style={{height: \"33.33%\"}}>\r\n                  <VerticalBar sensor={\"Load\"} min={RLTireLoad.min} value={RLTireLoad.value} max={RLTireLoad.max} units={\"lbs\"}/>\r\n                  <VerticalBar sensor={\"Temp\"} min={RLTireTemp.min} value={RLTireTemp.value} max={RLTireTemp.max} units={\"°F\"}/>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"g-g-diagram d-flex align-items-center justify-content-center h-100\">\r\n              <Scatter data={data} /> \r\n            </div>\r\n\r\n            <div className=\"d-flex right-tire-data flex-column justify-content-between h-100\">\r\n\r\n              <div className=\"front-right-tire-data d-flex\" style={{height: \"33.33%\"}}>\r\n                  <VerticalBar sensor={\"Load\"} min={FRTireLoad.min} value={FRTireLoad.value} max={FRTireLoad.max} units={\"lbs\"}/>\r\n                  <VerticalBar sensor={\"Temp\"} min={FRTireTemp.min} value={FRTireTemp.value} max={FRTireTemp.max} units={\"°F\"}/>\r\n              </div>\r\n\r\n              <div className=\"rear-right-tire-data d-flex\" style={{height: \"33.33%\"}}>\r\n                  <VerticalBar sensor={\"Load\"} min={RRTireLoad.min} value={RRTireLoad.value} max={RRTireLoad.max} units={\"lbs\"}/>\r\n                  <VerticalBar sensor={\"Temp\"} min={RRTireTemp.min} value={RRTireTemp.value} max={RRTireTemp.max} units={\"°F\"} />\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"throttle-position\">\r\n              <VerticalBar sensor={\"Throttle\"} min={throttle_position.min} value={throttle_position.value} max={throttle_position.max} units={\"%\"}/>\r\n            </div>\r\n          </div> */}\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GForceChart;","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\livePage\\CurrentDateTime.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\forms\\DateForm.js",["644"],"import React from 'react'\r\nimport {useForm, Controller} from 'react-hook-form';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport {updateSearchedDriveDayBeginDate, updateSearchedDriveDayEndDate, addSearchedDriveDays, updateModalStepForward} from '../../../actions/historyPage/modalActions';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nfunction DateForm(props) {\r\n\r\n    const {handleSubmit, control} = useForm();\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = async (data) => {\r\n        const driveDayStartDateISO = new Date(data.startDate).toISOString();\r\n        const driveDayEndDateISO = new Date(data.endDate).toISOString();\r\n\r\n        const driveDayStartDate = driveDayStartDateISO.substr(0, driveDayStartDateISO.indexOf(\"T\"));\r\n        const driveDayEndDate = driveDayEndDateISO.substr(0, driveDayEndDateISO.indexOf(\"T\"));\r\n\r\n        dispatch(updateSearchedDriveDayBeginDate(driveDayStartDate));\r\n        dispatch(updateSearchedDriveDayEndDate(driveDayEndDate));\r\n\r\n        const driveDays = await axios.get(`http://localhost:4000/api/v1/drive-days?dates=${driveDayStartDate},${driveDayEndDate}`);\r\n\r\n        dispatch(addSearchedDriveDays(driveDays.data));\r\n        dispatch(updateModalStepForward());\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"d-flex\">\r\n                <div className=\"mr-2\">\r\n                    <p>Start Date</p>\r\n                    <Controller name=\"startDate\" control={control} render={ \r\n                        ( { onChange, value, defaultValue} ) => (\r\n                        <DatePicker selected={value} placeholderText=\"Search Start Date\"  onChange={onChange} showYearDropdown />\r\n                    )} />\r\n                </div>\r\n                <div>\r\n                    <p>End Date</p>\r\n                    <Controller name=\"endDate\" control={control} render={ \r\n                        ( { onChange, value } ) => (\r\n                        <DatePicker placeholderText=\"Search End Date\" selected={value} onChange={onChange} showYearDropdown />\r\n                    )} /> \r\n                </div>\r\n            </div>\r\n            <button className=\"btn btn-primary\" type=\"submit\" className=\"d-block\">Next</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default DateForm;\r\n","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\forms\\DriveDaySelectionForm.js",["645"],"import React from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {updateSelectedDriveDate, updateSelectedDriveDateIndex, updateModalStepForward,  updateModalStepBackwards} from '../../../actions/historyPage/modalActions';\r\n\r\nfunction DriveDaySelectionForm(props) {\r\n    \r\n    const allDriveDays = useSelector( (state) => state.historyModal.driveDays);\r\n    const dispatch = useDispatch();\r\n    const {handleSubmit, register} = useForm();\r\n    \r\n    const onSubmit = async (data) => {\r\n        const [driveDate, driveDateIndex] = data.driveDate.split(\" \");\r\n        dispatch(updateSelectedDriveDateIndex(Number(driveDateIndex)));\r\n        dispatch(updateSelectedDriveDate(driveDate));\r\n        dispatch (updateModalStepForward());\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Select Drive Date</h2>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"form-group\">\r\n                    <select defaultValue={props.driveDateData.selectedDriveDate + \" \" + props.driveDateData.selectedDriveDateIndex} className=\"form-control\" name=\"driveDate\" ref={register}>\r\n                        {allDriveDays.map( (searchDay, index) =>\r\n                            <option key={index} value={searchDay.date  + \" \" + index}>{new Date(searchDay.date + \" \").toDateString(\"en-us\")}</option>\r\n                        )}\r\n                    </select>\r\n                </div>\r\n                \r\n                <div className=\"d-flex\">\r\n                    <button type=\"button\" onClick={() => {dispatch(updateModalStepBackwards() )}} className=\"d-block\"> Back </button>\r\n                    <button className=\"btn btn-primary\" type=\"submit\" className=\"d-block\">Next</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DriveDaySelectionForm;\r\n","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\forms\\LapSelectionForm.js",["646"],"import React from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {updateSelectedLapNumber, updateModalStepForward, updateModalStepBackwards} from '../../../actions/historyPage/modalActions';\r\n\r\nfunction LapSelectionForm(props) {\r\n\r\n    const {handleSubmit, register} = useForm();\r\n    \r\n    const allDriveDays = useSelector( (state) => state.historyModal.driveDays);\r\n\r\n    const selectedDriveDateIndex = useSelector( (state) => state.historyModal.selectedDriveDateIndex);\r\n\r\n    const sessionNumber = useSelector( (state) => state.historyModal.selectedSessionNumber);\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const onSubmit = async (data) => {\r\n        // console.log(data.lap);\r\n        dispatch(updateSelectedLapNumber(data.lap));\r\n        dispatch (updateModalStepForward());\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Select Lap: </h2>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"form-group\">\r\n                    <select defaultValue={props.lapData} className=\"form-control\" name=\"lap\" ref={register}>\r\n                        {allDriveDays[selectedDriveDateIndex][\"sessions\"][sessionNumber -1][\"laps\"].map( (lap, index) =>\r\n                            <option key={index + 1} value={lap.lap_number}>{lap.lap_number}</option>\r\n                        )}\r\n                    </select>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <button type=\"button\" onClick={() => {dispatch(updateModalStepBackwards() )}} className=\"d-block\"> Back </button>\r\n                    <button className=\"btn btn-primary\" type=\"submit\" className=\"d-block\">Next</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default LapSelectionForm;\r\n","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\forms\\SessionSelectionForm.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\graphicalView\\graphicalViewModal\\forms\\SensorSelectionForm.js",["647"],"import React from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { updateModalStepForward, updateSelectedSensor } from '../../../../../actions/historyPage/graphicalViewActions/graphicalViewModalActions';\r\n\r\n\r\nfunction SensorSelectionForm(props) {\r\n    \r\n    const dispatch = useDispatch();\r\n    const {handleSubmit, register} = useForm();\r\n\r\n    const allSensors = useSelector( (state) => state.generalHistoricalData.allSensors);\r\n    const displayedSensors = useSelector( (state) => state.generalHistoricalData.displayedSensors);\r\n\r\n    const availableSensors = allSensors.filter( (sensor) => {\r\n        return !displayedSensors.includes(sensor);\r\n    });\r\n\r\n    const onSubmit = async (data) => {\r\n        dispatch(updateSelectedSensor(data.sensor))\r\n        dispatch(updateModalStepForward());\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h2>\r\n            Select Sensor: \r\n        </h2>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"form-group\">\r\n                <select className=\"form-control\" name=\"sensor\" ref={register}>\r\n                    {availableSensors.map( (sensor, index) =>\r\n                        <option key={index} value={sensor}>{sensor}</option>\r\n                    )}\r\n                </select>\r\n            </div>\r\n        \r\n            <div className=\"d-flex\">\r\n                <button className=\"btn btn-primary\" type=\"submit\" className=\"d-block\">Next</button>\r\n            </div>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SensorSelectionForm;\r\n","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\forms\\ReviewForm.js",["648","649","650","651","652"],"import React from 'react'\r\nimport {useForm} from 'react-hook-form';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {updateModalStepBackwards, closeModal} from '../../../actions/historyPage/modalActions';\r\nimport axios from 'axios';\r\n\r\nfunction ReviewForm() {\r\n    const allDriveDays = useSelector( (state) => state.historyModal.driveDays);\r\n    const selectedDriveDateIndex = useSelector( (state) => state.historyModal.selectedDriveDateIndex);\r\n    const selectedDriveDate = useSelector( (state) => state.historyModal.selectedDriveDate);\r\n    const sessionNumber = useSelector( (state) => state.historyModal.selectedSessionNumber);\r\n    const lapNumber = useSelector( (state) => state.historyModal.selectedLapNumber);\r\n    const displayedSessions = useSelector( (state) => state.historyModal.displayedSessions);\r\n    const dispatch = useDispatch();\r\n    const {handleSubmit, errors} = useForm();\r\n\r\n    const onSubmit = async (data) => {\r\n        const sensorData = await axios.get(`http://localhost:4000/api/v1/data?dates=${selectedDriveDate}&session_numbers=${sessionNumber}&lap_numbers=${lapNumber}&sensors=speeds`);\r\n        \r\n        addNewDateToDisplayedSessions();\r\n\r\n        // console.log(displayedSessions);\r\n\r\n        const availableLaps =  allDriveDays[selectedDriveDateIndex][\"sessions\"][0][\"laps\"].filter( (lap) => {\r\n            return !displayedSessions[selectedDriveDate][\"sessions\"][0][\"laps\"].includes(lap.lap_number);\r\n        });\r\n\r\n        // console.log(availableLaps);\r\n\r\n        dispatch(closeModal());\r\n        // console.log(sensorData.data);\r\n    }\r\n\r\n    const addNewDateToDisplayedSessions = () => {\r\n\r\n        if ( !(selectedDriveDate in displayedSessions) ) {\r\n            const newSession = { sessions: [ { number: Number(sessionNumber), laps: [ Number(lapNumber)] } ] }\r\n            displayedSessions[selectedDriveDate] = newSession;\r\n            return\r\n        }\r\n\r\n        addNewSessionToDateSessions();\r\n    }\r\n\r\n    const addNewSessionToDateSessions = () => {\r\n        const sessionIndex = displayedSessions[selectedDriveDate][\"sessions\"].findIndex(session => session.number == sessionNumber);\r\n\r\n        if (sessionIndex === -1) {\r\n            displayedSessions[selectedDriveDate][\"sessions\"].push({ number: Number(sessionNumber), laps: [Number(lapNumber)]});\r\n            return\r\n        }\r\n\r\n        addNewLapToDateSessions(sessionIndex);\r\n    }\r\n\r\n    const addNewLapToDateSessions = (sessionIndex) => {\r\n        const lapIndex = displayedSessions[selectedDriveDate][\"sessions\"][sessionIndex][\"laps\"].findIndex(lap => lap === Number(lapNumber));\r\n       \r\n        if (lapIndex === -1) {\r\n             displayedSessions[selectedDriveDate][\"sessions\"][sessionIndex][\"laps\"].push(Number(lapNumber));\r\n             return\r\n         }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Review</h2>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"drive-day-data\">\r\n                    <div className=\"drive-day__date\">\r\n                        Drive Day: {new Date(selectedDriveDate + \" \").toDateString(\"en-us\") }\r\n                    </div>\r\n                    <div className=\"drive-day__session_number\">\r\n                        Session Number: {sessionNumber}\r\n                    </div>\r\n                    <div className=\"drive-day__lap_number\">\r\n                        Lap Number: {lapNumber}\r\n                    </div>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <button type=\"button\" onClick={() => {dispatch(updateModalStepBackwards() )}} className=\"d-block\">Back</button>\r\n                    <button className=\"btn btn-primary\" type=\"submit\" className=\"d-block\">Submit</button>\r\n                </div>\r\n            </form>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ReviewForm;\r\n","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\graphicalView\\graphicalViewModal\\forms\\ReviewForm.js",["653","654"],"import React from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { updateModalStepBackwards } from '../../../../../actions/historyPage/graphicalViewActions/graphicalViewModalActions';\r\n\r\n\r\nfunction ReviewForm(props) {\r\n    const dispatch = useDispatch();\r\n    const {handleSubmit} = useForm();\r\n\r\n    const onSubmit = async (data) => {\r\n        // dispatch(updateModalStepForward());\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>\r\n                Review \r\n            </h2>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"drive-day__date\">\r\n                    Sensor: {props.selectedSensor}\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <button type=\"button\" onClick={() => {dispatch(updateModalStepBackwards() )}} className=\"d-block\">Back</button>\r\n                    <button className=\"btn btn-primary\" type=\"submit\" className=\"d-block\">Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReviewForm;\r\n","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\sessionView\\LapTimes\\LapTimes.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\sessionView\\ModalControls\\ModalControls.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\historyPage\\graphicalView\\SensorGraph\\SensorGraph.js",["655","656","657"],"import React, {useRef, useEffect} from 'react'\r\nimport {select, line, curveLinear, axisLeft} from 'd3';\r\n\r\nfunction SensorGraph({sensor, sensorData, isFirstSensor, yScale, width, index, minValue, maxValue}) {\r\n    const gRef = useRef(null);\r\n\r\n    const getMinMaxValues = (values) =>  {\r\n        let greatestValue = values[0].value[\"$numberDecimal\"];\r\n        let lowestValue = values[0].value[\"$numberDecimal\"];\r\n        \r\n        for (const valueIndex of values) {\r\n\r\n            if (parseFloat(valueIndex.value[\"$numberDecimal\"].toString()) > greatestValue) {\r\n                greatestValue = valueIndex.value[\"$numberDecimal\"]\r\n            }\r\n\r\n            if ( parseFloat(valueIndex.value[\"$numberDecimal\"].toString()) < lowestValue) {\r\n                lowestValue = valueIndex.value[\"$numberDecimal\"]\r\n            }\r\n        }\r\n\r\n        return {\r\n            greatestValue,\r\n            lowestValue\r\n        }\r\n    }\r\n\r\n    const getLongestLap = (laps) => {\r\n        let longestLap = laps[0];\r\n        // console.log(\"laps\", laps);\r\n        for (let lap of laps) {\r\n            if(lap.length > longestLap.length) {\r\n                longestLap = lap;\r\n            }\r\n        }\r\n        return longestLap;\r\n    }\r\n\r\n    useEffect( ()=> {\r\n        if(gRef.current) {\r\n            const g = select(gRef.current);\r\n\r\n            const longestLap = getLongestLap(sensorData);\r\n\r\n            const {greatestValue, lowestValue} = getMinMaxValues(longestLap);\r\n            \r\n            const xMultiplier =  parseFloat(parseFloat(width - 100) / parseFloat(longestLap[longestLap.length - 1].lapTime[\"$numberDecimal\"].toString()));\r\n            const yMultiplier = parseFloat(parseFloat(300) / parseFloat(maxValue));\r\n\r\n\r\n            const chartLine = line().x( p => parseFloat(parseFloat(p.lapTime[\"$numberDecimal\"].toString()) * xMultiplier) ).y( (p) => parseFloat( parseFloat(300) - Math.abs(parseFloat( parseFloat( p.value[\"$numberDecimal\"].toString() ) * parseFloat(yMultiplier ) ))  ) ).curve(curveLinear); \r\n\r\n            for(let i = 0; i < sensorData.length; i++) {\r\n                g.append(\"path\").data([sensorData[i]]).attr(\"d\", value => chartLine(value)).attr(\"fill\", \"none\").attr(\"stroke\", \"#\" + ((1<<24)*Math.random() | 0).toString(16)).attr('stroke-width', '2px').attr(\"class\",\"line\");\r\n            }\r\n\r\n            const yAxis = axisLeft(yScale)\r\n            g.select('.y-axis').call(yAxis)\r\n            \r\n            if(!isFirstSensor) {\r\n                g.style('transform', `translateY(${index * 350}px)`);\r\n            } \r\n        }\r\n\r\n        \r\n\r\n    }, [gRef, width])\r\n\r\n    return (\r\n        <g ref={gRef} className=\"chart\">\r\n            <g>{sensor}</g>\r\n            <g className=\"y-axis\" />\r\n        </g>\r\n    )\r\n}\r\n\r\nexport default SensorGraph;\r\n","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\login\\Login.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\livePage\\HorizontalBars\\HorizontalBar\\HorizontalBar.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\login\\Logout.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\livePage\\CarLocation\\CarLocation.js",["658","659","660"],"import React, {useEffect, useLayoutEffect, useRef, useContext} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {select} from 'd3';\r\nimport {SocketContext} from '../../../SocketContext';\r\nimport proj4 from 'proj4';\r\nimport {updateCarLocation, updateFirstLap, addCoordinateToGPSTrack} from '../../../actions/livePage/gpsActions'\r\nimport {updateLapCount}  from '../../../actions/livePage/lapTimesActions'\r\n\r\nfunction CarLocation() {  \r\n\r\n    const GPSMapSvgPathDimensions = useSelector( (state) => state.gps.GPSMapSvgPathDimensions);\r\n\r\n    const firstLap = useSelector( (state) => state.gps.firstLap);\r\n\r\n    const GPSMapContainerDimensions = useSelector( (state) => state.gps.GPSMapContainerDimensions);\r\n\r\n    const socket = useContext(SocketContext);\r\n\r\n    const carLocation = useSelector( (state) => state.gps.carLocation);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const carCircleRef = useRef(null);\r\n    \r\n    const oldCarLocation = useRef();\r\n\r\n    const startLocation = useSelector( (state) => state.gps.startLocation);\r\n\r\n\r\n    useEffect( () => {\r\n        oldCarLocation.current = carLocation;\r\n    })\r\n\r\n    const previousCarLocation = oldCarLocation.current;\r\n\r\n\r\n    useLayoutEffect( () => { \r\n        if(carCircleRef.current) {\r\n            const carCircle = select(carCircleRef.current);\r\n            carCircle.attr(\"cx\", carLocation.x).attr(\"cy\", carLocation.y).attr(\"fill\", \"red\").attr(\"r\", 7);\r\n        }\r\n    }, [carCircleRef]);\r\n\r\n    useEffect( () => {\r\n        if(carCircleRef.current) {\r\n            const carCircle = select(carCircleRef.current);\r\n            carCircle.attr(\"cx\", carLocation.x).attr(\"cy\", carLocation.y);\r\n        }\r\n\r\n    }, [carLocation])\r\n\r\n    useEffect( () => {\r\n        socket.on('gps_data', (data) => {\r\n            \r\n            if (GPSMapContainerDimensions.height !== 0) { \r\n\r\n                const carCoordinates = getCarXYCoordinates(data);\r\n\r\n                if(firstLap) {\r\n                    dispatch(addCoordinateToGPSTrack({x: carCoordinates.x, y: carCoordinates.y}))\r\n                }\r\n\r\n                dispatch(updateCarLocation(carCoordinates))\r\n            }\r\n        });\r\n\r\n    }, [GPSMapContainerDimensions, GPSMapSvgPathDimensions])\r\n\r\n    useEffect( () => {\r\n\r\n        if(oldCarLocation.current && previousCarLocation !== undefined) {\r\n            const isNewLap = checkIfNewLap();\r\n\r\n            if(firstLap && isNewLap) {\r\n                dispatch(updateFirstLap(false))\r\n                dispatch(updateLapCount())\r\n            } else if (isNewLap) {\r\n                dispatch(updateLapCount())\r\n            }\r\n        }\r\n       \r\n    }, [carLocation])\r\n\r\n    function checkIfNewLap() {\r\n        if (previousCarLocation.verticalDisplacement < 0 && carLocation.verticalDisplacement >= 0) {\r\n            return true;\r\n        } \r\n\r\n        return false;\r\n    }\r\n\r\n    function getCarXYCoordinates (carCoordinates) {\r\n\r\n        if (GPSMapContainerDimensions.height !== 0 ) {\r\n      \r\n          const [x1,y1] = proj4(\"EPSG:4326\", \"EPSG:3857\", [ parseFloat(carCoordinates.x.toFixed(7)),  parseFloat(carCoordinates.y.toFixed(7))] );\r\n          \r\n          const verticalOffset = (GPSMapContainerDimensions.height);\r\n                    \r\n          const horizontalOffset = parseFloat(GPSMapContainerDimensions.width / 2);\r\n         \r\n          const verticalDisplacement = parseFloat(parseFloat(y1).toFixed(2) - parseFloat(startLocation.y)).toFixed(2);\r\n          \r\n          const horizontalDisplacement = parseFloat(parseFloat(x1).toFixed(2) - parseFloat(startLocation.x)).toFixed(2);\r\n        \r\n          const x = parseFloat(parseFloat(horizontalOffset) + parseFloat(horizontalDisplacement)).toFixed(2);\r\n          \r\n          const y = parseFloat(parseFloat(verticalOffset) - (parseFloat(horizontalOffset) + parseFloat(verticalDisplacement))).toFixed(2);\r\n        \r\n          return  {\r\n            x: x,\r\n            y: y,\r\n            verticalDisplacement: verticalDisplacement\r\n          }\r\n        }\r\n      }\r\n\r\n    return (\r\n        <circle ref={carCircleRef}></circle>\r\n    )\r\n}\r\n\r\nexport default CarLocation;\r\n","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\livePage\\VerticalBar\\VerticalBar.js",[],"C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\livePage\\TrackPath\\TrackPath.js",["661"],"import React, {useRef, useLayoutEffect, memo} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {select, line, curveCardinalClosed} from 'd3';\r\nimport {updateGPSMapSvgDimensions} from '../../../actions/livePage/gpsActions'\r\n\r\nfunction TrackPath() {\r\n\r\n    const trackPath = useRef(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const GPSTrackCoordinates = useSelector( (state) => state.gps.gpsTrackCoordinates);\r\n    const firstLap = useSelector( (state) => state.gps.firstLap);\r\n    const trackLine = line().x( (p) => p.x).y( (p) => p.y).curve(curveCardinalClosed);\r\n\r\n    useLayoutEffect( () => {\r\n\r\n        if (trackPath.current) {\r\n            const path = select(trackPath.current);\r\n            path.data([GPSTrackCoordinates]).join(\"path\").attr(\"d\", value => trackLine(value)).attr(\"fill\", \"none\").attr(\"stroke\", \"black\").attr(\"stroke-width\", \"2px\");\r\n            const {x,y,width,height} = path._groups[0][0].getBBox();\r\n            const pathDimensions = {x: x, y: y, width: width, height: height};\r\n            \r\n            if (pathDimensions.x !== 0 ) {\r\n                dispatch(updateGPSMapSvgDimensions(pathDimensions))\r\n            }\r\n        }\r\n    }, [trackPath, firstLap])\r\n  \r\n\r\n    return (\r\n        <path ref={trackPath}></path>\r\n    ) \r\n}\r\n\r\nexport default memo(TrackPath);","C:\\Users\\brand\\source\\repos\\das-server\\client\\src\\components\\livePage\\SteeringAngle\\SteeringAngle.js",["662"],"import React, {useEffect, useState, useContext, useRef, useLayoutEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {SocketContext } from '../../../SocketContext';\r\nimport {updateSteeringAngle} from '../../../actions/livePage/vehicleDynamicsActions'\r\n\r\n\r\nfunction SteeringAngle () {\r\n\r\n    const socket = useContext(SocketContext);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const steeringAngleContainer = useRef(null);\r\n\r\n    const [svgLength, setSvgLength] = useState( { height: 0, width: 0 } );\r\n\r\n    const steering_angle = useSelector( (state) => state.vehicleDynamics.steeringAngle);\r\n\r\n    useLayoutEffect( () => {\r\n\r\n        if (steeringAngleContainer.current) {\r\n           \r\n            setSvgLength( {\r\n                height: steeringAngleContainer.current.offsetHeight,\r\n                width: steeringAngleContainer.current.offsetWidth \r\n           })\r\n        }\r\n\r\n    }, [steeringAngleContainer])\r\n\r\n    useEffect( ()=> {\r\n        socket.on('steering_angle', (data) => {\r\n            dispatch(updateSteeringAngle(data))\r\n        });\r\n    }, [])\r\n\r\n    let fill = \"#000\";\r\n\r\n    const percentage = parseFloat( parseFloat(8.5 + parseFloat( parseFloat( parseFloat(steering_angle.value - steering_angle.min) * 100) / parseFloat(steering_angle.max - steering_angle.min))) );\r\n\r\n    return (\r\n        <div className=\"horizontal-bar\">\r\n            <div className=\"sensor-desc text-center\">\r\n                <div className=\"sensor__name\">\r\n                    Steering Angle\r\n                </div>\r\n                <div className=\"sensor__value\">\r\n                    { `${parseFloat(parseFloat(8.5 + parseFloat(steering_angle.value))).toFixed(2)}°` } \r\n                </div>\r\n            </div>\r\n            <div className=\"horizontal-svg-container svg-container\" ref={steeringAngleContainer}>\r\n                <svg className=\"horizontal-svg\">\r\n                    <path className=\"horizontal-svg__path svg__path\"\r\n                        d={`M ${ svgLength.width / 2 } 0 H ${ (svgLength.width * percentage) / 100 } V ${svgLength.height} H ${ svgLength.width / 2 }  L ${ svgLength.width / 2 }  0`}\r\n                        fill={fill}\r\n                    />\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SteeringAngle;",{"ruleId":"663","severity":1,"message":"664","line":3,"column":8,"nodeType":"665","messageId":"666","endLine":3,"endColumn":26},{"ruleId":"667","severity":1,"message":"668","line":21,"column":8,"nodeType":"665","endLine":21,"endColumn":17},{"ruleId":"667","severity":1,"message":"669","line":21,"column":8,"nodeType":"665","endLine":21,"endColumn":17,"suggestions":"670"},{"ruleId":"663","severity":1,"message":"671","line":5,"column":12,"nodeType":"665","messageId":"666","endLine":5,"endColumn":20},{"ruleId":"663","severity":1,"message":"672","line":5,"column":22,"nodeType":"665","messageId":"666","endLine":5,"endColumn":34},{"ruleId":"663","severity":1,"message":"673","line":5,"column":36,"nodeType":"665","messageId":"666","endLine":5,"endColumn":41},{"ruleId":"674","severity":1,"message":"675","line":23,"column":9,"nodeType":"676","messageId":"677","endLine":34,"endColumn":10},{"ruleId":"663","severity":1,"message":"678","line":4,"column":52,"nodeType":"665","messageId":"666","endLine":4,"endColumn":56},{"ruleId":"663","severity":1,"message":"679","line":4,"column":58,"nodeType":"665","messageId":"666","endLine":4,"endColumn":71},{"ruleId":"663","severity":1,"message":"680","line":11,"column":30,"nodeType":"665","messageId":"666","endLine":11,"endColumn":49},{"ruleId":"667","severity":1,"message":"681","line":123,"column":8,"nodeType":"682","endLine":123,"endColumn":10,"suggestions":"683"},{"ruleId":"667","severity":1,"message":"684","line":135,"column":19,"nodeType":"685","endLine":135,"endColumn":41},{"ruleId":"667","severity":1,"message":"686","line":139,"column":22,"nodeType":"685","endLine":141,"endColumn":48},{"ruleId":"667","severity":1,"message":"684","line":153,"column":19,"nodeType":"685","endLine":153,"endColumn":41},{"ruleId":"667","severity":1,"message":"686","line":156,"column":22,"nodeType":"685","endLine":158,"endColumn":42},{"ruleId":"687","severity":1,"message":"688","line":235,"column":61,"nodeType":"689","messageId":"690","endLine":235,"endColumn":98},{"ruleId":"691","severity":1,"message":"692","line":235,"column":87,"nodeType":"693","messageId":"694","endLine":235,"endColumn":89},{"ruleId":"687","severity":1,"message":"688","line":236,"column":66,"nodeType":"689","messageId":"690","endLine":236,"endColumn":103},{"ruleId":"691","severity":1,"message":"692","line":236,"column":92,"nodeType":"693","messageId":"694","endLine":236,"endColumn":94},{"ruleId":"667","severity":1,"message":"668","line":17,"column":8,"nodeType":"665","endLine":17,"endColumn":17},{"ruleId":"667","severity":1,"message":"669","line":17,"column":8,"nodeType":"665","endLine":17,"endColumn":17,"suggestions":"695"},{"ruleId":"663","severity":1,"message":"696","line":2,"column":8,"nodeType":"665","messageId":"666","endLine":2,"endColumn":16},{"ruleId":"667","severity":1,"message":"697","line":101,"column":11,"nodeType":"682","endLine":101,"endColumn":13,"suggestions":"698"},{"ruleId":"667","severity":1,"message":"697","line":22,"column":8,"nodeType":"682","endLine":22,"endColumn":10,"suggestions":"699"},{"ruleId":"667","severity":1,"message":"700","line":28,"column":8,"nodeType":"682","endLine":28,"endColumn":18,"suggestions":"701"},{"ruleId":"667","severity":1,"message":"702","line":34,"column":8,"nodeType":"682","endLine":34,"endColumn":18,"suggestions":"703"},{"ruleId":"663","severity":1,"message":"704","line":1,"column":47,"nodeType":"665","messageId":"666","endLine":1,"endColumn":56},{"ruleId":"667","severity":1,"message":"705","line":28,"column":8,"nodeType":"682","endLine":28,"endColumn":50,"suggestions":"706"},{"ruleId":"667","severity":1,"message":"707","line":34,"column":8,"nodeType":"682","endLine":34,"endColumn":10,"suggestions":"708"},{"ruleId":"709","severity":1,"message":"710","line":48,"column":63,"nodeType":"711","messageId":"712","endLine":48,"endColumn":82},{"ruleId":"709","severity":1,"message":"710","line":33,"column":71,"nodeType":"711","messageId":"712","endLine":33,"endColumn":90},{"ruleId":"663","severity":1,"message":"713","line":15,"column":26,"nodeType":"665","messageId":"666","endLine":15,"endColumn":32},{"ruleId":"663","severity":1,"message":"714","line":18,"column":15,"nodeType":"665","messageId":"666","endLine":18,"endColumn":25},{"ruleId":"663","severity":1,"message":"715","line":24,"column":15,"nodeType":"665","messageId":"666","endLine":24,"endColumn":28},{"ruleId":"691","severity":1,"message":"692","line":46,"column":115,"nodeType":"693","messageId":"694","endLine":46,"endColumn":117},{"ruleId":"709","severity":1,"message":"710","line":82,"column":71,"nodeType":"711","messageId":"712","endLine":82,"endColumn":90},{"ruleId":"709","severity":1,"message":"710","line":37,"column":71,"nodeType":"711","messageId":"712","endLine":37,"endColumn":90},{"ruleId":"663","severity":1,"message":"716","line":3,"column":9,"nodeType":"665","messageId":"666","endLine":3,"endColumn":20},{"ruleId":"709","severity":1,"message":"710","line":26,"column":71,"nodeType":"711","messageId":"712","endLine":26,"endColumn":90},{"ruleId":"709","severity":1,"message":"710","line":39,"column":67,"nodeType":"711","messageId":"712","endLine":39,"endColumn":86},{"ruleId":"663","severity":1,"message":"717","line":45,"column":20,"nodeType":"665","messageId":"666","endLine":45,"endColumn":33},{"ruleId":"663","severity":1,"message":"718","line":45,"column":35,"nodeType":"665","messageId":"666","endLine":45,"endColumn":46},{"ruleId":"667","severity":1,"message":"719","line":67,"column":8,"nodeType":"682","endLine":67,"endColumn":21,"suggestions":"720"},{"ruleId":"667","severity":1,"message":"697","line":35,"column":8,"nodeType":"682","endLine":35,"endColumn":10,"suggestions":"721"},{"ruleId":"667","severity":1,"message":"722","line":27,"column":8,"nodeType":"682","endLine":27,"endColumn":29,"suggestions":"723"},{"ruleId":"667","severity":1,"message":"724","line":42,"column":8,"nodeType":"682","endLine":42,"endColumn":22,"suggestions":"725"},{"ruleId":"667","severity":1,"message":"726","line":67,"column":8,"nodeType":"682","endLine":67,"endColumn":60,"suggestions":"727"},{"ruleId":"667","severity":1,"message":"728","line":82,"column":8,"nodeType":"682","endLine":82,"endColumn":21,"suggestions":"729"},{"ruleId":"663","severity":1,"message":"664","line":3,"column":8,"nodeType":"665","messageId":"666","endLine":3,"endColumn":26},{"ruleId":"667","severity":1,"message":"668","line":21,"column":8,"nodeType":"665","endLine":21,"endColumn":17},{"ruleId":"667","severity":1,"message":"669","line":21,"column":8,"nodeType":"665","endLine":21,"endColumn":17,"suggestions":"730"},{"ruleId":"663","severity":1,"message":"671","line":5,"column":12,"nodeType":"665","messageId":"666","endLine":5,"endColumn":20},{"ruleId":"663","severity":1,"message":"672","line":5,"column":22,"nodeType":"665","messageId":"666","endLine":5,"endColumn":34},{"ruleId":"663","severity":1,"message":"673","line":5,"column":36,"nodeType":"665","messageId":"666","endLine":5,"endColumn":41},{"ruleId":"674","severity":1,"message":"675","line":23,"column":9,"nodeType":"676","messageId":"677","endLine":34,"endColumn":10},{"ruleId":"663","severity":1,"message":"678","line":4,"column":52,"nodeType":"665","messageId":"666","endLine":4,"endColumn":56},{"ruleId":"663","severity":1,"message":"679","line":4,"column":58,"nodeType":"665","messageId":"666","endLine":4,"endColumn":71},{"ruleId":"663","severity":1,"message":"680","line":11,"column":30,"nodeType":"665","messageId":"666","endLine":11,"endColumn":49},{"ruleId":"667","severity":1,"message":"681","line":123,"column":8,"nodeType":"682","endLine":123,"endColumn":10,"suggestions":"731"},{"ruleId":"667","severity":1,"message":"684","line":135,"column":19,"nodeType":"685","endLine":135,"endColumn":41},{"ruleId":"667","severity":1,"message":"686","line":139,"column":22,"nodeType":"685","endLine":141,"endColumn":48},{"ruleId":"667","severity":1,"message":"684","line":153,"column":19,"nodeType":"685","endLine":153,"endColumn":41},{"ruleId":"667","severity":1,"message":"686","line":156,"column":22,"nodeType":"685","endLine":158,"endColumn":42},{"ruleId":"687","severity":1,"message":"688","line":235,"column":61,"nodeType":"689","messageId":"690","endLine":235,"endColumn":98},{"ruleId":"691","severity":1,"message":"692","line":235,"column":87,"nodeType":"693","messageId":"694","endLine":235,"endColumn":89},{"ruleId":"687","severity":1,"message":"688","line":236,"column":66,"nodeType":"689","messageId":"690","endLine":236,"endColumn":103},{"ruleId":"691","severity":1,"message":"692","line":236,"column":92,"nodeType":"693","messageId":"694","endLine":236,"endColumn":94},{"ruleId":"663","severity":1,"message":"696","line":2,"column":8,"nodeType":"665","messageId":"666","endLine":2,"endColumn":16},{"ruleId":"667","severity":1,"message":"668","line":17,"column":8,"nodeType":"665","endLine":17,"endColumn":17},{"ruleId":"667","severity":1,"message":"669","line":17,"column":8,"nodeType":"665","endLine":17,"endColumn":17,"suggestions":"732"},{"ruleId":"667","severity":1,"message":"697","line":22,"column":8,"nodeType":"682","endLine":22,"endColumn":10,"suggestions":"733"},{"ruleId":"667","severity":1,"message":"700","line":28,"column":8,"nodeType":"682","endLine":28,"endColumn":18,"suggestions":"734"},{"ruleId":"667","severity":1,"message":"702","line":34,"column":8,"nodeType":"682","endLine":34,"endColumn":18,"suggestions":"735"},{"ruleId":"663","severity":1,"message":"704","line":1,"column":47,"nodeType":"665","messageId":"666","endLine":1,"endColumn":56},{"ruleId":"667","severity":1,"message":"705","line":28,"column":8,"nodeType":"682","endLine":28,"endColumn":50,"suggestions":"736"},{"ruleId":"667","severity":1,"message":"707","line":34,"column":8,"nodeType":"682","endLine":34,"endColumn":10,"suggestions":"737"},{"ruleId":"667","severity":1,"message":"697","line":101,"column":11,"nodeType":"682","endLine":101,"endColumn":13,"suggestions":"738"},{"ruleId":"709","severity":1,"message":"710","line":48,"column":63,"nodeType":"711","messageId":"712","endLine":48,"endColumn":82},{"ruleId":"709","severity":1,"message":"710","line":33,"column":71,"nodeType":"711","messageId":"712","endLine":33,"endColumn":90},{"ruleId":"709","severity":1,"message":"710","line":37,"column":71,"nodeType":"711","messageId":"712","endLine":37,"endColumn":90},{"ruleId":"709","severity":1,"message":"710","line":39,"column":67,"nodeType":"711","messageId":"712","endLine":39,"endColumn":86},{"ruleId":"663","severity":1,"message":"713","line":15,"column":26,"nodeType":"665","messageId":"666","endLine":15,"endColumn":32},{"ruleId":"663","severity":1,"message":"714","line":18,"column":15,"nodeType":"665","messageId":"666","endLine":18,"endColumn":25},{"ruleId":"663","severity":1,"message":"715","line":24,"column":15,"nodeType":"665","messageId":"666","endLine":24,"endColumn":28},{"ruleId":"691","severity":1,"message":"692","line":46,"column":115,"nodeType":"693","messageId":"694","endLine":46,"endColumn":117},{"ruleId":"709","severity":1,"message":"710","line":82,"column":71,"nodeType":"711","messageId":"712","endLine":82,"endColumn":90},{"ruleId":"663","severity":1,"message":"716","line":3,"column":9,"nodeType":"665","messageId":"666","endLine":3,"endColumn":20},{"ruleId":"709","severity":1,"message":"710","line":26,"column":71,"nodeType":"711","messageId":"712","endLine":26,"endColumn":90},{"ruleId":"663","severity":1,"message":"717","line":45,"column":20,"nodeType":"665","messageId":"666","endLine":45,"endColumn":33},{"ruleId":"663","severity":1,"message":"718","line":45,"column":35,"nodeType":"665","messageId":"666","endLine":45,"endColumn":46},{"ruleId":"667","severity":1,"message":"719","line":67,"column":8,"nodeType":"682","endLine":67,"endColumn":21,"suggestions":"739"},{"ruleId":"667","severity":1,"message":"724","line":42,"column":8,"nodeType":"682","endLine":42,"endColumn":22,"suggestions":"740"},{"ruleId":"667","severity":1,"message":"726","line":67,"column":8,"nodeType":"682","endLine":67,"endColumn":60,"suggestions":"741"},{"ruleId":"667","severity":1,"message":"728","line":82,"column":8,"nodeType":"682","endLine":82,"endColumn":21,"suggestions":"742"},{"ruleId":"667","severity":1,"message":"722","line":27,"column":8,"nodeType":"682","endLine":27,"endColumn":29,"suggestions":"743"},{"ruleId":"667","severity":1,"message":"697","line":35,"column":8,"nodeType":"682","endLine":35,"endColumn":10,"suggestions":"744"},"no-unused-vars","'GraphicalViewModal' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'authCtx'. Either include it or remove the dependency array.",["745"],"'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'erros' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'zoom' is defined but never used.","'zoomTransform' is defined but never used.","'setCurrentZoomState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["746"],"Assignments to the 'svg' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'xScale' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'index1'.","FunctionExpression","unsafeRefs","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["747"],"'LapTimes' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'socket'. Either include them or remove the dependency array.",["748"],["749"],"React Hook useEffect has missing dependencies: 'dispatch' and 'lap_time'. Either include them or remove the dependency array.",["750"],"React Hook useEffect has missing dependencies: 'getBestLapTime' and 'lapCount'. Either include them or remove the dependency array.",["751"],"'useEffect' is defined but never used.","React Hook useLayoutEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["752"],"React Hook useLayoutEffect has missing dependencies: 'dispatch' and 'socket'. Either include them or remove the dependency array.",["753"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'errors' is assigned a value but never used.","'sensorData' is assigned a value but never used.","'availableLaps' is assigned a value but never used.","'useSelector' is defined but never used.","'greatestValue' is assigned a value but never used.","'lowestValue' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'index', 'isFirstSensor', 'maxValue', 'sensorData', and 'yScale'. Either include them or remove the dependency array.",["754"],["755"],"React Hook useLayoutEffect has missing dependencies: 'GPSTrackCoordinates', 'dispatch', and 'trackLine'. Either include them or remove the dependency array.",["756"],"React Hook useLayoutEffect has missing dependencies: 'carLocation.x' and 'carLocation.y'. Either include them or remove the dependency array.",["757"],"React Hook useEffect has missing dependencies: 'dispatch', 'firstLap', 'getCarXYCoordinates', and 'socket'. Either include them or remove the dependency array.",["758"],"React Hook useEffect has missing dependencies: 'checkIfNewLap', 'dispatch', 'firstLap', and 'previousCarLocation'. Either include them or remove the dependency array.",["759"],["760"],["761"],["762"],["763"],["764"],["765"],["766"],["767"],["768"],["769"],["770"],["771"],["772"],["773"],["774"],{"desc":"775","fix":"776"},{"desc":"777","fix":"778"},{"desc":"775","fix":"779"},{"desc":"780","fix":"781"},{"desc":"780","fix":"782"},{"desc":"783","fix":"784"},{"desc":"785","fix":"786"},{"desc":"787","fix":"788"},{"desc":"780","fix":"789"},{"desc":"790","fix":"791"},{"desc":"780","fix":"792"},{"desc":"793","fix":"794"},{"desc":"795","fix":"796"},{"desc":"797","fix":"798"},{"desc":"799","fix":"800"},{"desc":"775","fix":"801"},{"desc":"777","fix":"802"},{"desc":"775","fix":"803"},{"desc":"780","fix":"804"},{"desc":"783","fix":"805"},{"desc":"785","fix":"806"},{"desc":"787","fix":"807"},{"desc":"780","fix":"808"},{"desc":"780","fix":"809"},{"desc":"790","fix":"810"},{"desc":"795","fix":"811"},{"desc":"797","fix":"812"},{"desc":"799","fix":"813"},{"desc":"793","fix":"814"},{"desc":"780","fix":"815"},"Update the dependencies array to be: [authCtx]",{"range":"816","text":"817"},"Update the dependencies array to be: [dispatch]",{"range":"818","text":"819"},{"range":"820","text":"817"},"Update the dependencies array to be: [dispatch, socket]",{"range":"821","text":"822"},{"range":"823","text":"822"},"Update the dependencies array to be: [dispatch, lapCount, lap_time]",{"range":"824","text":"825"},"Update the dependencies array to be: [getBestLapTime, lapCount, lapTimes]",{"range":"826","text":"827"},"Update the dependencies array to be: [GPSMapContainer, GPSMapSvgPathDimensions, dispatch]",{"range":"828","text":"829"},{"range":"830","text":"822"},"Update the dependencies array to be: [gRef, index, isFirstSensor, maxValue, sensorData, width, yScale]",{"range":"831","text":"832"},{"range":"833","text":"822"},"Update the dependencies array to be: [trackPath, firstLap, GPSTrackCoordinates, trackLine, dispatch]",{"range":"834","text":"835"},"Update the dependencies array to be: [carCircleRef, carLocation.x, carLocation.y]",{"range":"836","text":"837"},"Update the dependencies array to be: [GPSMapContainerDimensions, GPSMapSvgPathDimensions, dispatch, firstLap, getCarXYCoordinates, socket]",{"range":"838","text":"839"},"Update the dependencies array to be: [carLocation, checkIfNewLap, dispatch, firstLap, previousCarLocation]",{"range":"840","text":"841"},{"range":"842","text":"817"},{"range":"843","text":"819"},{"range":"844","text":"817"},{"range":"845","text":"822"},{"range":"846","text":"825"},{"range":"847","text":"827"},{"range":"848","text":"829"},{"range":"849","text":"822"},{"range":"850","text":"822"},{"range":"851","text":"832"},{"range":"852","text":"837"},{"range":"853","text":"839"},{"range":"854","text":"841"},{"range":"855","text":"835"},{"range":"856","text":"822"},[921,930],"[authCtx]",[4515,4517],"[dispatch]",[604,613],[3500,3502],"[dispatch, socket]",[840,842],[971,981],"[dispatch, lapCount, lap_time]",[1088,1098],"[getBestLapTime, lapCount, lapTimes]",[1135,1177],"[GPSMapContainer, GPSMapSvgPathDimensions, dispatch]",[1314,1316],[2571,2584],"[gRef, index, isFirstSensor, maxValue, sensorData, width, yScale]",[1094,1096],[1200,1221],"[trackPath, firstLap, GPSTrackCoordinates, trackLine, dispatch]",[1462,1476],"[carCircleRef, carLocation.x, carLocation.y]",[2179,2231],"[GPSMapContainerDimensions, GPSMapSvgPathDimensions, dispatch, firstLap, getCarXYCoordinates, socket]",[2641,2654],"[carLocation, checkIfNewLap, dispatch, firstLap, previousCarLocation]",[921,930],[4515,4517],[604,613],[840,842],[971,981],[1088,1098],[1135,1177],[1314,1316],[3500,3502],[2571,2584],[1462,1476],[2179,2231],[2641,2654],[1200,1221],[1094,1096]]