{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brand\\\\source\\\\repos\\\\DAS-Server\\\\client\\\\src\\\\components\\\\livePage\\\\CarLocation\\\\CarLocation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { select } from 'd3';\nimport { SocketContext } from '../../../SocketContext';\nimport proj4 from 'proj4';\nimport { updateCarLocation, updateFirstLap, addCoordinateToGPSTrack } from '../../../actions/livePage/gpsActions';\nimport { updateLapCount } from '../../../actions/livePage/lapTimesActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CarLocation() {\n  _s();\n\n  const GPSMapSvgPathDimensions = useSelector(state => state.gps.GPSMapSvgPathDimensions);\n  const firstLap = useSelector(state => state.gps.firstLap);\n  const GPSMapContainerDimensions = useSelector(state => state.gps.GPSMapContainerDimensions);\n  const socket = useContext(SocketContext);\n  const carLocation = useSelector(state => state.gps.carLocation);\n  const dispatch = useDispatch();\n  const carCircleRef = useRef(null);\n  const oldCarLocation = useRef();\n  const startLocation = useSelector(state => state.gps.startLocation);\n  useEffect(() => {\n    oldCarLocation.current = carLocation;\n  });\n  const previousCarLocation = oldCarLocation.current;\n  useLayoutEffect(() => {\n    if (carCircleRef.current) {\n      const carCircle = select(carCircleRef.current);\n      carCircle.attr(\"cx\", carLocation.x).attr(\"cy\", carLocation.y).attr(\"fill\", \"red\").attr(\"r\", 7);\n    }\n  }, [carCircleRef]);\n  useEffect(() => {\n    if (carCircleRef.current) {\n      const carCircle = select(carCircleRef.current);\n      carCircle.attr(\"cx\", carLocation.x).attr(\"cy\", carLocation.y);\n    }\n  }, [carLocation]);\n  useEffect(() => {\n    socket.on('gps_data', data => {\n      if (GPSMapContainerDimensions.height !== 0) {\n        const carCoordinates = getCarXYCoordinates(data);\n\n        if (firstLap) {\n          dispatch(addCoordinateToGPSTrack({\n            x: carCoordinates.x,\n            y: carCoordinates.y\n          }));\n        }\n\n        dispatch(updateCarLocation(carCoordinates));\n      }\n    });\n  }, [GPSMapContainerDimensions, GPSMapSvgPathDimensions]);\n  useEffect(() => {\n    if (oldCarLocation.current && previousCarLocation !== undefined) {\n      const isNewLap = checkIfNewLap();\n\n      if (firstLap && isNewLap) {\n        dispatch(updateFirstLap(false));\n        dispatch(updateLapCount());\n      } else if (isNewLap) {\n        dispatch(updateLapCount());\n      }\n    }\n  }, [carLocation]);\n\n  function checkIfNewLap() {\n    if (previousCarLocation.verticalDisplacement < 0 && carLocation.verticalDisplacement >= 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function getCarXYCoordinates(carCoordinates) {\n    if (GPSMapContainerDimensions.height !== 0) {\n      const [x1, y1] = proj4(\"EPSG:4326\", \"EPSG:3857\", [parseFloat(carCoordinates.x.toFixed(7)), parseFloat(carCoordinates.y.toFixed(7))]);\n      const verticalOffset = GPSMapContainerDimensions.height;\n      const horizontalOffset = parseFloat(GPSMapContainerDimensions.width / 2);\n      const verticalDisplacement = parseFloat(parseFloat(y1).toFixed(2) - parseFloat(startLocation.y)).toFixed(2);\n      const horizontalDisplacement = parseFloat(parseFloat(x1).toFixed(2) - parseFloat(startLocation.x)).toFixed(2);\n      const x = parseFloat(parseFloat(horizontalOffset) + parseFloat(horizontalDisplacement)).toFixed(2);\n      const y = parseFloat(parseFloat(verticalOffset) - (parseFloat(horizontalOffset) + parseFloat(verticalDisplacement))).toFixed(2);\n      return {\n        x: x,\n        y: y,\n        verticalDisplacement: verticalDisplacement\n      };\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"circle\", {\n    ref: carCircleRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CarLocation, \"WQaV9rYCZO1cN+343u4UQVPxHYk=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch, useSelector];\n});\n\n_c = CarLocation;\nexport default CarLocation;\n\nvar _c;\n\n$RefreshReg$(_c, \"CarLocation\");","map":{"version":3,"sources":["C:/Users/brand/source/repos/DAS-Server/client/src/components/livePage/CarLocation/CarLocation.js"],"names":["React","useEffect","useLayoutEffect","useRef","useContext","useSelector","useDispatch","select","SocketContext","proj4","updateCarLocation","updateFirstLap","addCoordinateToGPSTrack","updateLapCount","CarLocation","GPSMapSvgPathDimensions","state","gps","firstLap","GPSMapContainerDimensions","socket","carLocation","dispatch","carCircleRef","oldCarLocation","startLocation","current","previousCarLocation","carCircle","attr","x","y","on","data","height","carCoordinates","getCarXYCoordinates","undefined","isNewLap","checkIfNewLap","verticalDisplacement","x1","y1","parseFloat","toFixed","verticalOffset","horizontalOffset","width","horizontalDisplacement"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,eAA1B,EAA2CC,MAA3C,EAAmDC,UAAnD,QAAoE,OAApE;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,MAAR,QAAqB,IAArB;AACA,SAAQC,aAAR,QAA4B,wBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,iBAAR,EAA2BC,cAA3B,EAA2CC,uBAA3C,QAAyE,sCAAzE;AACA,SAAQC,cAAR,QAA8B,2CAA9B;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AAEnB,QAAMC,uBAAuB,GAAGV,WAAW,CAAGW,KAAD,IAAWA,KAAK,CAACC,GAAN,CAAUF,uBAAvB,CAA3C;AAEA,QAAMG,QAAQ,GAAGb,WAAW,CAAGW,KAAD,IAAWA,KAAK,CAACC,GAAN,CAAUC,QAAvB,CAA5B;AAEA,QAAMC,yBAAyB,GAAGd,WAAW,CAAGW,KAAD,IAAWA,KAAK,CAACC,GAAN,CAAUE,yBAAvB,CAA7C;AAEA,QAAMC,MAAM,GAAGhB,UAAU,CAACI,aAAD,CAAzB;AAEA,QAAMa,WAAW,GAAGhB,WAAW,CAAGW,KAAD,IAAWA,KAAK,CAACC,GAAN,CAAUI,WAAvB,CAA/B;AAEA,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AAEA,QAAMiB,YAAY,GAAGpB,MAAM,CAAC,IAAD,CAA3B;AAEA,QAAMqB,cAAc,GAAGrB,MAAM,EAA7B;AAEA,QAAMsB,aAAa,GAAGpB,WAAW,CAAGW,KAAD,IAAWA,KAAK,CAACC,GAAN,CAAUQ,aAAvB,CAAjC;AAGAxB,EAAAA,SAAS,CAAE,MAAM;AACbuB,IAAAA,cAAc,CAACE,OAAf,GAAyBL,WAAzB;AACH,GAFQ,CAAT;AAIA,QAAMM,mBAAmB,GAAGH,cAAc,CAACE,OAA3C;AAGAxB,EAAAA,eAAe,CAAE,MAAM;AACnB,QAAGqB,YAAY,CAACG,OAAhB,EAAyB;AACrB,YAAME,SAAS,GAAGrB,MAAM,CAACgB,YAAY,CAACG,OAAd,CAAxB;AACAE,MAAAA,SAAS,CAACC,IAAV,CAAe,IAAf,EAAqBR,WAAW,CAACS,CAAjC,EAAoCD,IAApC,CAAyC,IAAzC,EAA+CR,WAAW,CAACU,CAA3D,EAA8DF,IAA9D,CAAmE,MAAnE,EAA2E,KAA3E,EAAkFA,IAAlF,CAAuF,GAAvF,EAA4F,CAA5F;AACH;AACJ,GALc,EAKZ,CAACN,YAAD,CALY,CAAf;AAOAtB,EAAAA,SAAS,CAAE,MAAM;AACb,QAAGsB,YAAY,CAACG,OAAhB,EAAyB;AACrB,YAAME,SAAS,GAAGrB,MAAM,CAACgB,YAAY,CAACG,OAAd,CAAxB;AACAE,MAAAA,SAAS,CAACC,IAAV,CAAe,IAAf,EAAqBR,WAAW,CAACS,CAAjC,EAAoCD,IAApC,CAAyC,IAAzC,EAA+CR,WAAW,CAACU,CAA3D;AACH;AAEJ,GANQ,EAMN,CAACV,WAAD,CANM,CAAT;AAQApB,EAAAA,SAAS,CAAE,MAAM;AACbmB,IAAAA,MAAM,CAACY,EAAP,CAAU,UAAV,EAAuBC,IAAD,IAAU;AAE5B,UAAId,yBAAyB,CAACe,MAA1B,KAAqC,CAAzC,EAA4C;AAExC,cAAMC,cAAc,GAAGC,mBAAmB,CAACH,IAAD,CAA1C;;AAEA,YAAGf,QAAH,EAAa;AACTI,UAAAA,QAAQ,CAACV,uBAAuB,CAAC;AAACkB,YAAAA,CAAC,EAAEK,cAAc,CAACL,CAAnB;AAAsBC,YAAAA,CAAC,EAAEI,cAAc,CAACJ;AAAxC,WAAD,CAAxB,CAAR;AACH;;AAEDT,QAAAA,QAAQ,CAACZ,iBAAiB,CAACyB,cAAD,CAAlB,CAAR;AACH;AACJ,KAZD;AAcH,GAfQ,EAeN,CAAChB,yBAAD,EAA4BJ,uBAA5B,CAfM,CAAT;AAiBAd,EAAAA,SAAS,CAAE,MAAM;AAEb,QAAGuB,cAAc,CAACE,OAAf,IAA0BC,mBAAmB,KAAKU,SAArD,EAAgE;AAC5D,YAAMC,QAAQ,GAAGC,aAAa,EAA9B;;AAEA,UAAGrB,QAAQ,IAAIoB,QAAf,EAAyB;AACrBhB,QAAAA,QAAQ,CAACX,cAAc,CAAC,KAAD,CAAf,CAAR;AACAW,QAAAA,QAAQ,CAACT,cAAc,EAAf,CAAR;AACH,OAHD,MAGO,IAAIyB,QAAJ,EAAc;AACjBhB,QAAAA,QAAQ,CAACT,cAAc,EAAf,CAAR;AACH;AACJ;AAEJ,GAbQ,EAaN,CAACQ,WAAD,CAbM,CAAT;;AAeA,WAASkB,aAAT,GAAyB;AACrB,QAAIZ,mBAAmB,CAACa,oBAApB,GAA2C,CAA3C,IAAgDnB,WAAW,CAACmB,oBAAZ,IAAoC,CAAxF,EAA2F;AACvF,aAAO,IAAP;AACH;;AAED,WAAO,KAAP;AACH;;AAED,WAASJ,mBAAT,CAA8BD,cAA9B,EAA8C;AAE1C,QAAIhB,yBAAyB,CAACe,MAA1B,KAAqC,CAAzC,EAA6C;AAE3C,YAAM,CAACO,EAAD,EAAIC,EAAJ,IAAUjC,KAAK,CAAC,WAAD,EAAc,WAAd,EAA2B,CAAEkC,UAAU,CAACR,cAAc,CAACL,CAAf,CAAiBc,OAAjB,CAAyB,CAAzB,CAAD,CAAZ,EAA4CD,UAAU,CAACR,cAAc,CAACJ,CAAf,CAAiBa,OAAjB,CAAyB,CAAzB,CAAD,CAAtD,CAA3B,CAArB;AAEA,YAAMC,cAAc,GAAI1B,yBAAyB,CAACe,MAAlD;AAEA,YAAMY,gBAAgB,GAAGH,UAAU,CAACxB,yBAAyB,CAAC4B,KAA1B,GAAkC,CAAnC,CAAnC;AAEA,YAAMP,oBAAoB,GAAGG,UAAU,CAACA,UAAU,CAACD,EAAD,CAAV,CAAeE,OAAf,CAAuB,CAAvB,IAA4BD,UAAU,CAAClB,aAAa,CAACM,CAAf,CAAvC,CAAV,CAAoEa,OAApE,CAA4E,CAA5E,CAA7B;AAEA,YAAMI,sBAAsB,GAAGL,UAAU,CAACA,UAAU,CAACF,EAAD,CAAV,CAAeG,OAAf,CAAuB,CAAvB,IAA4BD,UAAU,CAAClB,aAAa,CAACK,CAAf,CAAvC,CAAV,CAAoEc,OAApE,CAA4E,CAA5E,CAA/B;AAEA,YAAMd,CAAC,GAAGa,UAAU,CAACA,UAAU,CAACG,gBAAD,CAAV,GAA+BH,UAAU,CAACK,sBAAD,CAA1C,CAAV,CAA8EJ,OAA9E,CAAsF,CAAtF,CAAV;AAEA,YAAMb,CAAC,GAAGY,UAAU,CAACA,UAAU,CAACE,cAAD,CAAV,IAA8BF,UAAU,CAACG,gBAAD,CAAV,GAA+BH,UAAU,CAACH,oBAAD,CAAvE,CAAD,CAAV,CAA2GI,OAA3G,CAAmH,CAAnH,CAAV;AAEA,aAAQ;AACNd,QAAAA,CAAC,EAAEA,CADG;AAENC,QAAAA,CAAC,EAAEA,CAFG;AAGNS,QAAAA,oBAAoB,EAAEA;AAHhB,OAAR;AAKD;AACF;;AAEH,sBACI;AAAQ,IAAA,GAAG,EAAEjB;AAAb;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAhHQT,W;UAE2BT,W,EAEfA,W,EAEiBA,W,EAIdA,W,EAEHC,W,EAMKD,W;;;KAlBjBS,W;AAkHT,eAAeA,WAAf","sourcesContent":["import React, {useEffect, useLayoutEffect, useRef, useContext} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {select} from 'd3';\r\nimport {SocketContext} from '../../../SocketContext';\r\nimport proj4 from 'proj4';\r\nimport {updateCarLocation, updateFirstLap, addCoordinateToGPSTrack} from '../../../actions/livePage/gpsActions'\r\nimport {updateLapCount}  from '../../../actions/livePage/lapTimesActions'\r\n\r\nfunction CarLocation() {  \r\n\r\n    const GPSMapSvgPathDimensions = useSelector( (state) => state.gps.GPSMapSvgPathDimensions);\r\n\r\n    const firstLap = useSelector( (state) => state.gps.firstLap);\r\n\r\n    const GPSMapContainerDimensions = useSelector( (state) => state.gps.GPSMapContainerDimensions);\r\n\r\n    const socket = useContext(SocketContext);\r\n\r\n    const carLocation = useSelector( (state) => state.gps.carLocation);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const carCircleRef = useRef(null);\r\n    \r\n    const oldCarLocation = useRef();\r\n\r\n    const startLocation = useSelector( (state) => state.gps.startLocation);\r\n\r\n\r\n    useEffect( () => {\r\n        oldCarLocation.current = carLocation;\r\n    })\r\n\r\n    const previousCarLocation = oldCarLocation.current;\r\n\r\n\r\n    useLayoutEffect( () => { \r\n        if(carCircleRef.current) {\r\n            const carCircle = select(carCircleRef.current);\r\n            carCircle.attr(\"cx\", carLocation.x).attr(\"cy\", carLocation.y).attr(\"fill\", \"red\").attr(\"r\", 7);\r\n        }\r\n    }, [carCircleRef]);\r\n\r\n    useEffect( () => {\r\n        if(carCircleRef.current) {\r\n            const carCircle = select(carCircleRef.current);\r\n            carCircle.attr(\"cx\", carLocation.x).attr(\"cy\", carLocation.y);\r\n        }\r\n\r\n    }, [carLocation])\r\n\r\n    useEffect( () => {\r\n        socket.on('gps_data', (data) => {\r\n            \r\n            if (GPSMapContainerDimensions.height !== 0) { \r\n\r\n                const carCoordinates = getCarXYCoordinates(data);\r\n\r\n                if(firstLap) {\r\n                    dispatch(addCoordinateToGPSTrack({x: carCoordinates.x, y: carCoordinates.y}))\r\n                }\r\n\r\n                dispatch(updateCarLocation(carCoordinates))\r\n            }\r\n        });\r\n\r\n    }, [GPSMapContainerDimensions, GPSMapSvgPathDimensions])\r\n\r\n    useEffect( () => {\r\n\r\n        if(oldCarLocation.current && previousCarLocation !== undefined) {\r\n            const isNewLap = checkIfNewLap();\r\n\r\n            if(firstLap && isNewLap) {\r\n                dispatch(updateFirstLap(false))\r\n                dispatch(updateLapCount())\r\n            } else if (isNewLap) {\r\n                dispatch(updateLapCount())\r\n            }\r\n        }\r\n       \r\n    }, [carLocation])\r\n\r\n    function checkIfNewLap() {\r\n        if (previousCarLocation.verticalDisplacement < 0 && carLocation.verticalDisplacement >= 0) {\r\n            return true;\r\n        } \r\n\r\n        return false;\r\n    }\r\n\r\n    function getCarXYCoordinates (carCoordinates) {\r\n\r\n        if (GPSMapContainerDimensions.height !== 0 ) {\r\n      \r\n          const [x1,y1] = proj4(\"EPSG:4326\", \"EPSG:3857\", [ parseFloat(carCoordinates.x.toFixed(7)),  parseFloat(carCoordinates.y.toFixed(7))] );\r\n          \r\n          const verticalOffset = (GPSMapContainerDimensions.height);\r\n                    \r\n          const horizontalOffset = parseFloat(GPSMapContainerDimensions.width / 2);\r\n         \r\n          const verticalDisplacement = parseFloat(parseFloat(y1).toFixed(2) - parseFloat(startLocation.y)).toFixed(2);\r\n          \r\n          const horizontalDisplacement = parseFloat(parseFloat(x1).toFixed(2) - parseFloat(startLocation.x)).toFixed(2);\r\n        \r\n          const x = parseFloat(parseFloat(horizontalOffset) + parseFloat(horizontalDisplacement)).toFixed(2);\r\n          \r\n          const y = parseFloat(parseFloat(verticalOffset) - (parseFloat(horizontalOffset) + parseFloat(verticalDisplacement))).toFixed(2);\r\n        \r\n          return  {\r\n            x: x,\r\n            y: y,\r\n            verticalDisplacement: verticalDisplacement\r\n          }\r\n        }\r\n      }\r\n\r\n    return (\r\n        <circle ref={carCircleRef}></circle>\r\n    )\r\n}\r\n\r\nexport default CarLocation;\r\n"]},"metadata":{},"sourceType":"module"}