{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brand\\\\source\\\\repos\\\\DAS-Server\\\\client\\\\src\\\\components\\\\historyPage\\\\graphicalView\\\\graphicalViewModal\\\\forms\\\\SensorSelectionForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateModalStepForward, updateSelectedSensor } from '../../../../../actions/historyPage/graphicalViewActions/graphicalViewModalActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SensorSelectionForm(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    handleSubmit,\n    register\n  } = useForm();\n  const allSensors = useSelector(state => state.generalHistoricalData.allSensors);\n  const displayedSensors = useSelector(state => state.generalHistoricalData.displayedSensors);\n  const availableSensors = allSensors.filter(sensor => {\n    return !displayedSensors.includes(sensor);\n  });\n\n  const onSubmit = async data => {\n    dispatch(updateSelectedSensor(data.sensor));\n    dispatch(updateModalStepForward());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Sensor:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          name: \"sensor\",\n          ref: register,\n          children: availableSensors.map((sensor, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: sensor,\n            children: sensor\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          className: \"d-block\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SensorSelectionForm, \"jokOm4M789DONR2u9Fz9okaiiFg=\", false, function () {\n  return [useDispatch, useForm, useSelector, useSelector];\n});\n\n_c = SensorSelectionForm;\nexport default SensorSelectionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SensorSelectionForm\");","map":{"version":3,"sources":["C:/Users/brand/source/repos/DAS-Server/client/src/components/historyPage/graphicalView/graphicalViewModal/forms/SensorSelectionForm.js"],"names":["React","useForm","useSelector","useDispatch","updateModalStepForward","updateSelectedSensor","SensorSelectionForm","props","dispatch","handleSubmit","register","allSensors","state","generalHistoricalData","displayedSensors","availableSensors","filter","sensor","includes","onSubmit","data","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,sBAAT,EAAiCC,oBAAjC,QAA6D,mFAA7D;;;;AAGA,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAEhC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAACM,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAA2BT,OAAO,EAAxC;AAEA,QAAMU,UAAU,GAAGT,WAAW,CAAGU,KAAD,IAAWA,KAAK,CAACC,qBAAN,CAA4BF,UAAzC,CAA9B;AACA,QAAMG,gBAAgB,GAAGZ,WAAW,CAAGU,KAAD,IAAWA,KAAK,CAACC,qBAAN,CAA4BC,gBAAzC,CAApC;AAEA,QAAMC,gBAAgB,GAAGJ,UAAU,CAACK,MAAX,CAAoBC,MAAD,IAAY;AACpD,WAAO,CAACH,gBAAgB,CAACI,QAAjB,CAA0BD,MAA1B,CAAR;AACH,GAFwB,CAAzB;;AAIA,QAAME,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAC7BZ,IAAAA,QAAQ,CAACH,oBAAoB,CAACe,IAAI,CAACH,MAAN,CAArB,CAAR;AACAT,IAAAA,QAAQ,CAACJ,sBAAsB,EAAvB,CAAR;AACH,GAHD;;AAKA,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAIA;AAAM,MAAA,QAAQ,EAAEK,YAAY,CAACU,QAAD,CAA5B;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,UAAA,IAAI,EAAC,QAAtC;AAA+C,UAAA,GAAG,EAAET,QAApD;AAAA,oBACKK,gBAAgB,CAACM,GAAjB,CAAsB,CAACJ,MAAD,EAASK,KAAT,kBACnB;AAAoB,YAAA,KAAK,EAAEL,MAA3B;AAAA,sBAAoCA;AAApC,aAAaK,KAAb;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,IAAI,EAAC,QAAzC;AAAkD,UAAA,SAAS,EAAC,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA,kBADJ;AAoBH;;GArCQhB,mB;UAEYH,W,EACgBF,O,EAEdC,W,EACMA,W;;;KANpBI,mB;AAuCT,eAAeA,mBAAf","sourcesContent":["import React from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { updateModalStepForward, updateSelectedSensor } from '../../../../../actions/historyPage/graphicalViewActions/graphicalViewModalActions';\r\n\r\n\r\nfunction SensorSelectionForm(props) {\r\n    \r\n    const dispatch = useDispatch();\r\n    const {handleSubmit, register} = useForm();\r\n\r\n    const allSensors = useSelector( (state) => state.generalHistoricalData.allSensors);\r\n    const displayedSensors = useSelector( (state) => state.generalHistoricalData.displayedSensors);\r\n\r\n    const availableSensors = allSensors.filter( (sensor) => {\r\n        return !displayedSensors.includes(sensor);\r\n    });\r\n\r\n    const onSubmit = async (data) => {\r\n        dispatch(updateSelectedSensor(data.sensor))\r\n        dispatch(updateModalStepForward());\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h2>\r\n            Select Sensor: \r\n        </h2>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"form-group\">\r\n                <select className=\"form-control\" name=\"sensor\" ref={register}>\r\n                    {availableSensors.map( (sensor, index) =>\r\n                        <option key={index} value={sensor}>{sensor}</option>\r\n                    )}\r\n                </select>\r\n            </div>\r\n        \r\n            <div className=\"d-flex\">\r\n                <button className=\"btn btn-primary\" type=\"submit\" className=\"d-block\">Next</button>\r\n            </div>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SensorSelectionForm;\r\n"]},"metadata":{},"sourceType":"module"}