{"ast":null,"code":"import React,{useRef,useLayoutEffect,memo,useEffect,useContext}from'react';import{useSelector,useDispatch}from'react-redux';import'./GPSMap.css';import CarLocation from'../CarLocation/CarLocation';import TrackPath from'../TrackPath/TrackPath';import{SocketContext}from'../../../SocketContext';import{updateGPSMapContainerDimensions}from'../../../actions/livePage/gpsActions';import{updateSpeed}from'../../../actions/livePage/monitoringActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function GPSMap(){var dispatch=useDispatch();var socket=useContext(SocketContext);var GPSMapSvgPathDimensions=useSelector(function(state){return state.gps.GPSMapSvgPathDimensions;});var GPSMapContainer=useRef(null);var speed=useSelector(function(state){return state.monitoring.speed;});useLayoutEffect(function(){if(GPSMapContainer.current){var dimensions={height:GPSMapContainer.current.offsetHeight,width:GPSMapContainer.current.offsetWidth};dispatch(updateGPSMapContainerDimensions(dimensions));}GPSMapContainer.current=false;},[GPSMapContainer,GPSMapSvgPathDimensions]);useLayoutEffect(function(){socket.on('speed',function(data){dispatch(updateSpeed(data));});},[]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"gps-container d-flex\",ref:GPSMapContainer,children:[/*#__PURE__*/_jsx(\"div\",{className:\"car-speed align-self-start p-2 mt-3\",style:{fontWeight:700},children:GPSMapSvgPathDimensions.x===0?\"\":\"\".concat(parseInt(speed),\" mph\")}),GPSMapSvgPathDimensions.x===0?/*#__PURE__*/_jsx(\"h2\",{children:\"Need More Data... \"}):\"\",/*#__PURE__*/_jsxs(\"svg\",{style:{width:\"100%\",height:\"100%\"},viewBox:\"\".concat(GPSMapSvgPathDimensions.x,\" \").concat(GPSMapSvgPathDimensions.y-5,\" \").concat(GPSMapSvgPathDimensions.width,\" \").concat(GPSMapSvgPathDimensions.height+10),children:[/*#__PURE__*/_jsx(TrackPath,{}),/*#__PURE__*/_jsx(CarLocation,{})]})]})});}export default/*#__PURE__*/memo(GPSMap);","map":{"version":3,"sources":["C:/Users/brand/source/repos/DAS-Server/client/src/components/livePage/GPSMap/GPSMap.js"],"names":["React","useRef","useLayoutEffect","memo","useEffect","useContext","useSelector","useDispatch","CarLocation","TrackPath","SocketContext","updateGPSMapContainerDimensions","updateSpeed","GPSMap","dispatch","socket","GPSMapSvgPathDimensions","state","gps","GPSMapContainer","speed","monitoring","current","dimensions","height","offsetHeight","width","offsetWidth","on","data","fontWeight","x","parseInt","y"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,MAAf,CAAuBC,eAAvB,CAAwCC,IAAxC,CAA8CC,SAA9C,CAAyDC,UAAzD,KAA0E,OAA1E,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CACA,MAAO,cAAP,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,OAAQC,aAAR,KAA4B,wBAA5B,CACA,OAAQC,+BAAR,KAA8C,sCAA9C,CACA,OAAQC,WAAR,KAA0B,6CAA1B,C,6IAEA,QAASC,CAAAA,MAAT,EAAmB,CAEf,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CAEA,GAAMQ,CAAAA,MAAM,CAAGV,UAAU,CAACK,aAAD,CAAzB,CAEA,GAAMM,CAAAA,uBAAuB,CAAGV,WAAW,CAAE,SAACW,KAAD,QAAWA,CAAAA,KAAK,CAACC,GAAN,CAAUF,uBAArB,EAAF,CAA3C,CAEA,GAAMG,CAAAA,eAAe,CAAGlB,MAAM,CAAC,IAAD,CAA9B,CAEA,GAAMmB,CAAAA,KAAK,CAAGd,WAAW,CAAE,SAACW,KAAD,QAAWA,CAAAA,KAAK,CAACI,UAAN,CAAiBD,KAA5B,EAAF,CAAzB,CAEAlB,eAAe,CAAE,UAAM,CACnB,GAAIiB,eAAe,CAACG,OAApB,CAA6B,CACzB,GAAMC,CAAAA,UAAU,CAAG,CAACC,MAAM,CAAEL,eAAe,CAACG,OAAhB,CAAwBG,YAAjC,CAA+CC,KAAK,CAAEP,eAAe,CAACG,OAAhB,CAAwBK,WAA9E,CAAnB,CACAb,QAAQ,CAACH,+BAA+B,CAACY,UAAD,CAAhC,CAAR,CACH,CACDJ,eAAe,CAACG,OAAhB,CAA0B,KAA1B,CACH,CANc,CAMZ,CAACH,eAAD,CAAkBH,uBAAlB,CANY,CAAf,CAQAd,eAAe,CAAC,UAAM,CAClBa,MAAM,CAACa,EAAP,CAAU,OAAV,CAAmB,SAACC,IAAD,CAAU,CACzBf,QAAQ,CAACF,WAAW,CAACiB,IAAD,CAAZ,CAAR,CACD,CAFH,EAGH,CAJc,CAIZ,EAJY,CAAf,CAMA,mBACI,sCACI,aAAK,SAAS,CAAC,sBAAf,CAAsC,GAAG,CAAEV,eAA3C,wBACI,YAAK,SAAS,CAAC,qCAAf,CAAqD,KAAK,CAAE,CAACW,UAAU,CAAE,GAAb,CAA5D,UACKd,uBAAuB,CAACe,CAAxB,GAA8B,CAA9B,CAAkC,EAAlC,WAA0CC,QAAQ,CAACZ,KAAD,CAAlD,QADL,EADJ,CAIKJ,uBAAuB,CAACe,CAAxB,GAA8B,CAA9B,cAAkC,0CAAlC,CAAgE,EAJrE,cAKQ,aAAK,KAAK,CAAE,CAACL,KAAK,CAAE,MAAR,CAAgBF,MAAM,CAAE,MAAxB,CAAZ,CAA6C,OAAO,WAAKR,uBAAuB,CAACe,CAA7B,aAAkCf,uBAAuB,CAACiB,CAAxB,CAA4B,CAA9D,aAAmEjB,uBAAuB,CAACU,KAA3F,aAAoGV,uBAAuB,CAACQ,MAAxB,CAAiC,EAArI,CAApD,wBACI,KAAC,SAAD,IADJ,cAEI,KAAC,WAAD,IAFJ,GALR,GADJ,EADJ,CAcH,CAED,2BAAerB,IAAI,CAACU,MAAD,CAAnB","sourcesContent":["import React, {useRef, useLayoutEffect, memo, useEffect, useContext} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport './GPSMap.css';\r\nimport CarLocation from '../CarLocation/CarLocation';\r\nimport TrackPath from '../TrackPath/TrackPath';\r\nimport {SocketContext} from '../../../SocketContext';\r\nimport {updateGPSMapContainerDimensions} from '../../../actions/livePage/gpsActions'\r\nimport {updateSpeed} from '../../../actions/livePage/monitoringActions'\r\n\r\nfunction GPSMap () {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const socket = useContext(SocketContext);\r\n\r\n    const GPSMapSvgPathDimensions = useSelector( (state) => state.gps.GPSMapSvgPathDimensions);\r\n    \r\n    const GPSMapContainer = useRef(null);\r\n\r\n    const speed = useSelector( (state) => state.monitoring.speed);\r\n\r\n    useLayoutEffect( () => {\r\n        if (GPSMapContainer.current) {\r\n            const dimensions = {height: GPSMapContainer.current.offsetHeight, width: GPSMapContainer.current.offsetWidth };\r\n            dispatch(updateGPSMapContainerDimensions(dimensions))\r\n        }\r\n        GPSMapContainer.current = false;\r\n    }, [GPSMapContainer, GPSMapSvgPathDimensions])\r\n\r\n    useLayoutEffect(() => {\r\n        socket.on('speed', (data) => {\r\n            dispatch(updateSpeed(data))\r\n          });\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"gps-container d-flex\" ref={GPSMapContainer}>\r\n                <div className=\"car-speed align-self-start p-2 mt-3\" style={{fontWeight: 700}}>\r\n                    {GPSMapSvgPathDimensions.x === 0 ? \"\" : `${parseInt(speed)} mph`}\r\n                </div>\r\n                {GPSMapSvgPathDimensions.x === 0 ? <h2>Need More Data... </h2> : \"\"}\r\n                    <svg style={{width: \"100%\", height: \"100%\"}} viewBox={`${GPSMapSvgPathDimensions.x} ${GPSMapSvgPathDimensions.y - 5} ${GPSMapSvgPathDimensions.width} ${GPSMapSvgPathDimensions.height + 10}`}  >\r\n                        <TrackPath/>\r\n                        <CarLocation/>\r\n                    </svg>\r\n            </div>\r\n        </>\r\n    ); \r\n}\r\n\r\nexport default memo(GPSMap);"]},"metadata":{},"sourceType":"module"}