{"ast":null,"code":"import adjust_lon from '../common/adjust_lon';\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\n\nexport function init() {//no-op\n}\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan(Math.PI / 4 + lat / 2.5)) * 1.25;\n  p.x = x;\n  p.y = y;\n  return p;\n}\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","map":{"version":3,"sources":["C:/Users/brand/source/repos/DAS-Server/client/node_modules/proj4/lib/projections/mill.js"],"names":["adjust_lon","init","forward","p","lon","x","lat","y","dlon","long0","x0","a","y0","Math","log","tan","PI","inverse","atan","exp","names"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,sBAAvB;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AACA,OAAO,SAASC,IAAT,GAAgB,CACrB;AACD;AAED;AACA;;AACA,OAAO,SAASC,OAAT,CAAiBC,CAAjB,EAAoB;AACzB,MAAIC,GAAG,GAAGD,CAAC,CAACE,CAAZ;AACA,MAAIC,GAAG,GAAGH,CAAC,CAACI,CAAZ;AACA;AACF;;AACE,MAAIC,IAAI,GAAGR,UAAU,CAACI,GAAG,GAAG,KAAKK,KAAZ,CAArB;AACA,MAAIJ,CAAC,GAAG,KAAKK,EAAL,GAAU,KAAKC,CAAL,GAASH,IAA3B;AACA,MAAID,CAAC,GAAG,KAAKK,EAAL,GAAU,KAAKD,CAAL,GAASE,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAAUF,IAAI,CAACG,EAAL,GAAU,CAAX,GAAiBV,GAAG,GAAG,GAAhC,CAAT,CAAT,GAA2D,IAA7E;AAEAH,EAAAA,CAAC,CAACE,CAAF,GAAMA,CAAN;AACAF,EAAAA,CAAC,CAACI,CAAF,GAAMA,CAAN;AACA,SAAOJ,CAAP;AACD;AAED;AACA;;AACA,OAAO,SAASc,OAAT,CAAiBd,CAAjB,EAAoB;AACzBA,EAAAA,CAAC,CAACE,CAAF,IAAO,KAAKK,EAAZ;AACAP,EAAAA,CAAC,CAACI,CAAF,IAAO,KAAKK,EAAZ;AAEA,MAAIR,GAAG,GAAGJ,UAAU,CAAC,KAAKS,KAAL,GAAaN,CAAC,CAACE,CAAF,GAAM,KAAKM,CAAzB,CAApB;AACA,MAAIL,GAAG,GAAG,OAAOO,IAAI,CAACK,IAAL,CAAUL,IAAI,CAACM,GAAL,CAAS,MAAMhB,CAAC,CAACI,CAAR,GAAY,KAAKI,CAA1B,CAAV,IAA0CE,IAAI,CAACG,EAAL,GAAU,CAA3D,CAAV;AAEAb,EAAAA,CAAC,CAACE,CAAF,GAAMD,GAAN;AACAD,EAAAA,CAAC,CAACI,CAAF,GAAMD,GAAN;AACA,SAAOH,CAAP;AACD;AAED,OAAO,IAAIiB,KAAK,GAAG,CAAC,oBAAD,EAAuB,MAAvB,CAAZ;AACP,eAAe;AACbnB,EAAAA,IAAI,EAAEA,IADO;AAEbC,EAAAA,OAAO,EAAEA,OAFI;AAGbe,EAAAA,OAAO,EAAEA,OAHI;AAIbG,EAAAA,KAAK,EAAEA;AAJM,CAAf","sourcesContent":["import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n"]},"metadata":{},"sourceType":"module"}