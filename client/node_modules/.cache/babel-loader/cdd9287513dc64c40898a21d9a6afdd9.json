{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brand\\\\source\\\\repos\\\\DAS-Server\\\\client\\\\src\\\\components\\\\livePage\\\\VerticalBar\\\\VerticalBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useLayoutEffect } from 'react';\nimport './VerticalBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction VerticalBar(props) {\n  _s();\n\n  const verticalBarRef = useRef(null);\n  const [svgLength, setSvgLength] = useState({\n    height: 0,\n    width: 0\n  });\n  useLayoutEffect(() => {\n    if (verticalBarRef.current) {\n      setSvgLength({\n        height: verticalBarRef.current.offsetHeight,\n        width: verticalBarRef.current.offsetWidth\n      });\n    }\n  }, [verticalBarRef]);\n  const percentage = parseFloat(parseFloat(parseFloat(props.value - props.min) * 100) / parseFloat(props.max - props.min));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vertial-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vertical-svg-container svg-container\",\n      ref: verticalBarRef,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"vertical-svg\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          className: \"vertical-svg__path svg__path\",\n          d: `M 0 ${svgLength.height} V ${svgLength.height - svgLength.height * percentage / 100} H ${svgLength.width} V ${svgLength.height} L 0 ${svgLength.height}`,\n          fill: \"#000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vertical-bar__desc\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"desc__sensor_name text-center\",\n        children: props.sensor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"desc__sensor_percent text-center\",\n        children: props.units === \"%\" ? `${parseFloat(percentage).toFixed(2)}%` : `${props.value} ${props.units}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VerticalBar, \"DHtcngoO6op9HXr+KI298yWbCxM=\");\n\n_c = VerticalBar;\nexport default VerticalBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerticalBar\");","map":{"version":3,"sources":["C:/Users/brand/source/repos/DAS-Server/client/src/components/livePage/VerticalBar/VerticalBar.js"],"names":["React","useRef","useState","useLayoutEffect","VerticalBar","props","verticalBarRef","svgLength","setSvgLength","height","width","current","offsetHeight","offsetWidth","percentage","parseFloat","value","min","max","sensor","units","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,EAAiCC,eAAjC,QAAuD,OAAvD;AACA,OAAO,mBAAP;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAExB,QAAMC,cAAc,GAAGL,MAAM,CAAC,IAAD,CAA7B;AAEA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAE;AAAEO,IAAAA,MAAM,EAAE,CAAV;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAAF,CAA1C;AAEAP,EAAAA,eAAe,CAAE,MAAM;AAEnB,QAAIG,cAAc,CAACK,OAAnB,EAA4B;AAExBH,MAAAA,YAAY,CAAE;AACVC,QAAAA,MAAM,EAAEH,cAAc,CAACK,OAAf,CAAuBC,YADrB;AAEVF,QAAAA,KAAK,EAAEJ,cAAc,CAACK,OAAf,CAAuBE;AAFpB,OAAF,CAAZ;AAIH;AAEJ,GAVc,EAUZ,CAACP,cAAD,CAVY,CAAf;AAYA,QAAMQ,UAAU,GAAGC,UAAU,CAAEA,UAAU,CAAEA,UAAU,CAACV,KAAK,CAACW,KAAN,GAAcX,KAAK,CAACY,GAArB,CAAV,GAAsC,GAAxC,CAAV,GAAyDF,UAAU,CAACV,KAAK,CAACa,GAAN,GAAYb,KAAK,CAACY,GAAnB,CAArE,CAA7B;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAsD,MAAA,GAAG,EAAEX,cAA3D;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,8BAAhB;AACI,UAAA,CAAC,EAAG,OAAMC,SAAS,CAACE,MAAO,MAAKF,SAAS,CAACE,MAAV,GAAoBF,SAAS,CAACE,MAAV,GAAmBK,UAApB,GAAkC,GAAI,MAAKP,SAAS,CAACG,KAAM,MAAKH,SAAS,CAACE,MAAO,QAAOF,SAAS,CAACE,MAAO,EADhK;AAEI,UAAA,IAAI,EAAE;AAFV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA,kBACKJ,KAAK,CAACc;AADX;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA,kBACMd,KAAK,CAACe,KAAN,KAAgB,GAAhB,GAAuB,GAAEL,UAAU,CAACD,UAAD,CAAV,CAAuBO,OAAvB,CAA+B,CAA/B,CAAkC,GAA3D,GAAiE,GAAEhB,KAAK,CAACW,KAAM,IAAGX,KAAK,CAACe,KAAM;AADpG;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GAxCQhB,W;;KAAAA,W;AA0CT,eAAeA,WAAf","sourcesContent":["import React, {useRef, useState, useLayoutEffect} from 'react';\r\nimport './VerticalBar.css';\r\n\r\nfunction VerticalBar(props) {\r\n\r\n    const verticalBarRef = useRef(null);\r\n\r\n    const [svgLength, setSvgLength] = useState( { height: 0, width: 0 } );\r\n\r\n    useLayoutEffect( () => {\r\n\r\n        if (verticalBarRef.current) {\r\n           \r\n            setSvgLength( {\r\n                height: verticalBarRef.current.offsetHeight,\r\n                width: verticalBarRef.current.offsetWidth \r\n           })\r\n        }\r\n\r\n    }, [verticalBarRef])\r\n\r\n    const percentage = parseFloat( parseFloat( parseFloat(props.value - props.min) * 100) / parseFloat(props.max - props.min) );\r\n\r\n    return (\r\n        <div className=\"vertial-bar\">\r\n            <div className=\"vertical-svg-container svg-container\" ref={verticalBarRef}>\r\n                <svg className=\"vertical-svg\">\r\n                    <path className=\"vertical-svg__path svg__path\"\r\n                        d={`M 0 ${svgLength.height} V ${svgLength.height - (svgLength.height * percentage) / 100} H ${svgLength.width} V ${svgLength.height} L 0 ${svgLength.height}`}\r\n                        fill={\"#000\"}\r\n                    />\r\n                </svg>\r\n            </div>\r\n            <div className=\"vertical-bar__desc\">\r\n                <div className=\"desc__sensor_name text-center\">\r\n                    {props.sensor}\r\n                </div>\r\n                <div className=\"desc__sensor_percent text-center\">\r\n                    { props.units === \"%\" ? `${parseFloat(percentage).toFixed(2)}%` : `${props.value} ${props.units}` } \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VerticalBar;"]},"metadata":{},"sourceType":"module"}