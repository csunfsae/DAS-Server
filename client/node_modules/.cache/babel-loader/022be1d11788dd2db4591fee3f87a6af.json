{"ast":null,"code":"import _defineProperty from\"C:/Users/brand/source/repos/DAS-Server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"C:/Users/brand/source/repos/DAS-Server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/brand/source/repos/DAS-Server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from'react';import{useForm}from'react-hook-form';import{useSelector,useDispatch}from'react-redux';import{updateModalStepForward,updateSelectedSensor}from'../../../../../actions/historyPage/graphicalViewActions/graphicalViewModalActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function SensorSelectionForm(props){var _jsx2;var dispatch=useDispatch();var _useForm=useForm(),handleSubmit=_useForm.handleSubmit,register=_useForm.register;var allSensors=useSelector(function(state){return state.generalHistoricalData.allSensors;});var displayedSensors=useSelector(function(state){return state.generalHistoricalData.displayedSensors;});var availableSensors=allSensors.filter(function(sensor){return!displayedSensors.includes(sensor);});var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(updateSelectedSensor(data.sensor));dispatch(updateModalStepForward());case 2:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Select Sensor:\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"select\",{className:\"form-control\",name:\"sensor\",ref:register,children:availableSensors.map(function(sensor,index){return/*#__PURE__*/_jsx(\"option\",{value:sensor,children:sensor},index);})})}),/*#__PURE__*/_jsx(\"div\",{className:\"d-flex\",children:/*#__PURE__*/_jsx(\"button\",(_jsx2={className:\"btn btn-primary\",type:\"submit\"},_defineProperty(_jsx2,\"className\",\"d-block\"),_defineProperty(_jsx2,\"children\",\"Next\"),_jsx2))})]})]});}export default SensorSelectionForm;","map":{"version":3,"sources":["C:/Users/brand/source/repos/das-server/client/src/components/historyPage/graphicalView/graphicalViewModal/forms/SensorSelectionForm.js"],"names":["React","useForm","useSelector","useDispatch","updateModalStepForward","updateSelectedSensor","SensorSelectionForm","props","dispatch","handleSubmit","register","allSensors","state","generalHistoricalData","displayedSensors","availableSensors","filter","sensor","includes","onSubmit","data","map","index"],"mappings":"2eAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,iBAAtB,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CACA,OAASC,sBAAT,CAAiCC,oBAAjC,KAA6D,mFAA7D,C,6IAGA,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,WAEhC,GAAMC,CAAAA,QAAQ,CAAGL,WAAW,EAA5B,CACA,aAAiCF,OAAO,EAAxC,CAAOQ,YAAP,UAAOA,YAAP,CAAqBC,QAArB,UAAqBA,QAArB,CAEA,GAAMC,CAAAA,UAAU,CAAGT,WAAW,CAAE,SAACU,KAAD,QAAWA,CAAAA,KAAK,CAACC,qBAAN,CAA4BF,UAAvC,EAAF,CAA9B,CACA,GAAMG,CAAAA,gBAAgB,CAAGZ,WAAW,CAAE,SAACU,KAAD,QAAWA,CAAAA,KAAK,CAACC,qBAAN,CAA4BC,gBAAvC,EAAF,CAApC,CAEA,GAAMC,CAAAA,gBAAgB,CAAGJ,UAAU,CAACK,MAAX,CAAmB,SAACC,MAAD,CAAY,CACpD,MAAO,CAACH,gBAAgB,CAACI,QAAjB,CAA0BD,MAA1B,CAAR,CACH,CAFwB,CAAzB,CAIA,GAAME,CAAAA,QAAQ,0FAAG,iBAAOC,IAAP,kHACbZ,QAAQ,CAACH,oBAAoB,CAACe,IAAI,CAACH,MAAN,CAArB,CAAR,CACAT,QAAQ,CAACJ,sBAAsB,EAAvB,CAAR,CAFa,sDAAH,kBAARe,CAAAA,QAAQ,4CAAd,CAKA,mBACI,wCACA,sCADA,cAIA,cAAM,QAAQ,CAAEV,YAAY,CAACU,QAAD,CAA5B,wBACI,YAAK,SAAS,CAAC,YAAf,uBACI,eAAQ,SAAS,CAAC,cAAlB,CAAiC,IAAI,CAAC,QAAtC,CAA+C,GAAG,CAAET,QAApD,UACKK,gBAAgB,CAACM,GAAjB,CAAsB,SAACJ,MAAD,CAASK,KAAT,qBACnB,eAAoB,KAAK,CAAEL,MAA3B,UAAoCA,MAApC,EAAaK,KAAb,CADmB,EAAtB,CADL,EADJ,EADJ,cASI,YAAK,SAAS,CAAC,QAAf,uBACI,sBAAQ,SAAS,CAAC,iBAAlB,CAAoC,IAAI,CAAC,QAAzC,oCAA4D,SAA5D,kDADJ,EATJ,GAJA,GADJ,CAoBH,CAED,cAAehB,CAAAA,mBAAf","sourcesContent":["import React from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { updateModalStepForward, updateSelectedSensor } from '../../../../../actions/historyPage/graphicalViewActions/graphicalViewModalActions';\r\n\r\n\r\nfunction SensorSelectionForm(props) {\r\n    \r\n    const dispatch = useDispatch();\r\n    const {handleSubmit, register} = useForm();\r\n\r\n    const allSensors = useSelector( (state) => state.generalHistoricalData.allSensors);\r\n    const displayedSensors = useSelector( (state) => state.generalHistoricalData.displayedSensors);\r\n\r\n    const availableSensors = allSensors.filter( (sensor) => {\r\n        return !displayedSensors.includes(sensor);\r\n    });\r\n\r\n    const onSubmit = async (data) => {\r\n        dispatch(updateSelectedSensor(data.sensor))\r\n        dispatch(updateModalStepForward());\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h2>\r\n            Select Sensor: \r\n        </h2>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"form-group\">\r\n                <select className=\"form-control\" name=\"sensor\" ref={register}>\r\n                    {availableSensors.map( (sensor, index) =>\r\n                        <option key={index} value={sensor}>{sensor}</option>\r\n                    )}\r\n                </select>\r\n            </div>\r\n        \r\n            <div className=\"d-flex\">\r\n                <button className=\"btn btn-primary\" type=\"submit\" className=\"d-block\">Next</button>\r\n            </div>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SensorSelectionForm;\r\n"]},"metadata":{},"sourceType":"module"}