{"ast":null,"code":"import { HALF_PI } from '../constants/values';\nexport default function (eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return -1 * HALF_PI;\n    } else {\n      return HALF_PI;\n    }\n  } //var phi = 0.5* q/(1-eccent*eccent);\n\n\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  } //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n\n\n  return NaN;\n}","map":{"version":3,"sources":["C:/Users/brand/source/repos/DAS-Server/client/node_modules/proj4/lib/common/iqsfnz.js"],"names":["HALF_PI","eccent","q","temp","Math","log","abs","phi","asin","dphi","sin_phi","cos_phi","con","i","sin","cos","pow","NaN"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,qBAAtB;AAEA,eAAe,UAASC,MAAT,EAAiBC,CAAjB,EAAoB;AACjC,MAAIC,IAAI,GAAG,IAAI,CAAC,IAAIF,MAAM,GAAGA,MAAd,KAAyB,IAAIA,MAA7B,IAAuCG,IAAI,CAACC,GAAL,CAAS,CAAC,IAAIJ,MAAL,KAAgB,IAAIA,MAApB,CAAT,CAAtD;;AACA,MAAIG,IAAI,CAACE,GAAL,CAASF,IAAI,CAACE,GAAL,CAASJ,CAAT,IAAcC,IAAvB,IAA+B,MAAnC,EAA2C;AACzC,QAAID,CAAC,GAAG,CAAR,EAAW;AACT,aAAQ,CAAC,CAAD,GAAKF,OAAb;AACD,KAFD,MAGK;AACH,aAAOA,OAAP;AACD;AACF,GATgC,CAUjC;;;AACA,MAAIO,GAAG,GAAGH,IAAI,CAACI,IAAL,CAAU,MAAMN,CAAhB,CAAV;AACA,MAAIO,IAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,GAAJ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BH,IAAAA,OAAO,GAAGN,IAAI,CAACU,GAAL,CAASP,GAAT,CAAV;AACAI,IAAAA,OAAO,GAAGP,IAAI,CAACW,GAAL,CAASR,GAAT,CAAV;AACAK,IAAAA,GAAG,GAAGX,MAAM,GAAGS,OAAf;AACAD,IAAAA,IAAI,GAAGL,IAAI,CAACY,GAAL,CAAS,IAAIJ,GAAG,GAAGA,GAAnB,EAAwB,CAAxB,KAA8B,IAAID,OAAlC,KAA8CT,CAAC,IAAI,IAAID,MAAM,GAAGA,MAAjB,CAAD,GAA4BS,OAAO,IAAI,IAAIE,GAAG,GAAGA,GAAd,CAAnC,GAAwD,MAAMX,MAAN,GAAeG,IAAI,CAACC,GAAL,CAAS,CAAC,IAAIO,GAAL,KAAa,IAAIA,GAAjB,CAAT,CAArH,CAAP;AACAL,IAAAA,GAAG,IAAIE,IAAP;;AACA,QAAIL,IAAI,CAACE,GAAL,CAASG,IAAT,KAAkB,YAAtB,EAAoC;AAClC,aAAOF,GAAP;AACD;AACF,GAzBgC,CA2BjC;;;AACA,SAAOU,GAAP;AACD","sourcesContent":["import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n"]},"metadata":{},"sourceType":"module"}