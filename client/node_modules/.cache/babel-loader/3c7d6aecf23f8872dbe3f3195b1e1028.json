{"ast":null,"code":"import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { HALF_PI, EPSLN } from '../constants/values';\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\n\nexport function forward(p) {\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  } else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n/* Inverse equations\n  -----------------*/\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  } else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n\n      if (y < 0) {\n        p.y *= -1;\n      }\n\n      return p;\n    }\n\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n}\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","map":{"version":3,"sources":["C:/Users/brand/source/repos/das-server/client/node_modules/proj4/lib/projections/cass.js"],"names":["mlfn","e0fn","e1fn","e2fn","e3fn","gN","adjust_lon","adjust_lat","imlfn","HALF_PI","EPSLN","init","sphere","e0","es","e1","e2","e3","ml0","a","lat0","forward","p","x","y","lam","phi","long0","Math","asin","cos","sin","atan2","tan","sinphi","cosphi","nl","e","tl","al","asq","cl","ml","x0","y0","inverse","dd","ml1","phi1","abs","nl1","rl1","tl1","pow","dl","dsq","names"],"mappings":"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","sourcesContent":["import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n"]},"metadata":{},"sourceType":"module"}