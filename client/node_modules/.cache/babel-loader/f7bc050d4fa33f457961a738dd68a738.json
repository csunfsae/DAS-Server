{"ast":null,"code":"import _slicedToArray from\"C:/Users/brand/source/repos/DAS-Server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState,useLayoutEffect}from'react';import'./HorizontalBar.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function HorizontalBar(props){var horizontalBarRef=useRef(null);var _useState=useState({height:0,width:0}),_useState2=_slicedToArray(_useState,2),svgLength=_useState2[0],setSvgLength=_useState2[1];useLayoutEffect(function(){if(horizontalBarRef.current){setSvgLength({height:horizontalBarRef.current.offsetHeight,width:horizontalBarRef.current.offsetWidth});}},[horizontalBarRef]);var fill=\"#000\";var percentage=parseFloat(parseFloat(parseFloat(props.value-props.min)*100)/parseFloat(props.max-props.min));return/*#__PURE__*/_jsxs(\"div\",{className:\"horizontal-bar\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"horizontal-svg-container svg-container\",ref:horizontalBarRef,children:/*#__PURE__*/_jsx(\"svg\",{className:\"horizontal-svg\",children:/*#__PURE__*/_jsx(\"path\",{className:\"horizontal-svg__path svg__path\",d:\"M 0 0 H \".concat(svgLength.width*percentage/100,\" V \").concat(svgLength.height,\" H 0 L 0 0\"),fill:fill})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"sensor-desc\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"sensor__name\",children:props.sensor}),/*#__PURE__*/_jsx(\"div\",{className:\"sensor__value\",children:props.units===\"%\"?\"\".concat(parseFloat(percentage).toFixed(2),\"%\"):\"\".concat(parseFloat(props.value).toFixed(2),\" \").concat(props.units)})]})]});}export default HorizontalBar;","map":{"version":3,"sources":["C:/Users/brand/source/repos/DAS-Server/client/src/components/livePage/HorizontalBars/HorizontalBar/HorizontalBar.js"],"names":["React","useRef","useState","useLayoutEffect","HorizontalBar","props","horizontalBarRef","height","width","svgLength","setSvgLength","current","offsetHeight","offsetWidth","fill","percentage","parseFloat","value","min","max","sensor","units","toFixed"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAeC,MAAf,CAAuBC,QAAvB,CAAiCC,eAAjC,KAAuD,OAAvD,CACA,MAAO,qBAAP,C,wFAEA,QAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CAE1B,GAAMC,CAAAA,gBAAgB,CAAGL,MAAM,CAAC,IAAD,CAA/B,CAEA,cAAkCC,QAAQ,CAAE,CAAEK,MAAM,CAAE,CAAV,CAAaC,KAAK,CAAE,CAApB,CAAF,CAA1C,wCAAOC,SAAP,eAAkBC,YAAlB,eAEAP,eAAe,CAAE,UAAM,CAEnB,GAAIG,gBAAgB,CAACK,OAArB,CAA8B,CAE1BD,YAAY,CAAE,CACVH,MAAM,CAAED,gBAAgB,CAACK,OAAjB,CAAyBC,YADvB,CAEVJ,KAAK,CAAEF,gBAAgB,CAACK,OAAjB,CAAyBE,WAFtB,CAAF,CAAZ,CAIH,CAEJ,CAVc,CAUZ,CAACP,gBAAD,CAVY,CAAf,CAYA,GAAIQ,CAAAA,IAAI,CAAG,MAAX,CAEA,GAAMC,CAAAA,UAAU,CAAGC,UAAU,CAAEA,UAAU,CAAEA,UAAU,CAACX,KAAK,CAACY,KAAN,CAAcZ,KAAK,CAACa,GAArB,CAAV,CAAsC,GAAxC,CAAV,CAAyDF,UAAU,CAACX,KAAK,CAACc,GAAN,CAAYd,KAAK,CAACa,GAAnB,CAArE,CAA7B,CAEA,mBACI,aAAK,SAAS,CAAC,gBAAf,wBACI,YAAK,SAAS,CAAC,wCAAf,CAAwD,GAAG,CAAEZ,gBAA7D,uBACI,YAAK,SAAS,CAAC,gBAAf,uBACI,aAAM,SAAS,CAAC,gCAAhB,CACI,CAAC,mBAAeG,SAAS,CAACD,KAAV,CAAkBO,UAAnB,CAAiC,GAA/C,eAAyDN,SAAS,CAACF,MAAnE,cADL,CAEI,IAAI,CAAEO,IAFV,EADJ,EADJ,EADJ,cASI,aAAK,SAAS,CAAC,aAAf,wBACI,YAAK,SAAS,CAAC,cAAf,UACKT,KAAK,CAACe,MADX,EADJ,cAII,YAAK,SAAS,CAAC,eAAf,UACMf,KAAK,CAACgB,KAAN,GAAgB,GAAhB,WAAyBL,UAAU,CAACD,UAAD,CAAV,CAAuBO,OAAvB,CAA+B,CAA/B,CAAzB,gBAAmEN,UAAU,CAACX,KAAK,CAACY,KAAP,CAAV,CAAwBK,OAAxB,CAAgC,CAAhC,CAAnE,aAAyGjB,KAAK,CAACgB,KAA/G,CADN,EAJJ,GATJ,GADJ,CAoBH,CAED,cAAejB,CAAAA,aAAf","sourcesContent":["import React, {useRef, useState, useLayoutEffect} from 'react';\r\nimport './HorizontalBar.css';\r\n\r\nfunction HorizontalBar(props) {\r\n\r\n    const horizontalBarRef = useRef(null);\r\n\r\n    const [svgLength, setSvgLength] = useState( { height: 0, width: 0 } );\r\n\r\n    useLayoutEffect( () => {\r\n\r\n        if (horizontalBarRef.current) {\r\n           \r\n            setSvgLength( {\r\n                height: horizontalBarRef.current.offsetHeight,\r\n                width: horizontalBarRef.current.offsetWidth \r\n           })\r\n        }\r\n\r\n    }, [horizontalBarRef])\r\n\r\n    let fill = \"#000\";\r\n\r\n    const percentage = parseFloat( parseFloat( parseFloat(props.value - props.min) * 100) / parseFloat(props.max - props.min) );\r\n\r\n    return (\r\n        <div className=\"horizontal-bar\">\r\n            <div className=\"horizontal-svg-container svg-container\" ref={horizontalBarRef}>\r\n                <svg className=\"horizontal-svg\">\r\n                    <path className=\"horizontal-svg__path svg__path\"\r\n                        d={`M 0 0 H ${ (svgLength.width * percentage) / 100 } V ${svgLength.height} H 0 L 0 0`}\r\n                        fill={fill}\r\n                    />\r\n                </svg>\r\n            </div>\r\n            <div className=\"sensor-desc\">\r\n                <div className=\"sensor__name\">\r\n                    {props.sensor}\r\n                </div>\r\n                <div className=\"sensor__value\">\r\n                    { props.units === \"%\" ? `${parseFloat(percentage).toFixed(2)}%` : `${parseFloat(props.value).toFixed(2)} ${props.units}` } \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HorizontalBar;"]},"metadata":{},"sourceType":"module"}