{"ast":null,"code":"import _defineProperty from\"C:/Users/brand/source/repos/DAS-Server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"C:/Users/brand/source/repos/DAS-Server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"C:/Users/brand/source/repos/DAS-Server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"C:/Users/brand/source/repos/DAS-Server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from'react';import{useForm}from'react-hook-form';import{useSelector,useDispatch}from'react-redux';import{updateSelectedDriveDate,updateSelectedDriveDateIndex,updateModalStepForward,updateModalStepBackwards}from'../../../actions/historyPage/modalActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function DriveDaySelectionForm(props){var _jsx2;var allDriveDays=useSelector(function(state){return state.historyModal.driveDays;});var dispatch=useDispatch();var _useForm=useForm(),handleSubmit=_useForm.handleSubmit,register=_useForm.register;var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var _data$driveDate$split,_data$driveDate$split2,driveDate,driveDateIndex;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_data$driveDate$split=data.driveDate.split(\" \"),_data$driveDate$split2=_slicedToArray(_data$driveDate$split,2),driveDate=_data$driveDate$split2[0],driveDateIndex=_data$driveDate$split2[1];dispatch(updateSelectedDriveDateIndex(Number(driveDateIndex)));dispatch(updateSelectedDriveDate(driveDate));dispatch(updateModalStepForward());case 4:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Select Drive Date\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"select\",{defaultValue:props.driveDateData.selectedDriveDate+\" \"+props.driveDateData.selectedDriveDateIndex,className:\"form-control\",name:\"driveDate\",ref:register,children:allDriveDays.map(function(searchDay,index){return/*#__PURE__*/_jsx(\"option\",{value:searchDay.date+\" \"+index,children:new Date(searchDay.date+\" \").toDateString(\"en-us\")},index);})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:function onClick(){dispatch(updateModalStepBackwards());},className:\"d-block\",children:\" Back \"}),/*#__PURE__*/_jsx(\"button\",(_jsx2={className:\"btn btn-primary\",type:\"submit\"},_defineProperty(_jsx2,\"className\",\"d-block\"),_defineProperty(_jsx2,\"children\",\"Next\"),_jsx2))]})]})]});}export default DriveDaySelectionForm;","map":{"version":3,"sources":["C:/Users/brand/source/repos/das-server/client/src/components/historyPage/forms/DriveDaySelectionForm.js"],"names":["React","useForm","useSelector","useDispatch","updateSelectedDriveDate","updateSelectedDriveDateIndex","updateModalStepForward","updateModalStepBackwards","DriveDaySelectionForm","props","allDriveDays","state","historyModal","driveDays","dispatch","handleSubmit","register","onSubmit","data","driveDate","split","driveDateIndex","Number","driveDateData","selectedDriveDate","selectedDriveDateIndex","map","searchDay","index","date","Date","toDateString"],"mappings":"+oBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,iBAAtB,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CACA,OAAQC,uBAAR,CAAiCC,4BAAjC,CAA+DC,sBAA/D,CAAwFC,wBAAxF,KAAuH,2CAAvH,C,wFAEA,QAASC,CAAAA,qBAAT,CAA+BC,KAA/B,CAAsC,WAElC,GAAMC,CAAAA,YAAY,CAAGR,WAAW,CAAE,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACC,YAAN,CAAmBC,SAA9B,EAAF,CAAhC,CACA,GAAMC,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CACA,aAAiCF,OAAO,EAAxC,CAAOc,YAAP,UAAOA,YAAP,CAAqBC,QAArB,UAAqBA,QAArB,CAEA,GAAMC,CAAAA,QAAQ,0FAAG,iBAAOC,IAAP,kNACuBA,IAAI,CAACC,SAAL,CAAeC,KAAf,CAAqB,GAArB,CADvB,gEACND,SADM,2BACKE,cADL,2BAEbP,QAAQ,CAACT,4BAA4B,CAACiB,MAAM,CAACD,cAAD,CAAP,CAA7B,CAAR,CACAP,QAAQ,CAACV,uBAAuB,CAACe,SAAD,CAAxB,CAAR,CACAL,QAAQ,CAAER,sBAAsB,EAAxB,CAAR,CAJa,sDAAH,kBAARW,CAAAA,QAAQ,4CAAd,CAOA,mBACI,oCACI,yCADJ,cAEI,cAAM,QAAQ,CAAEF,YAAY,CAACE,QAAD,CAA5B,wBACI,YAAK,SAAS,CAAC,YAAf,uBACI,eAAQ,YAAY,CAAER,KAAK,CAACc,aAAN,CAAoBC,iBAApB,CAAwC,GAAxC,CAA8Cf,KAAK,CAACc,aAAN,CAAoBE,sBAAxF,CAAgH,SAAS,CAAC,cAA1H,CAAyI,IAAI,CAAC,WAA9I,CAA0J,GAAG,CAAET,QAA/J,UACKN,YAAY,CAACgB,GAAb,CAAkB,SAACC,SAAD,CAAYC,KAAZ,qBACf,eAAoB,KAAK,CAAED,SAAS,CAACE,IAAV,CAAkB,GAAlB,CAAwBD,KAAnD,UAA2D,GAAIE,CAAAA,IAAJ,CAASH,SAAS,CAACE,IAAV,CAAiB,GAA1B,EAA+BE,YAA/B,CAA4C,OAA5C,CAA3D,EAAaH,KAAb,CADe,EAAlB,CADL,EADJ,EADJ,cASI,aAAK,SAAS,CAAC,QAAf,wBACI,eAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAE,kBAAM,CAACd,QAAQ,CAACP,wBAAwB,EAAzB,CAAR,CAAsC,CAA5E,CAA8E,SAAS,CAAC,SAAxF,oBADJ,cAEI,sBAAQ,SAAS,CAAC,iBAAlB,CAAoC,IAAI,CAAC,QAAzC,oCAA4D,SAA5D,kDAFJ,GATJ,GAFJ,GADJ,CAmBH,CAGD,cAAeC,CAAAA,qBAAf","sourcesContent":["import React from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {updateSelectedDriveDate, updateSelectedDriveDateIndex, updateModalStepForward,  updateModalStepBackwards} from '../../../actions/historyPage/modalActions';\r\n\r\nfunction DriveDaySelectionForm(props) {\r\n    \r\n    const allDriveDays = useSelector( (state) => state.historyModal.driveDays);\r\n    const dispatch = useDispatch();\r\n    const {handleSubmit, register} = useForm();\r\n    \r\n    const onSubmit = async (data) => {\r\n        const [driveDate, driveDateIndex] = data.driveDate.split(\" \");\r\n        dispatch(updateSelectedDriveDateIndex(Number(driveDateIndex)));\r\n        dispatch(updateSelectedDriveDate(driveDate));\r\n        dispatch (updateModalStepForward());\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Select Drive Date</h2>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"form-group\">\r\n                    <select defaultValue={props.driveDateData.selectedDriveDate + \" \" + props.driveDateData.selectedDriveDateIndex} className=\"form-control\" name=\"driveDate\" ref={register}>\r\n                        {allDriveDays.map( (searchDay, index) =>\r\n                            <option key={index} value={searchDay.date  + \" \" + index}>{new Date(searchDay.date + \" \").toDateString(\"en-us\")}</option>\r\n                        )}\r\n                    </select>\r\n                </div>\r\n                \r\n                <div className=\"d-flex\">\r\n                    <button type=\"button\" onClick={() => {dispatch(updateModalStepBackwards() )}} className=\"d-block\"> Back </button>\r\n                    <button className=\"btn btn-primary\" type=\"submit\" className=\"d-block\">Next</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DriveDaySelectionForm;\r\n"]},"metadata":{},"sourceType":"module"}