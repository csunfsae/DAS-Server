{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brand\\\\source\\\\repos\\\\das-server\\\\client\\\\src\\\\components\\\\livePage\\\\SteeringAngle\\\\SteeringAngle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext, useRef, useLayoutEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SocketContext } from '../../../SocketContext';\nimport { updateSteeringAngle } from '../../../actions/livePage/vehicleDynamicsActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SteeringAngle() {\n  _s();\n\n  const socket = useContext(SocketContext);\n  const dispatch = useDispatch();\n  const steeringAngleContainer = useRef(null);\n  const [svgLength, setSvgLength] = useState({\n    height: 0,\n    width: 0\n  });\n  const steering_angle = useSelector(state => state.vehicleDynamics.steeringAngle);\n  useLayoutEffect(() => {\n    if (steeringAngleContainer.current) {\n      setSvgLength({\n        height: steeringAngleContainer.current.offsetHeight,\n        width: steeringAngleContainer.current.offsetWidth\n      });\n    }\n  }, [steeringAngleContainer]);\n  useEffect(() => {\n    socket.on('steering_angle', data => {\n      dispatch(updateSteeringAngle(data));\n    });\n  }, []);\n  let fill = \"#000\";\n  const percentage = parseFloat(parseFloat(8.5 + parseFloat(parseFloat(parseFloat(steering_angle.value - steering_angle.min) * 100) / parseFloat(steering_angle.max - steering_angle.min))));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"horizontal-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensor-desc text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensor__name\",\n        children: \"Steering Angle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensor__value\",\n        children: `${parseFloat(parseFloat(8.5 + parseFloat(steering_angle.value))).toFixed(2)}°`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"horizontal-svg-container svg-container\",\n      ref: steeringAngleContainer,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"horizontal-svg\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          className: \"horizontal-svg__path svg__path\",\n          d: `M ${svgLength.width / 2} 0 H ${svgLength.width * percentage / 100} V ${svgLength.height} H ${svgLength.width / 2}  L ${svgLength.width / 2}  0`,\n          fill: fill\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SteeringAngle, \"jMHIJ2rGY0Go3/RfJWee1FrgifE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SteeringAngle;\nexport default SteeringAngle;\n\nvar _c;\n\n$RefreshReg$(_c, \"SteeringAngle\");","map":{"version":3,"sources":["C:/Users/brand/source/repos/das-server/client/src/components/livePage/SteeringAngle/SteeringAngle.js"],"names":["React","useEffect","useState","useContext","useRef","useLayoutEffect","useSelector","useDispatch","SocketContext","updateSteeringAngle","SteeringAngle","socket","dispatch","steeringAngleContainer","svgLength","setSvgLength","height","width","steering_angle","state","vehicleDynamics","steeringAngle","current","offsetHeight","offsetWidth","on","data","fill","percentage","parseFloat","value","min","max","toFixed"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useContext, useRef, useLayoutEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {SocketContext } from '../../../SocketContext';\r\nimport {updateSteeringAngle} from '../../../actions/livePage/vehicleDynamicsActions'\r\n\r\n\r\nfunction SteeringAngle () {\r\n\r\n    const socket = useContext(SocketContext);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const steeringAngleContainer = useRef(null);\r\n\r\n    const [svgLength, setSvgLength] = useState( { height: 0, width: 0 } );\r\n\r\n    const steering_angle = useSelector( (state) => state.vehicleDynamics.steeringAngle);\r\n\r\n    useLayoutEffect( () => {\r\n\r\n        if (steeringAngleContainer.current) {\r\n           \r\n            setSvgLength( {\r\n                height: steeringAngleContainer.current.offsetHeight,\r\n                width: steeringAngleContainer.current.offsetWidth \r\n           })\r\n        }\r\n\r\n    }, [steeringAngleContainer])\r\n\r\n    useEffect( ()=> {\r\n        socket.on('steering_angle', (data) => {\r\n            dispatch(updateSteeringAngle(data))\r\n        });\r\n    }, [])\r\n\r\n    let fill = \"#000\";\r\n\r\n    const percentage = parseFloat( parseFloat(8.5 + parseFloat( parseFloat( parseFloat(steering_angle.value - steering_angle.min) * 100) / parseFloat(steering_angle.max - steering_angle.min))) );\r\n\r\n    return (\r\n        <div className=\"horizontal-bar\">\r\n            <div className=\"sensor-desc text-center\">\r\n                <div className=\"sensor__name\">\r\n                    Steering Angle\r\n                </div>\r\n                <div className=\"sensor__value\">\r\n                    { `${parseFloat(parseFloat(8.5 + parseFloat(steering_angle.value))).toFixed(2)}°` } \r\n                </div>\r\n            </div>\r\n            <div className=\"horizontal-svg-container svg-container\" ref={steeringAngleContainer}>\r\n                <svg className=\"horizontal-svg\">\r\n                    <path className=\"horizontal-svg__path svg__path\"\r\n                        d={`M ${ svgLength.width / 2 } 0 H ${ (svgLength.width * percentage) / 100 } V ${svgLength.height} H ${ svgLength.width / 2 }  L ${ svgLength.width / 2 }  0`}\r\n                        fill={fill}\r\n                    />\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SteeringAngle;"]},"metadata":{},"sourceType":"module"}