{"ast":null,"code":"import axios from 'axios';\nexport const ADD_NEW_SENSOR_TO_DISPLAYED_SENSORS = \"ADD_NEW_SENSOR_TO_DISPLAYED_SENSORS\";\nexport const ADD_NEW_SESSION_TO_DISPLAYED_SESSIONS = \"ADD_NEW_SESSION_TO_DISPLAYED_SESSIONS\";\nexport const LOAD_SENSORS_FROM_DATABASE = \"LOAD_SENSORS_FROM_DATABASE\";\nexport const LOAD_DEFAULT_SENSOR_DATA = \"LOAD_DEFAULT_SENSOR_DATA\";\nexport const SET_SENSORS_DATA = \"SET_SENSORS_DATA\";\nexport const addNewSensorToDisplayedSensors = sensor => ({\n  type: ADD_NEW_SENSOR_TO_DISPLAYED_SENSORS,\n  payload: sensor\n});\nexport const addNewSessionToDisplayedSessions = session => ({\n  type: ADD_NEW_SESSION_TO_DISPLAYED_SESSIONS,\n  payload: session\n});\nexport const loadDefaultSensorData = () => async (dispatch, getState) => {\n  const lastDriveDay = await axios.get(\"http://localhost:4000/api/v1/drive-days\");\n  const sensorsData = await axios.get(`http://localhost:4000/api/v1/data?dates=${lastDriveDay.data.date}&session_numbers=1&lap_numbers=1,2&sensors=throttlepositions,brakepositions,steeringangles,speeds,batteryvoltages,rltireloads`);\n  dispatch(setSensorsData(sensorsData.data));\n};\nexport const setSensorsData = sensorsData => ({\n  type: SET_SENSORS_DATA,\n  payload: sensorsData\n});","map":{"version":3,"sources":["C:/Users/brand/source/repos/das-server/client/src/actions/historyPage/historicalPageActions.js"],"names":["axios","ADD_NEW_SENSOR_TO_DISPLAYED_SENSORS","ADD_NEW_SESSION_TO_DISPLAYED_SESSIONS","LOAD_SENSORS_FROM_DATABASE","LOAD_DEFAULT_SENSOR_DATA","SET_SENSORS_DATA","addNewSensorToDisplayedSensors","sensor","type","payload","addNewSessionToDisplayedSessions","session","loadDefaultSensorData","dispatch","getState","lastDriveDay","get","sensorsData","data","date","setSensorsData"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,mCAAmC,GAAG,qCAA5C;AACP,OAAO,MAAMC,qCAAqC,GAAG,uCAA9C;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,8BAA8B,GAAGC,MAAM,KAAK;AACrDC,EAAAA,IAAI,EAAEP,mCAD+C;AAErDQ,EAAAA,OAAO,EAAEF;AAF4C,CAAL,CAA7C;AAKP,OAAO,MAAMG,gCAAgC,GAAGC,OAAO,KAAK;AACxDH,EAAAA,IAAI,EAAEN,qCADkD;AAExDO,EAAAA,OAAO,EAAEE;AAF+C,CAAL,CAAhD;AAKP,OAAO,MAAMC,qBAAqB,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACrE,QAAMC,YAAY,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAU,yCAAV,CAA3B;AACA,QAAMC,WAAW,GAAG,MAAMjB,KAAK,CAACgB,GAAN,CAAW,2CAA0CD,YAAY,CAACG,IAAb,CAAkBC,IAAK,+HAA5E,CAA1B;AACAN,EAAAA,QAAQ,CAACO,cAAc,CAACH,WAAW,CAACC,IAAb,CAAf,CAAR;AACH,CAJM;AAMP,OAAO,MAAME,cAAc,GAAGH,WAAW,KAAK;AAC1CT,EAAAA,IAAI,EAAEH,gBADoC;AAE1CI,EAAAA,OAAO,EAAEQ;AAFiC,CAAL,CAAlC","sourcesContent":["import axios from 'axios';\r\n\r\nexport const ADD_NEW_SENSOR_TO_DISPLAYED_SENSORS = \"ADD_NEW_SENSOR_TO_DISPLAYED_SENSORS\";\r\nexport const ADD_NEW_SESSION_TO_DISPLAYED_SESSIONS = \"ADD_NEW_SESSION_TO_DISPLAYED_SESSIONS\";\r\nexport const LOAD_SENSORS_FROM_DATABASE = \"LOAD_SENSORS_FROM_DATABASE\";\r\nexport const LOAD_DEFAULT_SENSOR_DATA = \"LOAD_DEFAULT_SENSOR_DATA\";\r\nexport const SET_SENSORS_DATA = \"SET_SENSORS_DATA\";\r\n\r\nexport const addNewSensorToDisplayedSensors = sensor => ({\r\n    type: ADD_NEW_SENSOR_TO_DISPLAYED_SENSORS, \r\n    payload: sensor\r\n})\r\n\r\nexport const addNewSessionToDisplayedSessions = session => ({\r\n    type: ADD_NEW_SESSION_TO_DISPLAYED_SESSIONS, \r\n    payload: session\r\n})\r\n\r\nexport const loadDefaultSensorData = () => async (dispatch, getState) => {\r\n    const lastDriveDay = await axios.get(\"http://localhost:4000/api/v1/drive-days\");\r\n    const sensorsData = await axios.get(`http://localhost:4000/api/v1/data?dates=${lastDriveDay.data.date}&session_numbers=1&lap_numbers=1,2&sensors=throttlepositions,brakepositions,steeringangles,speeds,batteryvoltages,rltireloads`);\r\n    dispatch(setSensorsData(sensorsData.data))\r\n}\r\n\r\nexport const setSensorsData = sensorsData => ({\r\n    type: SET_SENSORS_DATA,\r\n    payload: sensorsData\r\n})\r\n\r\n"]},"metadata":{},"sourceType":"module"}