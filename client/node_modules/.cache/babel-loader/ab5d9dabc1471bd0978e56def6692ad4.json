{"ast":null,"code":"import React,{useRef,useLayoutEffect,memo}from'react';import{useSelector,useDispatch}from'react-redux';import{select,line,curveCardinalClosed}from'd3';import{updateGPSMapSvgDimensions}from'../../../actions/livePage/gpsActions';import{jsx as _jsx}from\"react/jsx-runtime\";function TrackPath(){var trackPath=useRef(null);var dispatch=useDispatch();var GPSTrackCoordinates=useSelector(function(state){return state.gps.gpsTrackCoordinates;});var firstLap=useSelector(function(state){return state.gps.firstLap;});var trackLine=line().x(function(p){return p.x;}).y(function(p){return p.y;}).curve(curveCardinalClosed);useLayoutEffect(function(){if(trackPath.current){var path=select(trackPath.current);path.data([GPSTrackCoordinates]).join(\"path\").attr(\"d\",function(value){return trackLine(value);}).attr(\"fill\",\"none\").attr(\"stroke\",\"black\").attr(\"stroke-width\",\"2px\");var _path$_groups$0$0$get=path._groups[0][0].getBBox(),x=_path$_groups$0$0$get.x,y=_path$_groups$0$0$get.y,width=_path$_groups$0$0$get.width,height=_path$_groups$0$0$get.height;var pathDimensions={x:x,y:y,width:width,height:height};if(pathDimensions.x!==0){dispatch(updateGPSMapSvgDimensions(pathDimensions));}}},[trackPath,firstLap]);return/*#__PURE__*/_jsx(\"path\",{ref:trackPath});}export default/*#__PURE__*/memo(TrackPath);","map":{"version":3,"sources":["C:/Users/brand/source/repos/DAS-Server/client/src/components/livePage/TrackPath/TrackPath.js"],"names":["React","useRef","useLayoutEffect","memo","useSelector","useDispatch","select","line","curveCardinalClosed","updateGPSMapSvgDimensions","TrackPath","trackPath","dispatch","GPSTrackCoordinates","state","gps","gpsTrackCoordinates","firstLap","trackLine","x","p","y","curve","current","path","data","join","attr","value","_groups","getBBox","width","height","pathDimensions"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,MAAf,CAAuBC,eAAvB,CAAwCC,IAAxC,KAAmD,OAAnD,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CACA,OAAQC,MAAR,CAAgBC,IAAhB,CAAsBC,mBAAtB,KAAgD,IAAhD,CACA,OAAQC,yBAAR,KAAwC,sCAAxC,C,2CAEA,QAASC,CAAAA,SAAT,EAAqB,CAEjB,GAAMC,CAAAA,SAAS,CAAGV,MAAM,CAAC,IAAD,CAAxB,CACA,GAAMW,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CAEA,GAAMQ,CAAAA,mBAAmB,CAAGT,WAAW,CAAE,SAACU,KAAD,QAAWA,CAAAA,KAAK,CAACC,GAAN,CAAUC,mBAArB,EAAF,CAAvC,CACA,GAAMC,CAAAA,QAAQ,CAAGb,WAAW,CAAE,SAACU,KAAD,QAAWA,CAAAA,KAAK,CAACC,GAAN,CAAUE,QAArB,EAAF,CAA5B,CACA,GAAMC,CAAAA,SAAS,CAAGX,IAAI,GAAGY,CAAP,CAAU,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACD,CAAT,EAAV,EAAsBE,CAAtB,CAAyB,SAACD,CAAD,QAAOA,CAAAA,CAAC,CAACC,CAAT,EAAzB,EAAqCC,KAArC,CAA2Cd,mBAA3C,CAAlB,CAEAN,eAAe,CAAE,UAAM,CAEnB,GAAIS,SAAS,CAACY,OAAd,CAAuB,CACnB,GAAMC,CAAAA,IAAI,CAAGlB,MAAM,CAACK,SAAS,CAACY,OAAX,CAAnB,CACAC,IAAI,CAACC,IAAL,CAAU,CAACZ,mBAAD,CAAV,EAAiCa,IAAjC,CAAsC,MAAtC,EAA8CC,IAA9C,CAAmD,GAAnD,CAAwD,SAAAC,KAAK,QAAIV,CAAAA,SAAS,CAACU,KAAD,CAAb,EAA7D,EAAmFD,IAAnF,CAAwF,MAAxF,CAAgG,MAAhG,EAAwGA,IAAxG,CAA6G,QAA7G,CAAuH,OAAvH,EAAgIA,IAAhI,CAAqI,cAArI,CAAqJ,KAArJ,EACA,0BAA2BH,IAAI,CAACK,OAAL,CAAa,CAAb,EAAgB,CAAhB,EAAmBC,OAAnB,EAA3B,CAAOX,CAAP,uBAAOA,CAAP,CAASE,CAAT,uBAASA,CAAT,CAAWU,KAAX,uBAAWA,KAAX,CAAiBC,MAAjB,uBAAiBA,MAAjB,CACA,GAAMC,CAAAA,cAAc,CAAG,CAACd,CAAC,CAAEA,CAAJ,CAAOE,CAAC,CAAEA,CAAV,CAAaU,KAAK,CAAEA,KAApB,CAA2BC,MAAM,CAAEA,MAAnC,CAAvB,CAEA,GAAIC,cAAc,CAACd,CAAf,GAAqB,CAAzB,CAA6B,CACzBP,QAAQ,CAACH,yBAAyB,CAACwB,cAAD,CAA1B,CAAR,CACH,CACJ,CACJ,CAZc,CAYZ,CAACtB,SAAD,CAAYM,QAAZ,CAZY,CAAf,CAeA,mBACI,aAAM,GAAG,CAAEN,SAAX,EADJ,CAGH,CAED,2BAAeR,IAAI,CAACO,SAAD,CAAnB","sourcesContent":["import React, {useRef, useLayoutEffect, memo} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {select, line, curveCardinalClosed} from 'd3';\r\nimport {updateGPSMapSvgDimensions} from '../../../actions/livePage/gpsActions'\r\n\r\nfunction TrackPath() {\r\n\r\n    const trackPath = useRef(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const GPSTrackCoordinates = useSelector( (state) => state.gps.gpsTrackCoordinates);\r\n    const firstLap = useSelector( (state) => state.gps.firstLap);\r\n    const trackLine = line().x( (p) => p.x).y( (p) => p.y).curve(curveCardinalClosed);\r\n\r\n    useLayoutEffect( () => {\r\n\r\n        if (trackPath.current) {\r\n            const path = select(trackPath.current);\r\n            path.data([GPSTrackCoordinates]).join(\"path\").attr(\"d\", value => trackLine(value)).attr(\"fill\", \"none\").attr(\"stroke\", \"black\").attr(\"stroke-width\", \"2px\");\r\n            const {x,y,width,height} = path._groups[0][0].getBBox();\r\n            const pathDimensions = {x: x, y: y, width: width, height: height};\r\n            \r\n            if (pathDimensions.x !== 0 ) {\r\n                dispatch(updateGPSMapSvgDimensions(pathDimensions))\r\n            }\r\n        }\r\n    }, [trackPath, firstLap])\r\n  \r\n\r\n    return (\r\n        <path ref={trackPath}></path>\r\n    ) \r\n}\r\n\r\nexport default memo(TrackPath);"]},"metadata":{},"sourceType":"module"}