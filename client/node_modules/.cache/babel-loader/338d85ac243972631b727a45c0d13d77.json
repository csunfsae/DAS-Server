{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/brand/source/repos/DAS-Server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/brand/source/repos/DAS-Server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from'react';import{GoogleLogin}from'react-google-login';import{jsx as _jsx}from\"react/jsx-runtime\";function Login(){var onSuccess=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(googleData){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"/api/v1/auth/google/user?tokenId=\".concat(encodeURIComponent(googleData.tokenId)),{method:\"Get\",credentials:'include',headers:{\"Content-Type\":\"application/json\"}});case 2:res=_context.sent;if(res.status===200){window.location.reload(true);}else{alert(\"User not found. Please sign up or try a different user.\");}case 4:case\"end\":return _context.stop();}}},_callee);}));return function onSuccess(_x){return _ref.apply(this,arguments);};}();var onFailure=function onFailure(res){alert(\"Google authentication failed.\",res);};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(GoogleLogin,{clientId:process.env.REACT_APP_GOOGLE_CLIENT_ID,buttonText:\"Login\",onSuccess:onSuccess,onFailure:onFailure,cookiePolicy:'single_host_origin',style:{marginTop:'100px'},isSignedIn:true})});}export default Login;","map":{"version":3,"sources":["C:/Users/brand/source/repos/DAS-Server/client/src/components/login/Login.js"],"names":["React","GoogleLogin","Login","onSuccess","googleData","fetch","encodeURIComponent","tokenId","method","credentials","headers","res","status","window","location","reload","alert","onFailure","process","env","REACT_APP_GOOGLE_CLIENT_ID","marginTop"],"mappings":"qUAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,oBAA5B,C,2CAEA,QAASC,CAAAA,KAAT,EAAiB,CACf,GAAMC,CAAAA,SAAS,0FAAG,iBAAMC,UAAN,gJACEC,CAAAA,KAAK,4CAAqCC,kBAAkB,CAACF,UAAU,CAACG,OAAZ,CAAvD,EAA+E,CACpGC,MAAM,CAAE,KAD4F,CAEpGC,WAAW,CAAE,SAFuF,CAGpGC,OAAO,CAAE,CACP,eAAgB,kBADT,CAH2F,CAA/E,CADP,QACVC,GADU,eAQhB,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACtBC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB,EACD,CAFD,IAEO,CACLC,KAAK,CAAC,yDAAD,CAAL,CACD,CAZe,sDAAH,kBAATb,CAAAA,SAAS,4CAAf,CAeA,GAAMc,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACN,GAAD,CAAS,CACzBK,KAAK,CAAC,+BAAD,CAAkCL,GAAlC,CAAL,CACD,CAFD,CAIA,mBACE,kCACE,KAAC,WAAD,EACE,QAAQ,CAAEO,OAAO,CAACC,GAAR,CAAYC,0BADxB,CAEE,UAAU,CAAC,OAFb,CAGE,SAAS,CAAEjB,SAHb,CAIE,SAAS,CAAEc,SAJb,CAKE,YAAY,CAAE,oBALhB,CAME,KAAK,CAAE,CAAEI,SAAS,CAAE,OAAb,CANT,CAOE,UAAU,CAAE,IAPd,EADF,EADF,CAaD,CAED,cAAenB,CAAAA,KAAf","sourcesContent":["import React from 'react';\r\nimport { GoogleLogin } from 'react-google-login';\r\n\r\nfunction Login() {\r\n  const onSuccess = async googleData => {\r\n    const res = await fetch(`/api/v1/auth/google/user?tokenId=${encodeURIComponent(googleData.tokenId)}`, {\r\n      method: \"Get\",\r\n      credentials: 'include',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n    if (res.status === 200) {\r\n      window.location.reload(true);\r\n    } else {\r\n      alert(\"User not found. Please sign up or try a different user.\")\r\n    }\r\n  };\r\n\r\n  const onFailure = (res) => {\r\n    alert(\"Google authentication failed.\", res)\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <GoogleLogin\r\n        clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\r\n        buttonText=\"Login\"\r\n        onSuccess={onSuccess}\r\n        onFailure={onFailure}\r\n        cookiePolicy={'single_host_origin'}\r\n        style={{ marginTop: '100px' }}\r\n        isSignedIn={true}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}