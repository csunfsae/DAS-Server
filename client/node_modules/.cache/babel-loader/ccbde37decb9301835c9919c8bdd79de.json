{"ast":null,"code":"import _slicedToArray from\"C:/Users/brand/source/repos/DAS-Server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState,useLayoutEffect}from'react';import'./VerticalBar.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function VerticalBar(props){var verticalBarRef=useRef(null);var _useState=useState({height:0,width:0}),_useState2=_slicedToArray(_useState,2),svgLength=_useState2[0],setSvgLength=_useState2[1];useLayoutEffect(function(){if(verticalBarRef.current){setSvgLength({height:verticalBarRef.current.offsetHeight,width:verticalBarRef.current.offsetWidth});}},[verticalBarRef]);var percentage=parseFloat(parseFloat(parseFloat(props.value-props.min)*100)/parseFloat(props.max-props.min));return/*#__PURE__*/_jsxs(\"div\",{className:\"vertial-bar\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"vertical-svg-container svg-container\",ref:verticalBarRef,children:/*#__PURE__*/_jsx(\"svg\",{className:\"vertical-svg\",children:/*#__PURE__*/_jsx(\"path\",{className:\"vertical-svg__path svg__path\",d:\"M 0 \".concat(svgLength.height,\" V \").concat(svgLength.height-svgLength.height*percentage/100,\" H \").concat(svgLength.width,\" V \").concat(svgLength.height,\" L 0 \").concat(svgLength.height),fill:\"#000\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"vertical-bar__desc\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"desc__sensor_name text-center\",children:props.sensor}),/*#__PURE__*/_jsx(\"div\",{className:\"desc__sensor_percent text-center\",children:props.units===\"%\"?\"\".concat(parseFloat(percentage).toFixed(2),\"%\"):\"\".concat(props.value,\" \").concat(props.units)})]})]});}export default VerticalBar;","map":{"version":3,"sources":["C:/Users/brand/source/repos/DAS-Server/client/src/components/livePage/VerticalBar/VerticalBar.js"],"names":["React","useRef","useState","useLayoutEffect","VerticalBar","props","verticalBarRef","height","width","svgLength","setSvgLength","current","offsetHeight","offsetWidth","percentage","parseFloat","value","min","max","sensor","units","toFixed"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAeC,MAAf,CAAuBC,QAAvB,CAAiCC,eAAjC,KAAuD,OAAvD,CACA,MAAO,mBAAP,C,wFAEA,QAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,CAExB,GAAMC,CAAAA,cAAc,CAAGL,MAAM,CAAC,IAAD,CAA7B,CAEA,cAAkCC,QAAQ,CAAE,CAAEK,MAAM,CAAE,CAAV,CAAaC,KAAK,CAAE,CAApB,CAAF,CAA1C,wCAAOC,SAAP,eAAkBC,YAAlB,eAEAP,eAAe,CAAE,UAAM,CAEnB,GAAIG,cAAc,CAACK,OAAnB,CAA4B,CAExBD,YAAY,CAAE,CACVH,MAAM,CAAED,cAAc,CAACK,OAAf,CAAuBC,YADrB,CAEVJ,KAAK,CAAEF,cAAc,CAACK,OAAf,CAAuBE,WAFpB,CAAF,CAAZ,CAIH,CAEJ,CAVc,CAUZ,CAACP,cAAD,CAVY,CAAf,CAYA,GAAMQ,CAAAA,UAAU,CAAGC,UAAU,CAAEA,UAAU,CAAEA,UAAU,CAACV,KAAK,CAACW,KAAN,CAAcX,KAAK,CAACY,GAArB,CAAV,CAAsC,GAAxC,CAAV,CAAyDF,UAAU,CAACV,KAAK,CAACa,GAAN,CAAYb,KAAK,CAACY,GAAnB,CAArE,CAA7B,CAEA,mBACI,aAAK,SAAS,CAAC,aAAf,wBACI,YAAK,SAAS,CAAC,sCAAf,CAAsD,GAAG,CAAEX,cAA3D,uBACI,YAAK,SAAS,CAAC,cAAf,uBACI,aAAM,SAAS,CAAC,8BAAhB,CACI,CAAC,eAASG,SAAS,CAACF,MAAnB,eAA+BE,SAAS,CAACF,MAAV,CAAoBE,SAAS,CAACF,MAAV,CAAmBO,UAApB,CAAkC,GAApF,eAA6FL,SAAS,CAACD,KAAvG,eAAkHC,SAAS,CAACF,MAA5H,iBAA0IE,SAAS,CAACF,MAApJ,CADL,CAEI,IAAI,CAAE,MAFV,EADJ,EADJ,EADJ,cASI,aAAK,SAAS,CAAC,oBAAf,wBACI,YAAK,SAAS,CAAC,+BAAf,UACKF,KAAK,CAACc,MADX,EADJ,cAII,YAAK,SAAS,CAAC,kCAAf,UACMd,KAAK,CAACe,KAAN,GAAgB,GAAhB,WAAyBL,UAAU,CAACD,UAAD,CAAV,CAAuBO,OAAvB,CAA+B,CAA/B,CAAzB,gBAAmEhB,KAAK,CAACW,KAAzE,aAAkFX,KAAK,CAACe,KAAxF,CADN,EAJJ,GATJ,GADJ,CAoBH,CAED,cAAehB,CAAAA,WAAf","sourcesContent":["import React, {useRef, useState, useLayoutEffect} from 'react';\r\nimport './VerticalBar.css';\r\n\r\nfunction VerticalBar(props) {\r\n\r\n    const verticalBarRef = useRef(null);\r\n\r\n    const [svgLength, setSvgLength] = useState( { height: 0, width: 0 } );\r\n\r\n    useLayoutEffect( () => {\r\n\r\n        if (verticalBarRef.current) {\r\n           \r\n            setSvgLength( {\r\n                height: verticalBarRef.current.offsetHeight,\r\n                width: verticalBarRef.current.offsetWidth \r\n           })\r\n        }\r\n\r\n    }, [verticalBarRef])\r\n\r\n    const percentage = parseFloat( parseFloat( parseFloat(props.value - props.min) * 100) / parseFloat(props.max - props.min) );\r\n\r\n    return (\r\n        <div className=\"vertial-bar\">\r\n            <div className=\"vertical-svg-container svg-container\" ref={verticalBarRef}>\r\n                <svg className=\"vertical-svg\">\r\n                    <path className=\"vertical-svg__path svg__path\"\r\n                        d={`M 0 ${svgLength.height} V ${svgLength.height - (svgLength.height * percentage) / 100} H ${svgLength.width} V ${svgLength.height} L 0 ${svgLength.height}`}\r\n                        fill={\"#000\"}\r\n                    />\r\n                </svg>\r\n            </div>\r\n            <div className=\"vertical-bar__desc\">\r\n                <div className=\"desc__sensor_name text-center\">\r\n                    {props.sensor}\r\n                </div>\r\n                <div className=\"desc__sensor_percent text-center\">\r\n                    { props.units === \"%\" ? `${parseFloat(percentage).toFixed(2)}%` : `${props.value} ${props.units}` } \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VerticalBar;"]},"metadata":{},"sourceType":"module"}