{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brand\\\\source\\\\repos\\\\das-server\\\\client\\\\src\\\\components\\\\livePage\\\\HorizontalBars\\\\HorizontalBar\\\\HorizontalBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useLayoutEffect } from 'react';\nimport './HorizontalBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HorizontalBar(props) {\n  _s();\n\n  const horizontalBarRef = useRef(null);\n  const [svgLength, setSvgLength] = useState({\n    height: 0,\n    width: 0\n  });\n  useLayoutEffect(() => {\n    if (horizontalBarRef.current) {\n      setSvgLength({\n        height: horizontalBarRef.current.offsetHeight,\n        width: horizontalBarRef.current.offsetWidth\n      });\n    }\n  }, [horizontalBarRef]);\n  let fill = \"#000\";\n  const percentage = parseFloat(parseFloat(parseFloat(props.value - props.min) * 100) / parseFloat(props.max - props.min));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"horizontal-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"horizontal-svg-container svg-container\",\n      ref: horizontalBarRef,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"horizontal-svg\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          className: \"horizontal-svg__path svg__path\",\n          d: `M 0 0 H ${svgLength.width * percentage / 100} V ${svgLength.height} H 0 L 0 0`,\n          fill: fill\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensor-desc\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensor__name\",\n        children: props.sensor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensor__value\",\n        children: props.units === \"%\" ? `${parseFloat(percentage).toFixed(2)}%` : `${parseFloat(props.value).toFixed(2)} ${props.units}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HorizontalBar, \"/MC2XzeKIipcPYo/OPrExkFf1Ys=\");\n\n_c = HorizontalBar;\nexport default HorizontalBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizontalBar\");","map":{"version":3,"sources":["C:/Users/brand/source/repos/das-server/client/src/components/livePage/HorizontalBars/HorizontalBar/HorizontalBar.js"],"names":["React","useRef","useState","useLayoutEffect","HorizontalBar","props","horizontalBarRef","svgLength","setSvgLength","height","width","current","offsetHeight","offsetWidth","fill","percentage","parseFloat","value","min","max","sensor","units","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,EAAiCC,eAAjC,QAAuD,OAAvD;AACA,OAAO,qBAAP;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAE1B,QAAMC,gBAAgB,GAAGL,MAAM,CAAC,IAAD,CAA/B;AAEA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAE;AAAEO,IAAAA,MAAM,EAAE,CAAV;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAAF,CAA1C;AAEAP,EAAAA,eAAe,CAAE,MAAM;AAEnB,QAAIG,gBAAgB,CAACK,OAArB,EAA8B;AAE1BH,MAAAA,YAAY,CAAE;AACVC,QAAAA,MAAM,EAAEH,gBAAgB,CAACK,OAAjB,CAAyBC,YADvB;AAEVF,QAAAA,KAAK,EAAEJ,gBAAgB,CAACK,OAAjB,CAAyBE;AAFtB,OAAF,CAAZ;AAIH;AAEJ,GAVc,EAUZ,CAACP,gBAAD,CAVY,CAAf;AAYA,MAAIQ,IAAI,GAAG,MAAX;AAEA,QAAMC,UAAU,GAAGC,UAAU,CAAEA,UAAU,CAAEA,UAAU,CAACX,KAAK,CAACY,KAAN,GAAcZ,KAAK,CAACa,GAArB,CAAV,GAAsC,GAAxC,CAAV,GAAyDF,UAAU,CAACX,KAAK,CAACc,GAAN,GAAYd,KAAK,CAACa,GAAnB,CAArE,CAA7B;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,wCAAf;AAAwD,MAAA,GAAG,EAAEZ,gBAA7D;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,gCAAhB;AACI,UAAA,CAAC,EAAG,WAAYC,SAAS,CAACG,KAAV,GAAkBK,UAAnB,GAAiC,GAAK,MAAKR,SAAS,CAACE,MAAO,YAD/E;AAEI,UAAA,IAAI,EAAEK;AAFV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,kBACKT,KAAK,CAACe;AADX;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBACMf,KAAK,CAACgB,KAAN,KAAgB,GAAhB,GAAuB,GAAEL,UAAU,CAACD,UAAD,CAAV,CAAuBO,OAAvB,CAA+B,CAA/B,CAAkC,GAA3D,GAAiE,GAAEN,UAAU,CAACX,KAAK,CAACY,KAAP,CAAV,CAAwBK,OAAxB,CAAgC,CAAhC,CAAmC,IAAGjB,KAAK,CAACgB,KAAM;AAD3H;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GA1CQjB,a;;KAAAA,a;AA4CT,eAAeA,aAAf","sourcesContent":["import React, {useRef, useState, useLayoutEffect} from 'react';\r\nimport './HorizontalBar.css';\r\n\r\nfunction HorizontalBar(props) {\r\n\r\n    const horizontalBarRef = useRef(null);\r\n\r\n    const [svgLength, setSvgLength] = useState( { height: 0, width: 0 } );\r\n\r\n    useLayoutEffect( () => {\r\n\r\n        if (horizontalBarRef.current) {\r\n           \r\n            setSvgLength( {\r\n                height: horizontalBarRef.current.offsetHeight,\r\n                width: horizontalBarRef.current.offsetWidth \r\n           })\r\n        }\r\n\r\n    }, [horizontalBarRef])\r\n\r\n    let fill = \"#000\";\r\n\r\n    const percentage = parseFloat( parseFloat( parseFloat(props.value - props.min) * 100) / parseFloat(props.max - props.min) );\r\n\r\n    return (\r\n        <div className=\"horizontal-bar\">\r\n            <div className=\"horizontal-svg-container svg-container\" ref={horizontalBarRef}>\r\n                <svg className=\"horizontal-svg\">\r\n                    <path className=\"horizontal-svg__path svg__path\"\r\n                        d={`M 0 0 H ${ (svgLength.width * percentage) / 100 } V ${svgLength.height} H 0 L 0 0`}\r\n                        fill={fill}\r\n                    />\r\n                </svg>\r\n            </div>\r\n            <div className=\"sensor-desc\">\r\n                <div className=\"sensor__name\">\r\n                    {props.sensor}\r\n                </div>\r\n                <div className=\"sensor__value\">\r\n                    { props.units === \"%\" ? `${parseFloat(percentage).toFixed(2)}%` : `${parseFloat(props.value).toFixed(2)} ${props.units}` } \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HorizontalBar;"]},"metadata":{},"sourceType":"module"}