{"ast":null,"code":"// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675))))));\n  this.cbg[0] = n * (-2 + n * (2 / 3 + n * (4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * (-13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * (-24832 / 14175)));\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n  this.utg[0] = n * (-0.5 + n * (2 / 3 + n * (-37 / 96 + n * (1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  } else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  } else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","map":{"version":3,"sources":["C:/Users/brand/source/repos/DAS-Server/client/node_modules/proj4/lib/projections/etmerc.js"],"names":["tmerc","sinh","hypot","asinhy","gatg","clens","clens_cmplx","adjust_lon","init","approx","isNaN","es","Error","apply","forward","inverse","x0","undefined","y0","long0","lat0","cgb","cbg","utg","gtu","f","Math","sqrt","n","np","pow","Qn","k0","Z","Zb","p","Ce","x","Cn","y","sin_Cn","sin","cos_Cn","cos","sin_Ce","cos_Ce","atan2","tan","tmp","abs","a","Infinity","lon","lat","atan","names"],"mappings":"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","sourcesContent":["// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n"]},"metadata":{},"sourceType":"module"}