{"ast":null,"code":"import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n\n  if (arguments.length === 2) {\n    var def = arguments[1];\n\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      } else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  } else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function (v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        } else {\n          defs(v);\n        }\n      });\n    } else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    } else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    } else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    } else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    } else {\n      console.log(name);\n    }\n\n    return;\n  }\n}\n\nglobals(defs);\nexport default defs;","map":{"version":3,"sources":["C:/Users/brand/source/repos/DAS-Server/client/node_modules/proj4/lib/defs.js"],"names":["globals","parseProj","wkt","defs","name","that","arguments","length","def","charAt","Array","isArray","map","v","apply","EPSG","ESRI","IAU2000","console","log"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,UAApB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,YAAhB;;AAEA,SAASC,IAAT,CAAcC,IAAd,EAAoB;AAClB;AACA,MAAIC,IAAI,GAAG,IAAX;;AACA,MAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,QAAIC,GAAG,GAAGF,SAAS,CAAC,CAAD,CAAnB;;AACA,QAAI,OAAOE,GAAP,KAAe,QAAnB,EAA6B;AAC3B,UAAIA,GAAG,CAACC,MAAJ,CAAW,CAAX,MAAkB,GAAtB,EAA2B;AACzBN,QAAAA,IAAI,CAACC,IAAD,CAAJ,GAAaH,SAAS,CAACK,SAAS,CAAC,CAAD,CAAV,CAAtB;AACD,OAFD,MAGK;AACHH,QAAAA,IAAI,CAACC,IAAD,CAAJ,GAAaF,GAAG,CAACI,SAAS,CAAC,CAAD,CAAV,CAAhB;AACD;AACF,KAPD,MAOO;AACLH,MAAAA,IAAI,CAACC,IAAD,CAAJ,GAAaI,GAAb;AACD;AACF,GAZD,MAaK,IAAIF,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC/B,QAAIG,KAAK,CAACC,OAAN,CAAcP,IAAd,CAAJ,EAAyB;AACvB,aAAOA,IAAI,CAACQ,GAAL,CAAS,UAASC,CAAT,EAAY;AAC1B,YAAIH,KAAK,CAACC,OAAN,CAAcE,CAAd,CAAJ,EAAsB;AACpBV,UAAAA,IAAI,CAACW,KAAL,CAAWT,IAAX,EAAiBQ,CAAjB;AACD,SAFD,MAGK;AACHV,UAAAA,IAAI,CAACU,CAAD,CAAJ;AACD;AACF,OAPM,CAAP;AAQD,KATD,MAUK,IAAI,OAAOT,IAAP,KAAgB,QAApB,EAA8B;AACjC,UAAIA,IAAI,IAAID,IAAZ,EAAkB;AAChB,eAAOA,IAAI,CAACC,IAAD,CAAX;AACD;AACF,KAJI,MAKA,IAAI,UAAUA,IAAd,EAAoB;AACvBD,MAAAA,IAAI,CAAC,UAAUC,IAAI,CAACW,IAAhB,CAAJ,GAA4BX,IAA5B;AACD,KAFI,MAGA,IAAI,UAAUA,IAAd,EAAoB;AACvBD,MAAAA,IAAI,CAAC,UAAUC,IAAI,CAACY,IAAhB,CAAJ,GAA4BZ,IAA5B;AACD,KAFI,MAGA,IAAI,aAAaA,IAAjB,EAAuB;AAC1BD,MAAAA,IAAI,CAAC,aAAaC,IAAI,CAACa,OAAnB,CAAJ,GAAkCb,IAAlC;AACD,KAFI,MAGA;AACHc,MAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;AACD;;AACD;AACD;AAGF;;AACDJ,OAAO,CAACG,IAAD,CAAP;AACA,eAAeA,IAAf","sourcesContent":["import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n"]},"metadata":{},"sourceType":"module"}