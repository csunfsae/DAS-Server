{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brand\\\\source\\\\repos\\\\DAS-Server\\\\client\\\\src\\\\components\\\\livePage\\\\HorizontalBars\\\\HorizontalBars.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext } from 'react';\nimport HorizontalBar from '../HorizontalBars/HorizontalBar/HorizontalBar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SocketContext } from '../../../SocketContext';\nimport { updateBatteryVoltage, updateMotorTemp, updateMotorControllerAirTemp } from '../../../actions/livePage/monitoringActions.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HorizontalBars() {\n  _s();\n\n  const socket = useContext(SocketContext);\n  const battery_voltage = useSelector(state => state.monitoring.batteryVoltage);\n  const motor_temp = useSelector(state => state.monitoring.motorTemp);\n  const motor_controller_air_temp = useSelector(state => state.monitoring.motorControllerAirTemp);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    socket.on('battery_voltage', data => {\n      dispatch(updateBatteryVoltage(data));\n    });\n    socket.on('motor_temp', data => {\n      dispatch(updateMotorTemp(data));\n    });\n    socket.on('motor_controller_air_temp', data => {\n      dispatch(updateMotorControllerAirTemp(data));\n    });\n  }, [socket, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"horizontal-bars-container\",\n    style: {\n      marginTop: \"48px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(HorizontalBar, {\n      sensor: \"Battery Voltage\",\n      min: battery_voltage.min,\n      value: battery_voltage.value,\n      max: battery_voltage.max,\n      units: \"V\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HorizontalBar, {\n      sensor: \"Motor Temp\",\n      min: motor_temp.min,\n      value: motor_temp.value,\n      max: motor_temp.max,\n      units: \"째F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HorizontalBar, {\n      sensor: \"Motor Controller Air Temp\",\n      min: motor_controller_air_temp.min,\n      value: motor_controller_air_temp.value,\n      max: motor_controller_air_temp.max,\n      units: \"째F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HorizontalBars, \"rtyUbJe4MxRD8yidq9PBBC2Yw6M=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = HorizontalBars;\nexport default HorizontalBars;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizontalBars\");","map":{"version":3,"sources":["C:/Users/brand/source/repos/DAS-Server/client/src/components/livePage/HorizontalBars/HorizontalBars.js"],"names":["React","useEffect","useContext","HorizontalBar","useSelector","useDispatch","SocketContext","updateBatteryVoltage","updateMotorTemp","updateMotorControllerAirTemp","HorizontalBars","socket","battery_voltage","state","monitoring","batteryVoltage","motor_temp","motorTemp","motor_controller_air_temp","motorControllerAirTemp","dispatch","on","data","marginTop","min","value","max"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA4C,OAA5C;AACA,OAAOC,aAAP,MAA0B,+CAA1B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,aAAR,QAA6B,wBAA7B;AACA,SAAQC,oBAAR,EAA8BC,eAA9B,EAA+CC,4BAA/C,QAAkF,gDAAlF;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AAEtB,QAAMC,MAAM,GAAGT,UAAU,CAACI,aAAD,CAAzB;AAEA,QAAMM,eAAe,GAAGR,WAAW,CAAGS,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBC,cAA9B,CAAnC;AACA,QAAMC,UAAU,GAAGZ,WAAW,CAAGS,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBG,SAA9B,CAA9B;AACA,QAAMC,yBAAyB,GAAGd,WAAW,CAAGS,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBK,sBAA9B,CAA7C;AAEA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AAEAJ,EAAAA,SAAS,CAAE,MAAM;AAEbU,IAAAA,MAAM,CAACU,EAAP,CAAU,iBAAV,EAA8BC,IAAD,IAAU;AACnCF,MAAAA,QAAQ,CAACb,oBAAoB,CAACe,IAAD,CAArB,CAAR;AACD,KAFH;AAIEX,IAAAA,MAAM,CAACU,EAAP,CAAU,YAAV,EAAyBC,IAAD,IAAU;AAChCF,MAAAA,QAAQ,CAACZ,eAAe,CAACc,IAAD,CAAhB,CAAR;AACD,KAFD;AAIAX,IAAAA,MAAM,CAACU,EAAP,CAAU,2BAAV,EAAwCC,IAAD,IAAU;AAC/CF,MAAAA,QAAQ,CAACX,4BAA4B,CAACa,IAAD,CAA7B,CAAR;AACD,KAFD;AAIH,GAdM,EAcJ,CAACX,MAAD,EAASS,QAAT,CAdI,CAAT;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAA2C,IAAA,KAAK,EAAE;AAACG,MAAAA,SAAS,EAAE;AAAZ,KAAlD;AAAA,4BACI,QAAC,aAAD;AAAe,MAAA,MAAM,EAAE,iBAAvB;AAA0C,MAAA,GAAG,EAAEX,eAAe,CAACY,GAA/D;AAAoE,MAAA,KAAK,EAAEZ,eAAe,CAACa,KAA3F;AAAkG,MAAA,GAAG,EAAEb,eAAe,CAACc,GAAvH;AAA4H,MAAA,KAAK,EAAE;AAAnI;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,aAAD;AAAe,MAAA,MAAM,EAAE,YAAvB;AAAqC,MAAA,GAAG,EAAEV,UAAU,CAACQ,GAArD;AAA0D,MAAA,KAAK,EAAER,UAAU,CAACS,KAA5E;AAAmF,MAAA,GAAG,EAAET,UAAU,CAACU,GAAnG;AAAwG,MAAA,KAAK,EAAE;AAA/G;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,aAAD;AAAe,MAAA,MAAM,EAAE,2BAAvB;AAAoD,MAAA,GAAG,EAAER,yBAAyB,CAACM,GAAnF;AAAwF,MAAA,KAAK,EAAEN,yBAAyB,CAACO,KAAzH;AAAgI,MAAA,GAAG,EAAEP,yBAAyB,CAACQ,GAA/J;AAAoK,MAAA,KAAK,EAAE;AAA3K;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAjCQhB,c;UAImBN,W,EACLA,W,EACeA,W,EAEjBC,W;;;KARZK,c;AAmCT,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useContext} from 'react';\r\nimport HorizontalBar from '../HorizontalBars/HorizontalBar/HorizontalBar';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {SocketContext } from '../../../SocketContext';\r\nimport {updateBatteryVoltage, updateMotorTemp, updateMotorControllerAirTemp} from '../../../actions/livePage/monitoringActions.js'\r\n\r\nfunction HorizontalBars() {\r\n\r\n    const socket = useContext(SocketContext);\r\n\r\n    const battery_voltage = useSelector( (state) => state.monitoring.batteryVoltage);\r\n    const motor_temp = useSelector( (state) => state.monitoring.motorTemp);\r\n    const motor_controller_air_temp = useSelector( (state) => state.monitoring.motorControllerAirTemp);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect( () => {\r\n\r\n        socket.on('battery_voltage', (data) => {\r\n            dispatch(updateBatteryVoltage(data))\r\n          });\r\n\r\n          socket.on('motor_temp', (data) => {\r\n            dispatch(updateMotorTemp(data))\r\n          });\r\n\r\n          socket.on('motor_controller_air_temp', (data) => {\r\n            dispatch(updateMotorControllerAirTemp(data))\r\n          });\r\n\r\n      }, [socket, dispatch]);\r\n          \r\n    return (\r\n        <div className=\"horizontal-bars-container\" style={{marginTop: \"48px\"}}>\r\n            <HorizontalBar sensor={\"Battery Voltage\"} min={battery_voltage.min} value={battery_voltage.value} max={battery_voltage.max} units={\"V\"}/>\r\n            <HorizontalBar sensor={\"Motor Temp\"} min={motor_temp.min} value={motor_temp.value} max={motor_temp.max} units={\"째F\"}/>\r\n            <HorizontalBar sensor={\"Motor Controller Air Temp\"} min={motor_controller_air_temp.min} value={motor_controller_air_temp.value} max={motor_controller_air_temp.max} units={\"째F\"}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HorizontalBars;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}